class H extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}static get observedAttributes(){return["size","color","text","image","icon","rounded","variant"]}connectedCallback(){this.render()}attributeChangedCallback(){this.render()}get size(){let s=this.getAttribute("size")||"medium";return{"x-small":"24px",small:"36px",medium:"48px",large:"64px","x-large":"84px"}[s]||(isNaN(parseInt(s))?"48px":`${s}px`)}get color(){return this.getAttribute("color")||"#1976D2"}get textColor(){return this.getAttribute("text-color")||"#FFFFFF"}get text(){return this.getAttribute("text")||""}get image(){return this.getAttribute("image")||""}get icon(){return this.getAttribute("icon")||""}get rounded(){return this.hasAttribute("rounded")}get variant(){return this.getAttribute("variant")||"flat"}createStyles(){let s=this.rounded?"50%":"4px",h=this.variant==="flat"?this.color:"transparent",o=this.variant==="outlined"?`2px solid ${this.color}`:"none";return`
        :host {
          display: inline-block;
        }
        
        .vc-avatar {
          display: flex;
          align-items: center;
          justify-content: center;
          width: ${this.size};
          height: ${this.size};
          background-color: ${h};
          color: ${this.textColor};
          border-radius: ${s};
          border: ${o};
          overflow: hidden;
          user-select: none;
          font-family: "Roboto", sans-serif;
          font-weight: 500;
          position: relative;
        }
        
        .vc-avatar-content {
          width: 100%;
          height: 100%;
          display: flex;
          align-items: center;
          justify-content: center;
        }
        
        .vc-avatar-text {
          font-size: calc(${this.size} * 0.4);
          text-transform: uppercase;
        }
        
        .vc-avatar-image {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
        
        .vc-avatar-icon {
          width: 60%;
          height: 60%;
          fill: currentColor;
        }
      `}render(){let s=this.createStyles(),h="";if(this.image)h=`<img class="vc-avatar-image" src="${this.image}" alt="avatar">`;else if(this.icon)h=`<span class="vc-avatar-icon material-icons">${this.icon}</span>`;else if(this.text)h=`<span class="vc-avatar-text">${this.text.length>2?this.text.substring(0,2):this.text}</span>`;this.shadowRoot.innerHTML=`
        <style>${s}</style>
        <div class="vc-avatar">
          <div class="vc-avatar-content">
            ${h}
          </div>
        </div>
      `}}customElements.define("vc-avatar",H);var qs=H;class J extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._content="",this._dot=!1,this._color="primary",this._bordered=!1,this._inline=!1,this._offset={x:0,y:0},this._max=1/0,this._modelValue=!0,this._position="top-right"}static get observedAttributes(){return["content","dot","color","bordered","inline","offset-x","offset-y","max","model-value","position"]}attributeChangedCallback(s,h,o){switch(s){case"content":this._content=o;break;case"dot":this._dot=o!==null;break;case"color":this._color=o;break;case"bordered":this._bordered=o!==null;break;case"inline":this._inline=o!==null;break;case"offset-x":this._offset.x=parseInt(o)||0;break;case"offset-y":this._offset.y=parseInt(o)||0;break;case"max":this._max=parseInt(o)||1/0;break;case"model-value":this._modelValue=o===null?!0:o!=="false";break;case"position":this._position=o||"top-right";break}this._render()}connectedCallback(){this._render()}_render(){let h={primary:"#1976D2",secondary:"#424242",success:"#4CAF50",error:"#FF5252",warning:"#FB8C00",info:"#2196F3"}[this._color]||this._color,o=this._dot?"":this._formatContent(),r={"top-right":{top:"-8px",right:"-8px"},"top-left":{top:"-8px",left:"-8px"},"bottom-right":{bottom:"-8px",right:"-8px"},"bottom-left":{bottom:"-8px",left:"-8px"}},b=r[this._position]||r["top-right"];this.shadowRoot.innerHTML=`
        <style>
          :host {
            display: ${this._inline?"inline-flex":"block"};
            position: relative;
          }
          
          .badge-wrapper {
            position: relative;
          }
          
          .badge {
            position: absolute;
            display: ${this._modelValue?"flex":"none"};
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: 500;
            color: white;
            background-color: ${h};
            border-radius: ${this._dot?"50%":"10px"};
            min-width: ${this._dot?"8px":"20px"};
            height: ${this._dot?"8px":"20px"};
            padding: ${this._dot?"0":"0 6px"};
            box-sizing: border-box;
            transform: translate(${this._offset.x}px, ${this._offset.y}px);
            z-index: 1;
            ${b.top?`top: ${b.top};`:""}
            ${b.right?`right: ${b.right};`:""}
            ${b.bottom?`bottom: ${b.bottom};`:""}
            ${b.left?`left: ${b.left};`:""}
            ${this._bordered?"border: 2px solid white;":""}
            transition: all 0.2s ease-in-out;
          }
        </style>
        
        <div class="badge-wrapper">
          <slot></slot>
          <div class="badge">${o}</div>
        </div>
      `}_formatContent(){if(!this._content)return"";let s=isNaN(parseInt(this._content))?this._content:parseInt(this._content);if(typeof s==="number"&&s>this._max)return`${this._max}+`;return s}}customElements.define("vc-badge",J);var Hs=J;class K extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._size="normal",this._icon="add",this._extended=!1,this._label="",this._disabled=!1,this._color="primary",this.render()}static get observedAttributes(){return["size","icon","extended","label","disabled","color"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"size":this._size=o;break;case"icon":this._icon=o;break;case"extended":this._extended=o!==null;break;case"label":this._label=o;break;case"disabled":this._disabled=o!==null;break;case"color":this._color=o;break}this.render()}get size(){return this._size}set size(s){if(s===this._size)return;if(s==="normal"||s==="mini")this.setAttribute("size",s);else console.warn('Invalid size value. Use "normal" or "mini".')}get icon(){return this._icon}set icon(s){if(s===this._icon)return;this.setAttribute("icon",s)}get extended(){return this._extended}set extended(s){if(Boolean(s)===this._extended)return;if(s)this.setAttribute("extended","");else this.removeAttribute("extended")}get label(){return this._label}set label(s){if(s===this._label)return;this.setAttribute("label",s)}get disabled(){return this._disabled}set disabled(s){if(Boolean(s)===this._disabled)return;if(s)this.setAttribute("disabled","");else this.removeAttribute("disabled")}get color(){return this._color}set color(s){if(s===this._color)return;if(s==="primary"||s==="secondary"||s==="surface")this.setAttribute("color",s);else console.warn('Invalid color value. Use "primary", "secondary", or "surface".')}connectedCallback(){this.addEventListener("click",this._handleClick),this.addEventListener("keydown",this._handleKeyDown)}disconnectedCallback(){this.removeEventListener("click",this._handleClick),this.removeEventListener("keydown",this._handleKeyDown)}_handleClick=(s)=>{if(this._disabled){s.preventDefault(),s.stopPropagation();return}let h=new CustomEvent("fab-click",{bubbles:!0,composed:!0,detail:{source:this}});this.dispatchEvent(h)};_handleKeyDown=(s)=>{if(this._disabled)return;if(s.key==="Enter"||s.key===" ")s.preventDefault(),this._handleClick(s)};render(){let s=["fab",this._size==="mini"?"fab--mini":"",this._extended?"fab--extended":"",this._disabled?"fab--disabled":"",`fab--${this._color}`].filter(Boolean).join(" ");this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: inline-block;
          --md-fab-primary-color: #6200ee;
          --md-fab-primary-color-hover: #6f16ff;
          --md-fab-on-primary-color: #ffffff;
          --md-fab-secondary-color: #03dac6;
          --md-fab-secondary-color-hover: #02f2d6;
          --md-fab-on-secondary-color: #000000;
          --md-fab-surface-color: #ffffff;
          --md-fab-surface-color-hover: #f2f2f2;
          --md-fab-on-surface-color: #000000;
          --md-fab-disabled-color: #e0e0e0;
          --md-fab-on-disabled-color: #9e9e9e;
          --md-fab-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 
                            0 6px 10px 0 rgba(0, 0, 0, 0.14), 
                            0 1px 18px 0 rgba(0, 0, 0, 0.12);
          --md-fab-shadow-hover: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 
                                  0 8px 10px 1px rgba(0, 0, 0, 0.14), 
                                  0 3px 14px 2px rgba(0, 0, 0, 0.12);
        }
        
        .fab {
          display: flex;
          align-items: center;
          justify-content: center;
          border: none;
          outline: none;
          border-radius: 28px;
          cursor: pointer;
          user-select: none;
          -webkit-tap-highlight-color: transparent;
          transition: box-shadow 0.2s ease, background-color 0.2s ease;
          box-shadow: var(--md-fab-shadow);
          height: 56px;
          width: 56px;
          padding: 0;
          position: relative;
          overflow: hidden;
        }
        
        .fab:focus-visible {
          outline: 2px solid currentColor;
          outline-offset: 2px;
        }
        
        .fab:after {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background-color: currentColor;
          opacity: 0;
          transition: opacity 0.2s ease;
          pointer-events: none;
        }
        
        .fab:hover:after {
          opacity: 0.08;
        }
        
        .fab:active:after {
          opacity: 0.12;
        }
        
        .fab--mini {
          height: 40px;
          width: 40px;
          border-radius: 20px;
        }
        
        .fab--extended {
          width: auto;
          min-width: 56px;
          padding: 0 20px;
          border-radius: 28px;
        }
        
        .fab--mini.fab--extended {
          height: 40px;
          min-width: 40px;
          padding: 0 16px;
        }
        
        .fab--primary {
          background-color: var(--md-fab-primary-color);
          color: var(--md-fab-on-primary-color);
        }
        
        .fab--primary:hover {
          background-color: var(--md-fab-primary-color-hover);
          box-shadow: var(--md-fab-shadow-hover);
        }
        
        .fab--secondary {
          background-color: var(--md-fab-secondary-color);
          color: var(--md-fab-on-secondary-color);
        }
        
        .fab--secondary:hover {
          background-color: var(--md-fab-secondary-color-hover);
          box-shadow: var(--md-fab-shadow-hover);
        }
        
        .fab--surface {
          background-color: var(--md-fab-surface-color);
          color: var(--md-fab-on-surface-color);
        }
        
        .fab--surface:hover {
          background-color: var(--md-fab-surface-color-hover);
          box-shadow: var(--md-fab-shadow-hover);
        }
        
        .fab--disabled {
          background-color: var(--md-fab-disabled-color);
          color: var(--md-fab-on-disabled-color);
          box-shadow: none;
          cursor: not-allowed;
          pointer-events: none;
        }
        
        .fab--disabled:hover:after,
        .fab--disabled:active:after {
          opacity: 0;
        }
        
        .fab__icon {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 24px;
          height: 24px;
          font-family: 'Material Icons';
          font-weight: normal;
          font-style: normal;
          font-size: 24px;
          line-height: 1;
          letter-spacing: normal;
          text-transform: none;
          white-space: nowrap;
          word-wrap: normal;
          direction: ltr;
          -webkit-font-smoothing: antialiased;
          text-rendering: optimizeLegibility;
        }
        
        .fab--extended .fab__icon {
          margin-right: ${this._label?"12px":"0"};
        }
        
        .fab--mini .fab__icon {
          font-size: 18px;
          width: 18px;
          height: 18px;
        }
        
        .fab__label {
          font-family: Roboto, sans-serif;
          font-size: 14px;
          font-weight: 500;
          letter-spacing: 0.1px;
          text-transform: uppercase;
          white-space: nowrap;
        }
      </style>
      <button class="${s}" role="button" aria-disabled="${this._disabled}" tabindex="${this._disabled?"-1":"0"}">
        <span class="fab__icon">${this._icon}</span>
        ${this._extended&&this._label?`<span class="fab__label">${this._label}</span>`:""}
      </button>
    `}}customElements.define("vc-fab",K);var Js=K;class Z extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._items=[],this._twoLine=!1,this._avatar=!1,this._interactive=!1,this._dense=!1,this._dividers=!1,this.render()}static get observedAttributes(){return["two-line","avatar","interactive","dense","dividers"]}attributeChangedCallback(s,h,o){if(h!==o){switch(s){case"two-line":this._twoLine=o!==null;break;case"avatar":this._avatar=o!==null;break;case"interactive":this._interactive=o!==null;break;case"dense":this._dense=o!==null;break;case"dividers":this._dividers=o!==null;break}this.render()}}connectedCallback(){this.upgradeItems(),this.render(),this._observer=new MutationObserver((s)=>{let h=!1;if(s.forEach((o)=>{if(o.type==="childList")h=!0}),h)this.upgradeItems(),this.render()}),this._observer.observe(this,{childList:!0,subtree:!0})}disconnectedCallback(){if(this._observer)this._observer.disconnect()}upgradeItems(){if(this._items=Array.from(this.querySelectorAll("vc-list-item")),this._interactive)this._items.forEach((s)=>{if(!s._listenerAttached)s.addEventListener("click",this._handleItemClick.bind(this)),s._listenerAttached=!0})}_handleItemClick(s){let h=s.currentTarget,o=new CustomEvent("vc-list-item-click",{bubbles:!0,composed:!0,detail:{item:h,index:this._items.indexOf(h)}});this.dispatchEvent(o)}render(){let s=`
      :host {
        display: block;
        font-family: Roboto, sans-serif;
        color: rgba(0, 0, 0, 0.87);
        background-color: #fff;
        border-radius: 4px;
      }
      
      ::slotted(vc-list-item) {
        display: flex;
        position: relative;
        align-items: center;
        padding: ${this._dense?"8px 16px":"16px"};
        min-height: ${this._dense?"40px":"48px"};
        transition: background-color 0.15s ease;
      }
      
      ${this._interactive?`
        ::slotted(vc-list-item) {
          cursor: pointer;
        }
        
        ::slotted(vc-list-item:hover) {
          background-color: rgba(0, 0, 0, 0.04);
        }
      `:""}
      
      ${this._dividers?`
        ::slotted(vc-list-item:not(:last-child))::after {
          content: '';
          position: absolute;
          left: 0;
          right: 0;
          bottom: 0;
          height: 1px;
          background-color: rgba(0, 0, 0, 0.12);
        }
      `:""}
      
      ::slotted(vc-list-item[selected]) {
        background-color: rgba(0, 0, 0, 0.12);
      }
    `;this.shadowRoot.innerHTML=`
      <style>${s}</style>
      <slot></slot>
    `}}class X extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._selected=!1,this.render()}static get observedAttributes(){return["selected"]}attributeChangedCallback(s,h,o){if(h!==o&&s==="selected")this._selected=o!==null,this.render()}connectedCallback(){this.render()}get selected(){return this._selected}set selected(s){if(s)this.setAttribute("selected","");else this.removeAttribute("selected")}render(){this.shadowRoot.innerHTML=`
      <style>
      :host {
        display: flex;
        flex-direction: row;
        align-items: center;
        width: 100%;
        box-sizing: border-box;
      }
      
      .avatar-slot {
        display: flex;
        margin-right: 16px;
        flex-shrink: 0;
      }
      
      .content {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        min-width: 0;
      }
      
      .primary {
        font-size: 16px;
        line-height: 1.5;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
      
      .secondary {
        font-size: 14px;
        line-height: 1.25;
        color: rgba(0, 0, 0, 0.54);
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
      
      .meta-slot {
        margin-left: 16px;
        flex-shrink: 0;
      }
    </style>
      <div class="avatar-slot">
        <slot name="avatar"></slot>
      </div>
      <div class="content">
        <div class="primary">
          <slot name="primary"></slot>
          <slot></slot>
        </div>
        <div class="secondary">
          <slot name="secondary"></slot>
        </div>
      </div>
      <div class="meta-slot">
        <slot name="meta"></slot>
      </div>
    `}}customElements.define("vc-list",Z);customElements.define("vc-list-item",X);class Q extends HTMLElement{static get observedAttributes(){return["variant","columns","gap"]}constructor(){super();this.attachShadow({mode:"open"}),this._variant="standard",this._columns=3,this._gap=8,this._render()}connectedCallback(){this._updateItems()}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"variant":this._variant=o||"standard";break;case"columns":this._columns=parseInt(o)||3;break;case"gap":this._gap=parseInt(o)||8;break}this._render(),this._updateItems()}get variant(){return this._variant}set variant(s){this.setAttribute("variant",s)}get columns(){return this._columns}set columns(s){this.setAttribute("columns",s)}get gap(){return this._gap}set gap(s){this.setAttribute("gap",s)}_render(){let s=`
        :host {
          display: block;
          box-sizing: border-box;
        }
        
        .vc-image-list {
          display: grid;
          grid-template-columns: repeat(${this._columns}, 1fr);
          gap: ${this._gap}px;
          padding: 0;
          margin: 0;
          list-style: none;
        }
        
        .vc-image-list.masonry {
          grid-auto-rows: 0;
        }
        
        .vc-image-list.quilted .item {
          grid-row: span var(--row-span, 1);
          grid-column: span var(--col-span, 1);
        }
        
        .item {
          position: relative;
          overflow: hidden;
          border-radius: 4px;
          background-color: #f0f0f0;
        }
        
        .item-image {
          width: 100%;
          height: 100%;
          object-fit: cover;
          display: block;
        }
        
        .item-content {
          display: flex;
          flex-direction: column;
          padding: 8px 16px;
          background-color: rgba(255, 255, 255, 0.9);
        }
        
        .with-text-protection .item-content {
          position: absolute;
          bottom: 0;
          left: 0;
          right: 0;
        }
        
        .item-primary-text {
          font-size: 16px;
          font-weight: 500;
          margin: 0;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
        
        .item-secondary-text {
          font-size: 14px;
          color: rgba(0, 0, 0, 0.6);
          margin: 0;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      `;this.shadowRoot.innerHTML=`
        <style>${s}</style>
        <ul class="vc-image-list ${this._variant}">
          <slot></slot>
        </ul>
      `}_updateItems(){if(this._variant==="masonry")this._setupMasonry();else if(this._variant==="quilted")this._setupQuilted()}_setupMasonry(){let s=Array.from(this.children),h=this.shadowRoot.querySelector(".vc-image-list");s.forEach((o)=>{o.style.gridRowEnd=""}),Promise.all(s.map((o)=>{let r=o.querySelector("img");if(!r)return Promise.resolve();if(r.complete)return Promise.resolve();return new Promise((b)=>{r.onload=b,r.onerror=b})})).then(()=>{s.forEach((o)=>{let r=o.querySelector("img");if(r){let b=r.naturalHeight/r.naturalWidth;o.style.gridRowEnd=`span ${Math.ceil(b*10)}`}})})}_setupQuilted(){let s=Array.from(this.children),h=[{colSpan:2,rowSpan:2},{colSpan:1,rowSpan:1},{colSpan:1,rowSpan:1},{colSpan:1,rowSpan:2},{colSpan:2,rowSpan:1}];s.forEach((o,r)=>{let b=h[r%h.length];o.style.setProperty("--col-span",b.colSpan),o.style.setProperty("--row-span",b.rowSpan)})}}class Y extends HTMLElement{static get observedAttributes(){return["primary-text","secondary-text","text-protection"]}constructor(){super();this.attachShadow({mode:"open"}),this._primaryText="",this._secondaryText="",this._textProtection=!1,this._render()}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"primary-text":this._primaryText=o||"";break;case"secondary-text":this._secondaryText=o||"";break;case"text-protection":this._textProtection=o!==null;break}this._render()}get primaryText(){return this._primaryText}set primaryText(s){this.setAttribute("primary-text",s)}get secondaryText(){return this._secondaryText}set secondaryText(s){this.setAttribute("secondary-text",s)}get textProtection(){return this._textProtection}set textProtection(s){if(s)this.setAttribute("text-protection","");else this.removeAttribute("text-protection")}_render(){let s=`
        :host {
          display: block;
        }
        
        .item {
          height: 100%;
          position: relative;
          overflow: hidden;
          border-radius: 4px;
          background-color: #f0f0f0;
        }
        
        .item-image-container {
          height: 100%;
          width: 100%;
        }
        
        ::slotted(img) {
          width: 100%;
          height: 100%;
          object-fit: cover;
          display: block;
        }
        
        .item-content {
          display: ${this._primaryText||this._secondaryText?"flex":"none"};
          flex-direction: column;
          padding: 8px 16px;
          background-color: ${this._textProtection?"rgba(255, 255, 255, 0.9)":"white"};
          ${this._textProtection?"position: absolute; bottom: 0; left: 0; right: 0;":""}
        }
        
        .item-primary-text {
          font-size: 16px;
          font-weight: 500;
          margin: 0;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
        
        .item-secondary-text {
          font-size: 14px;
          color: rgba(0, 0, 0, 0.6);
          margin: 0;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      `;this.shadowRoot.innerHTML=`
        <style>${s}</style>
        <div class="item">
          <div class="item-image-container">
            <slot></slot>
          </div>
          <div class="item-content">
            ${this._primaryText?`<p class="item-primary-text">${this._primaryText}</p>`:""}
            ${this._secondaryText?`<p class="item-secondary-text">${this._secondaryText}</p>`:""}
          </div>
        </div>
      `}}customElements.define("vc-image-list",Q);customElements.define("vc-image-list-item",Y);class C extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._render()}static get observedAttributes(){return["title","subtitle","elevation","outlined","image"]}attributeChangedCallback(s,h,o){if(h!==o)this._render()}connectedCallback(){this._render()}get title(){return this.getAttribute("title")||""}set title(s){this.setAttribute("title",s)}get subtitle(){return this.getAttribute("subtitle")||""}set subtitle(s){this.setAttribute("subtitle",s)}get elevation(){return parseInt(this.getAttribute("elevation")||"1",10)}set elevation(s){this.setAttribute("elevation",s)}get outlined(){return this.hasAttribute("outlined")}set outlined(s){if(s)this.setAttribute("outlined","");else this.removeAttribute("outlined")}get image(){return this.getAttribute("image")||""}set image(s){this.setAttribute("image",s)}_render(){let h=this.outlined?"outlined":`elevation-${this.elevation}`,o=this.image?`<div class="card-media" style="background-image: url('${this.image}')"></div>`:"",r=this.title||this.subtitle?`<div class="card-header">
         ${this.title?`<h2 class="card-title">${this.title}</h2>`:""}
         ${this.subtitle?`<p class="card-subtitle">${this.subtitle}</p>`:""}
       </div>`:"";this.shadowRoot.innerHTML=`
      <style>
      :host {
        display: inline-block;
        width: 100%;
        box-sizing: border-box;
        font-family: Roboto, 'Helvetica Neue', sans-serif;
      }
      
      .card {
        background-color: #fff;
        border-radius: 4px;
        overflow: hidden;
        transition: box-shadow 0.3s ease-in-out;
        width: 100%;
        box-sizing: border-box;
      }
      
      .card.outlined {
        border: 1px solid rgba(0, 0, 0, 0.12);
        box-shadow: none !important;
      }
      
      .card.elevation-1 { box-shadow: 0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12); }
      .card.elevation-2 { box-shadow: 0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12); }
      .card.elevation-3 { box-shadow: 0 3px 3px -2px rgba(0,0,0,.2), 0 3px 4px 0 rgba(0,0,0,.14), 0 1px 8px 0 rgba(0,0,0,.12); }
      .card.elevation-4 { box-shadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12); }
      .card.elevation-5 { box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 5px 8px 0 rgba(0,0,0,.14), 0 1px 14px 0 rgba(0,0,0,.12); }
      
      .card-media {
        width: 100%;
        background-size: cover;
        background-position: center;
        padding-top: 56.25%; /* 16:9 aspect ratio */
        position: relative;
      }
      
      .card-header {
        padding: 16px 16px 0;
      }
      
      .card-title {
        margin: 0;
        font-size: 20px;
        font-weight: 500;
        line-height: 1.4;
        color: rgba(0, 0, 0, 0.87);
      }
      
      .card-subtitle {
        margin: 0;
        font-size: 14px;
        line-height: 1.4;
        color: rgba(0, 0, 0, 0.6);
        margin-top: 4px;
      }
      
      .card-content {
        padding: 16px;
        font-size: 14px;
        line-height: 1.5;
        color: rgba(0, 0, 0, 0.6);
      }
      
      .card-actions {
        display: flex;
        padding: 8px;
        box-sizing: border-box;
        align-items: center;
        border-top: 1px solid rgba(0, 0, 0, 0.12);
      }
      
      ::slotted(button) {
        margin: 0 8px 0 0;
        padding: 0 8px;
        min-width: 64px;
        height: 36px;
        line-height: 36px;
        background: transparent;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        font-weight: 500;
        text-transform: uppercase;
        cursor: pointer;
        color: #6200ee;
        transition: background-color 0.3s;
      }
      
      ::slotted(button:hover) {
        background-color: rgba(98, 0, 238, 0.04);
      }
      
      ::slotted(button:focus) {
        outline: none;
        background-color: rgba(98, 0, 238, 0.12);
      }
    </style>
      <div class="card ${h}">
        ${o}
        ${r}
        <div class="card-content">
          <slot name="content"></slot>
        </div>
        <div class="card-actions">
          <slot name="actions"></slot>
        </div>
      </div>
    `}}customElements.define("vc-card",C);var Ks=C;class W extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._removable=!1,this._disabled=!1,this._color=""}static get observedAttributes(){return["removable","disabled","color","icon"]}connectedCallback(){this.render(),this.setupEventListeners()}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"removable":this._removable=o!==null;break;case"disabled":this._disabled=o!==null;break;case"color":this._color=o;break;case"icon":this._icon=o;break}if(this.shadowRoot.querySelector(".chip"))this.render(),this.setupEventListeners()}setupEventListeners(){let s=this.shadowRoot.querySelector(".chip__remove");if(s)s.addEventListener("click",(o)=>{if(o.stopPropagation(),!this._disabled)this.dispatchEvent(new CustomEvent("remove",{bubbles:!0,composed:!0}))});this.shadowRoot.querySelector(".chip").addEventListener("click",()=>{if(!this._disabled)this.dispatchEvent(new CustomEvent("click",{bubbles:!0,composed:!0}))})}render(){let s=["chip",this._disabled?"chip--disabled":"",this._color?`chip--${this._color}`:""].filter(Boolean).join(" ");this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: inline-block;
          margin: 4px;
        }
        
        .chip {
          font-family: Roboto, 'Segoe UI', Arial, sans-serif;
          font-size: 14px;
          height: 32px;
          border-radius: 16px;
          background-color: #e0e0e0;
          color: rgba(0, 0, 0, 0.87);
          display: inline-flex;
          align-items: center;
          padding: 0 12px;
          cursor: pointer;
          outline: none;
          border: none;
          transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);
          user-select: none;
        }
        
        .chip:hover {
          background-color: #d5d5d5;
        }
        
        .chip:focus {
          box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
        }
        
        .chip--disabled {
          opacity: 0.6;
          cursor: default;
          pointer-events: none;
        }
        
        .chip--primary {
          background-color: #1976d2;
          color: white;
        }
        
        .chip--primary:hover {
          background-color: #1565c0;
        }
        
        .chip--secondary {
          background-color: #9c27b0;
          color: white;
        }
        
        .chip--secondary:hover {
          background-color: #8e24aa;
        }
        
        .chip--success {
          background-color: #4caf50;
          color: white;
        }
        
        .chip--success:hover {
          background-color: #43a047;
        }
        
        .chip--warning {
          background-color: #ff9800;
          color: white;
        }
        
        .chip--warning:hover {
          background-color: #fb8c00;
        }
        
        .chip--error {
          background-color: #f44336;
          color: white;
        }
        
        .chip--error:hover {
          background-color: #e53935;
        }
        
        .chip__icon {
          margin-right: 8px;
          margin-left: -4px;
          font-size: 18px;
          width: 18px;
          height: 18px;
          display: inline-flex;
          align-items: center;
          justify-content: center;
        }
        
        .chip__remove {
          margin-right: -4px;
          margin-left: 8px;
          font-size: 18px;
          width: 18px;
          height: 18px;
          display: inline-flex;
          align-items: center;
          justify-content: center;
          cursor: pointer;
          border-radius: 50%;
          transition: background-color 0.28s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .chip__remove:hover {
          background-color: rgba(0, 0, 0, 0.1);
        }
        
        .chip--primary .chip__remove:hover,
        .chip--secondary .chip__remove:hover,
        .chip--success .chip__remove:hover,
        .chip--warning .chip__remove:hover,
        .chip--error .chip__remove:hover {
          background-color: rgba(255, 255, 255, 0.2);
        }
      </style>
      <div class="${s}">
        ${this._icon?`<span class="chip__icon">${this._icon}</span>`:""}
        <slot></slot>
        ${this._removable?'<span class="chip__remove">✕</span>':""}
      </div>
    `}}customElements.define("vc-chip",W);var Zs=W;class E extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._disabled=!1,this._variant="contained",this._color="primary",this._size="medium",this._render()}static get observedAttributes(){return["disabled","variant","color","size"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"disabled":this._disabled=o!==null;break;case"variant":this._variant=o||"contained";break;case"color":this._color=o||"primary";break;case"size":this._size=o||"medium";break}this._render()}get disabled(){return this._disabled}set disabled(s){if(s)this.setAttribute("disabled","");else this.removeAttribute("disabled")}get variant(){return this._variant}set variant(s){this.setAttribute("variant",s)}get color(){return this._color}set color(s){this.setAttribute("color",s)}get size(){return this._size}set size(s){this.setAttribute("size",s)}_getStyles(){return`
      :host {
        display: inline-block;
        font-family: Roboto, sans-serif;
      }
      
      .vc-btn {
        position: relative;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        box-sizing: border-box;
        min-width: 64px;
        border: none;
        outline: none;
        line-height: 1.75;
        border-radius: 4px;
        font-weight: 500;
        font-size: 0.875rem;
        letter-spacing: 0.02857em;
        text-transform: uppercase;
        cursor: pointer;
        text-decoration: none;
        transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
                    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
                    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
                    color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
        user-select: none;
        -webkit-appearance: none;
        overflow: hidden;
      }
      
      .vc-btn::-moz-focus-inner {
        border-style: none;
      }
      
      .vc-btn:focus {
        outline: none;
      }
      
      .vc-btn-small {
        padding: 4px 10px;
        font-size: 0.8125rem;
      }
      
      .vc-btn-medium {
        padding: 6px 16px;
      }
      
      .vc-btn-large {
        padding: 8px 22px;
        font-size: 0.9375rem;
      }
      
      /* Contained button styles */
      .vc-btn-contained {
        box-shadow: 0px 3px 1px -2px rgba(0,0,0,0.2),
                    0px 2px 2px 0px rgba(0,0,0,0.14),
                    0px 1px 5px 0px rgba(0,0,0,0.12);
      }
      
      .vc-btn-contained:hover {
        box-shadow: 0px 2px 4px -1px rgba(0,0,0,0.2),
                    0px 4px 5px 0px rgba(0,0,0,0.14),
                    0px 1px 10px 0px rgba(0,0,0,0.12);
      }
      
      .vc-btn-contained.vc-btn-primary {
        background-color: #1976d2;
        color: #fff;
      }
      
      .vc-btn-contained.vc-btn-primary:hover {
        background-color: #1565c0;
      }
      
      .vc-btn-contained.vc-btn-secondary {
        background-color: #dc004e;
        color: #fff;
      }
      
      .vc-btn-contained.vc-btn-secondary:hover {
        background-color: #c51162;
      }
      
      .vc-btn-contained.vc-btn-default {
        background-color: #e0e0e0;
        color: rgba(0, 0, 0, 0.87);
      }
      
      .vc-btn-contained.vc-btn-default:hover {
        background-color: #d5d5d5;
      }
      
      /* Outlined button styles */
      .vc-btn-outlined {
        border: 1px solid currentColor;
        background-color: transparent;
      }
      
      .vc-btn-outlined.vc-btn-primary {
        color: #1976d2;
        border-color: rgba(25, 118, 210, 0.5);
      }
      
      .vc-btn-outlined.vc-btn-primary:hover {
        background-color: rgba(25, 118, 210, 0.04);
        border-color: #1976d2;
      }
      
      .vc-btn-outlined.vc-btn-secondary {
        color: #dc004e;
        border-color: rgba(220, 0, 78, 0.5);
      }
      
      .vc-btn-outlined.vc-btn-secondary:hover {
        background-color: rgba(220, 0, 78, 0.04);
        border-color: #dc004e;
      }
      
      .vc-btn-outlined.vc-btn-default {
        color: rgba(0, 0, 0, 0.87);
        border-color: rgba(0, 0, 0, 0.23);
      }
      
      .vc-btn-outlined.vc-btn-default:hover {
        background-color: rgba(0, 0, 0, 0.04);
        border-color: rgba(0, 0, 0, 0.23);
      }
      
      /* Text button styles */
      .vc-btn-text {
        background-color: transparent;
        padding: 6px 8px;
      }
      
      .vc-btn-text.vc-btn-primary {
        color: #1976d2;
      }
      
      .vc-btn-text.vc-btn-primary:hover {
        background-color: rgba(25, 118, 210, 0.04);
      }
      
      .vc-btn-text.vc-btn-secondary {
        color: #dc004e;
      }
      
      .vc-btn-text.vc-btn-secondary:hover {
        background-color: rgba(220, 0, 78, 0.04);
      }
      
      .vc-btn-text.vc-btn-default {
        color: rgba(0, 0, 0, 0.87);
      }
      
      .vc-btn-text.vc-btn-default:hover {
        background-color: rgba(0, 0, 0, 0.04);
      }
      
      /* Disabled styles */
      .vc-btn-disabled {
        color: rgba(0, 0, 0, 0.26) !important;
        box-shadow: none;
        cursor: default;
        pointer-events: none;
      }
      
      .vc-btn-contained.vc-btn-disabled {
        background-color: rgba(0, 0, 0, 0.12) !important;
        color: rgba(0, 0, 0, 0.26) !important;
      }
      
      .vc-btn-outlined.vc-btn-disabled,
      .vc-btn-text.vc-btn-disabled {
        border-color: rgba(0, 0, 0, 0.12) !important;
      }
      
      /* Ripple effect */
      .ripple {
        position: absolute;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.7);
        transform: scale(0);
        animation: ripple 0.6s linear;
        pointer-events: none;
      }
      
      .vc-btn-outlined .ripple,
      .vc-btn-text .ripple {
        background-color: rgba(0, 0, 0, 0.1);
      }
      
      @keyframes ripple {
        to {
          transform: scale(4);
          opacity: 0;
        }
      }
    `}_handleClick(s){if(this._disabled)return;let h=this.shadowRoot.querySelector(".vc-btn"),o=document.createElement("span"),r=Math.max(h.clientWidth,h.clientHeight),b=r/2;o.style.width=o.style.height=`${r}px`,o.style.left=`${s.clientX-(h.getBoundingClientRect().left+b)}px`,o.style.top=`${s.clientY-(h.getBoundingClientRect().top+b)}px`,o.classList.add("ripple");let t=h.getElementsByClassName("ripple")[0];if(t)t.remove();h.appendChild(o)}_render(){let s=["vc-btn",`vc-btn-${this._variant}`,`vc-btn-${this._color}`,`vc-btn-${this._size}`,this._disabled?"vc-btn-disabled":""].join(" ");this.shadowRoot.innerHTML=`
      <style>${this._getStyles()}</style>
      <button class="${s}" ?disabled="${this._disabled}">
        <slot></slot>
      </button>
    `,this.shadowRoot.querySelector("button").addEventListener("click",this._handleClick.bind(this))}connectedCallback(){if(!this.hasAttribute("role"))this.setAttribute("role","button")}disconnectedCallback(){this.shadowRoot.querySelector("button").removeEventListener("click",this._handleClick.bind(this))}}customElements.define("vc-btn",E);var Xs=E;class U extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: block;
        }
        
        :host([hidden]) {
          display: none;
        }
        
        .divider {
          display: block;
          margin: 0;
          border: none;
        }
        
        /* Default (horizontal) divider */
        :host(:not([vertical])) .divider {
          height: 1px;
          width: 100%;
          background-color: rgba(0, 0, 0, 0.12);
        }
        
        /* Light theme inset divider (horizontal) */
        :host(:not([vertical])[inset]) .divider {
          margin-left: 72px;
          width: calc(100% - 72px);
        }
        
        /* Vertical divider */
        :host([vertical]) .divider {
          height: 100%;
          width: 1px;
          background-color: rgba(0, 0, 0, 0.12);
        }
        
        /* Light theme inset divider (vertical) */
        :host([vertical][inset]) .divider {
          margin-top: 8px;
          margin-bottom: 8px;
          height: calc(100% - 16px);
        }
        
        /* Dark theme */
        :host([theme="dark"]) .divider {
          background-color: rgba(255, 255, 255, 0.12);
        }
      </style>
      <hr class="divider">
    `}connectedCallback(){if(this.getAttribute("vertical")!==null)this.setAttribute("role","separator"),this.setAttribute("aria-orientation","vertical");else this.setAttribute("role","separator"),this.setAttribute("aria-orientation","horizontal")}attributeChangedCallback(s,h,o){if(s==="vertical")if(o!==null)this.setAttribute("aria-orientation","vertical");else this.setAttribute("aria-orientation","horizontal")}static get observedAttributes(){return["vertical","inset","theme"]}}customElements.define("vc-divider",U);var Qs=U;class N extends HTMLElement{static get observedAttributes(){return["icon","size","color","density","left","right","disabled","start"]}constructor(){super();this.attachShadow({mode:"open"}),this._createStyles(),this._container=document.createElement("i"),this._container.className="vc-icon",this.shadowRoot.appendChild(this._styles),this.shadowRoot.appendChild(this._container)}_createStyles(){this._styles=document.createElement("style"),this._styles.textContent=`
        :host {
          display: inline-flex;
          align-items: center;
          justify-content: center;
          line-height: 1;
          vertical-align: middle;
          user-select: none;
        }
        
        :host([disabled]) {
          opacity: 0.6;
          pointer-events: none;
        }
        
        :host([left]) {
          margin-right: 8px;
        }
        
        :host([right]) {
          margin-left: 8px;
        }
        
        :host([start]) {
          margin-right: 16px;
        }
        
        .vc-icon {
          font-family: 'Material Icons';
          font-weight: normal;
          font-style: normal;
          font-size: 24px;
          line-height: 1;
          letter-spacing: normal;
          text-transform: none;
          display: inline-block;
          white-space: nowrap;
          word-wrap: normal;
          direction: ltr;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
          text-rendering: optimizeLegibility;
        }
        
        /* Density classes */
        :host([density="default"]) .vc-icon {
          font-size: 24px;
          height: 24px;
          width: 24px;
        }
        
        :host([density="comfortable"]) .vc-icon {
          font-size: 20px;
          height: 20px;
          width: 20px;
        }
        
        :host([density="compact"]) .vc-icon {
          font-size: 16px;
          height: 16px;
          width: 16px;
        }
      `}connectedCallback(){if(!this.hasAttribute("density"))this.setAttribute("density","default");this._updateIconContent()}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"icon":this._updateIconContent();break;case"color":this._updateColor();break;case"size":this._updateSize();break}}_updateIconContent(){let s=this.getAttribute("icon");if(s)this._container.textContent=s}_updateColor(){let s=this.getAttribute("color");if(s)this._container.style.color=s;else this._container.style.color=""}_updateSize(){let s=this.getAttribute("size");if(s){let h=isNaN(s)?s:`${s}px`;this._container.style.fontSize=h,this._container.style.height=h,this._container.style.width=h}else this._container.style.fontSize="",this._container.style.height="",this._container.style.width=""}}customElements.define("vc-icon",N);var Ys=N;class G extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._value=0,this._max=100,this._indeterminate=!1,this.render()}static get observedAttributes(){return["value","max","indeterminate","color","track-color"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"value":this._value=parseFloat(o)||0;break;case"max":this._max=parseFloat(o)||100;break;case"indeterminate":this._indeterminate=o!==null;break;case"color":this.style.setProperty("--progress-color",o);break;case"track-color":this.style.setProperty("--track-color",o);break}this.updateProgress()}get value(){return this._value}set value(s){this._value=parseFloat(s)||0,this.setAttribute("value",this._value),this.updateProgress()}get max(){return this._max}set max(s){this._max=parseFloat(s)||100,this.setAttribute("max",this._max),this.updateProgress()}get indeterminate(){return this._indeterminate}set indeterminate(s){if(this._indeterminate=Boolean(s),this._indeterminate)this.setAttribute("indeterminate","");else this.removeAttribute("indeterminate");this.updateProgress()}updateProgress(){let s=this.shadowRoot.querySelector(".progress-bar"),h=this.shadowRoot.querySelector(".progress-track");if(!s||!h)return;if(this._indeterminate)h.classList.add("indeterminate"),s.style.width="100%";else{h.classList.remove("indeterminate");let o=this._value/this._max*100;s.style.width=`${Math.min(100,Math.max(0,o))}%`}}render(){let s=document.createElement("style");s.textContent=`
        :host {
          --progress-height: 4px;
          --progress-color: #6200ee;
          --track-color: #e0e0e0;
          display: block;
          width: 100%;
          height: var(--progress-height);
          position: relative;
          overflow: hidden;
        }
        
        .progress-track {
          width: 100%;
          height: 100%;
          background-color: var(--track-color);
          position: absolute;
          top: 0;
          left: 0;
          overflow: hidden;
        }
        
        .progress-bar {
          height: 100%;
          background-color: var(--progress-color);
          position: absolute;
          top: 0;
          left: 0;
          transition: width 0.2s ease;
        }
        
        .indeterminate .progress-bar {
          animation: indeterminate 2s infinite linear;
          width: 50% !important;
        }
        
        @keyframes indeterminate {
          0% {
            transform: translateX(-100%);
          }
          100% {
            transform: translateX(200%);
          }
        }
      `;let h=document.createElement("div");h.className="progress-track";let o=document.createElement("div");if(o.className="progress-bar",h.appendChild(o),this.shadowRoot.appendChild(s),this.shadowRoot.appendChild(h),this._indeterminate=this.hasAttribute("indeterminate"),this._value=parseFloat(this.getAttribute("value"))||0,this._max=parseFloat(this.getAttribute("max"))||100,this.hasAttribute("color"))this.style.setProperty("--progress-color",this.getAttribute("color"));if(this.hasAttribute("track-color"))this.style.setProperty("--track-color",this.getAttribute("track-color"));this.updateProgress()}}customElements.define("vc-progress-indicator",G);var Cs=G;class F extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._checked=!1,this._disabled=!1,this._value="",this._name="",this.render(),this._onClick=this._onClick.bind(this)}static get observedAttributes(){return["checked","disabled","value","name"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"checked":this._checked=o!==null,this._updateCheckedState();break;case"disabled":this._disabled=o!==null,this._updateDisabledState();break;case"value":this._value=o||"";break;case"name":this._name=o||"";break}}connectedCallback(){this.addEventListener("click",this._onClick),this._checked=this.hasAttribute("checked"),this._disabled=this.hasAttribute("disabled"),this._value=this.getAttribute("value")||"",this._name=this.getAttribute("name")||"",this._updateCheckedState(),this._updateDisabledState()}disconnectedCallback(){this.removeEventListener("click",this._onClick)}get checked(){return this._checked}set checked(s){if(this._checked=Boolean(s),this._updateCheckedState(),this._checked)this.setAttribute("checked","");else this.removeAttribute("checked")}get disabled(){return this._disabled}set disabled(s){if(this._disabled=Boolean(s),this._updateDisabledState(),this._disabled)this.setAttribute("disabled","");else this.removeAttribute("disabled")}get value(){return this._value}set value(s){this._value=s,this.setAttribute("value",s)}get name(){return this._name}set name(s){this._name=s,this.setAttribute("name",s)}_onClick(s){if(this._disabled)return;this.checked=!0;let h=new CustomEvent("change",{bubbles:!0,composed:!0,detail:{checked:this.checked,value:this.value}});if(this.dispatchEvent(h),this._name)this._uncheckSiblings()}_uncheckSiblings(){document.querySelectorAll(`vc-radio[name="${this._name}"]`).forEach((h)=>{if(h!==this&&h.checked)h.checked=!1})}_updateCheckedState(){if(!this.shadowRoot)return;let s=this.shadowRoot.querySelector(".inner-circle"),h=this.shadowRoot.querySelector(".outer-circle");if(s&&h)if(this._checked)s.classList.add("checked"),h.classList.add("checked");else s.classList.remove("checked"),h.classList.remove("checked")}_updateDisabledState(){if(!this.shadowRoot)return;let s=this.shadowRoot.querySelector(".radio");if(s)if(this._disabled)s.classList.add("disabled");else s.classList.remove("disabled")}render(){let h=`
        <div class="radio">
          <div class="outer-circle ${this._checked?"checked":""}"></div>
          <div class="inner-circle ${this._checked?"checked":""}"></div>
          <div class="ripple"></div>
        </div>
      `;this.shadowRoot.innerHTML=`
        <style>
        :host {
          display: inline-block;
          position: relative;
          width: 40px;
          height: 40px;
          vertical-align: middle;
          cursor: pointer;
        }
        
        :host([disabled]) {
          cursor: default;
          pointer-events: none;
        }
        
        .radio {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 100%;
          height: 100%;
          position: relative;
        }
        
        .outer-circle {
          position: absolute;
          width: 20px;
          height: 20px;
          border-radius: 50%;
          border: 2px solid rgba(0, 0, 0, 0.54);
          box-sizing: border-box;
          transition: border-color 0.15s ease;
        }
        
        .inner-circle {
          position: absolute;
          width: 10px;
          height: 10px;
          border-radius: 50%;
          background-color: transparent;
          transform: scale(0);
          transition: transform 0.15s ease, background-color 0.15s ease;
        }
        
        .outer-circle.checked {
          border-color: #1a73e8; /* Material Blue */
        }
        
        .inner-circle.checked {
          background-color: #1a73e8; /* Material Blue */
          transform: scale(1);
        }
        
        .radio:hover .outer-circle:not(.disabled) {
          border-color: rgba(0, 0, 0, 0.87);
        }
        
        .radio:hover .outer-circle.checked:not(.disabled) {
          border-color: #174ea6; /* Material Blue Darker */
        }
        
        .radio:hover .inner-circle.checked:not(.disabled) {
          background-color: #174ea6; /* Material Blue Darker */
        }
        
        .radio.disabled .outer-circle {
          border-color: rgba(0, 0, 0, 0.26);
        }
        
        .radio.disabled .inner-circle.checked {
          background-color: rgba(0, 0, 0, 0.26);
        }
        
        /* Ripple Effect */
        .ripple {
          position: absolute;
          width: 40px;
          height: 40px;
          border-radius: 50%;
          background-color: rgba(26, 115, 232, 0.12);
          transform: scale(0);
          opacity: 1;
          pointer-events: none;
        }
        
        @keyframes ripple-effect {
          to {
            transform: scale(1);
            opacity: 0;
          }
        }
      </style>
        ${h}
      `;let o=this.shadowRoot.querySelector(".radio"),r=this.shadowRoot.querySelector(".ripple");o.addEventListener("mousedown",()=>{if(this._disabled)return;r.style.animation="none",r.offsetWidth,r.style.animation="ripple-effect 0.3s ease-out forwards"})}}customElements.define("vc-radio",F);var Ws=F;class R extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._open=!1,this._disabled=!1,this._value="",this._options=[],this._placeholder="Select an option",this._label="",this._handleDocumentClick=this._handleDocumentClick.bind(this),this._handleKeyDown=this._handleKeyDown.bind(this)}static get observedAttributes(){return["disabled","placeholder","label","value"]}connectedCallback(){this._render(),this._upgradeProperty("disabled"),this._upgradeProperty("placeholder"),this._upgradeProperty("label"),this._upgradeProperty("value"),this._processOptions(),this.shadowRoot.querySelector(".select-container").addEventListener("click",()=>this._toggleDropdown()),document.addEventListener("click",this._handleDocumentClick),this.addEventListener("keydown",this._handleKeyDown),new MutationObserver(()=>this._processOptions()).observe(this,{childList:!0,subtree:!0})}disconnectedCallback(){document.removeEventListener("click",this._handleDocumentClick),this.removeEventListener("keydown",this._handleKeyDown)}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"disabled":if(this._disabled=o!==null,this._disabled&&this._open)this._open=!1,this._render();break;case"placeholder":this._placeholder=o||"Select an option";break;case"label":this._label=o||"";break;case"value":this._value=o||"",this._updateSelectedOption();break}this._render()}get value(){return this._value}set value(s){if(this._value===s)return;this._value=s,this.setAttribute("value",s),this._updateSelectedOption(),this._render()}get disabled(){return this._disabled}set disabled(s){let h=Boolean(s);if(this._disabled===h)return;if(this._disabled=h,h)this.setAttribute("disabled","");else this.removeAttribute("disabled");this._render()}get placeholder(){return this._placeholder}set placeholder(s){this._placeholder=s,this.setAttribute("placeholder",s),this._render()}get label(){return this._label}set label(s){this._label=s,this.setAttribute("label",s),this._render()}_upgradeProperty(s){if(this.hasOwnProperty(s)){let h=this[s];delete this[s],this[s]=h}}_processOptions(){this._options=[],this.querySelectorAll("option").forEach((h)=>{this._options.push({value:h.value,text:h.textContent,disabled:h.disabled})}),this._updateSelectedOption(),this._render()}_updateSelectedOption(){if(!this._value)return;if(!this._options.find((h)=>h.value===this._value))this._value="",this.removeAttribute("value")}_toggleDropdown(){if(this._disabled)return;if(this._open=!this._open,this._render(),this._open)this.shadowRoot.querySelector(".dropdown").focus()}_handleDocumentClick(s){if(!s.composedPath().includes(this)&&this._open)this._open=!1,this._render()}_handleKeyDown(s){if(this._disabled)return;switch(s.key){case"Enter":case"Space":if(!this._open)this._open=!0,this._render(),s.preventDefault();break;case"Escape":if(this._open)this._open=!1,this._render(),s.preventDefault();break;case"ArrowDown":if(this._open)this._focusNextOption(),s.preventDefault();break;case"ArrowUp":if(this._open)this._focusPreviousOption(),s.preventDefault();break}}_focusNextOption(){let s=this.shadowRoot.querySelectorAll(".option:not(.disabled)"),h=this.shadowRoot.querySelector(".option:focus"),o=-1;if(h){if(o=Array.from(s).indexOf(h),o>=s.length-1)o=-1}s[o+1]?.focus()}_focusPreviousOption(){let s=this.shadowRoot.querySelectorAll(".option:not(.disabled)"),h=this.shadowRoot.querySelector(".option:focus"),o=s.length;if(h){if(o=Array.from(s).indexOf(h),o<=0)o=s.length}s[o-1]?.focus()}_selectOption(s){if(s.disabled)return;let h=this._value;if(this._value=s.value,this.setAttribute("value",s.value),this._open=!1,this._render(),h!==this._value)this.dispatchEvent(new CustomEvent("change",{detail:{value:this._value},bubbles:!0}))}_render(){let s=this._options.find((o)=>o.value===this._value),h=s?s.text:this._placeholder;this.shadowRoot.innerHTML=`
        <style>
          :host {
            display: inline-block;
            font-family: Roboto, 'Segoe UI', Arial, sans-serif;
            width: 100%;
            position: relative;
            outline: none;
          }
          
          :host([disabled]) {
            opacity: 0.6;
            cursor: not-allowed;
          }
          
          .select-label {
            font-size: 12px;
            color: rgba(0, 0, 0, 0.6);
            margin-bottom: 6px;
            display: block;
          }
          
          .select-container {
            border: 1px solid rgba(0, 0, 0, 0.24);
            border-radius: 4px;
            height: 36px;
            display: flex;
            align-items: center;
            padding: 0 16px;
            position: relative;
            cursor: pointer;
            background-color: white;
            transition: all 0.2s ease;
          }
          
          :host(:not([disabled])) .select-container:hover {
            border-color: rgba(0, 0, 0, 0.42);
          }
          
          :host(:not([disabled])) .select-container:focus-within {
            border-color: #1976d2;
            box-shadow: 0 0 0 1px #1976d2;
          }
          
          .select-value {
            flex: 1;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            user-select: none;
            color: ${this._value?"rgba(0, 0, 0, 0.87)":"rgba(0, 0, 0, 0.42)"};
          }
          
          .select-arrow {
            border-style: solid;
            border-width: 5px 5px 0 5px;
            border-color: rgba(0, 0, 0, 0.54) transparent transparent transparent;
            margin-left: 8px;
            transition: transform 0.2s ease;
            transform: ${this._open?"rotate(180deg)":"rotate(0deg)"};
          }
          
          .dropdown {
            position: absolute;
            top: calc(100% + 2px);
            left: 0;
            width: 100%;
            background: white;
            border-radius: 4px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            z-index: 1000;
            max-height: 300px;
            overflow-y: auto;
            display: ${this._open?"block":"none"};
            outline: none;
          }
          
          .option {
            padding: 12px 16px;
            cursor: pointer;
            transition: background-color 0.2s ease;
            outline: none;
          }
          
          .option:hover:not(.disabled),
          .option:focus:not(.disabled) {
            background-color: rgba(25, 118, 210, 0.08);
          }
          
          .option.selected {
            background-color: rgba(25, 118, 210, 0.16);
            font-weight: 500;
          }
          
          .option.disabled {
            opacity: 0.5;
            cursor: not-allowed;
          }
        </style>
        
        ${this._label?`<label class="select-label">${this._label}</label>`:""}
        
        <div class="select-container" tabindex="${this._disabled?"-1":"0"}">
          <span class="select-value">${h}</span>
          <span class="select-arrow"></span>
        </div>
        
        <div class="dropdown" tabindex="-1">
          ${this._options.map((o)=>`
            <div class="option ${o.value===this._value?"selected":""} ${o.disabled?"disabled":""}" 
                 tabindex="${o.disabled?"-1":"0"}"
                 data-value="${o.value}">
              ${o.text}
            </div>
          `).join("")}
        </div>
      `,this.shadowRoot.querySelectorAll(".option:not(.disabled)").forEach((o)=>{o.addEventListener("click",(r)=>{let b=r.currentTarget.dataset.value,t=this._options.find((i)=>i.value===b);this._selectOption(t)})})}}customElements.define("vc-select",R);var Es=R;class O extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._min=0,this._max=100,this._value=0,this._step=1,this._disabled=!1,this._discrete=!1,this._color="#6200ee",this._onMouseDown=this._onMouseDown.bind(this),this._onMouseMove=this._onMouseMove.bind(this),this._onMouseUp=this._onMouseUp.bind(this),this._onKeyDown=this._onKeyDown.bind(this),this._onFocus=this._onFocus.bind(this),this._onBlur=this._onBlur.bind(this),this._render()}static get observedAttributes(){return["min","max","value","step","disabled","discrete","color"]}connectedCallback(){if(this._track=this.shadowRoot.querySelector(".slider-track"),this._thumb=this.shadowRoot.querySelector(".slider-thumb"),this._thumbLabel=this.shadowRoot.querySelector(".slider-thumb-label"),this._filledTrack=this.shadowRoot.querySelector(".slider-filled-track"),this._thumb.addEventListener("mousedown",this._onMouseDown),this._track.addEventListener("mousedown",this._onMouseDown),this.addEventListener("keydown",this._onKeyDown),this.addEventListener("focus",this._onFocus),this.addEventListener("blur",this._onBlur),!this.hasAttribute("tabindex"))this.setAttribute("tabindex","0");this._updateSliderPosition()}disconnectedCallback(){this._thumb.removeEventListener("mousedown",this._onMouseDown),this._track.removeEventListener("mousedown",this._onMouseDown),this.removeEventListener("keydown",this._onKeyDown),this.removeEventListener("focus",this._onFocus),this.removeEventListener("blur",this._onBlur),document.removeEventListener("mousemove",this._onMouseMove),document.removeEventListener("mouseup",this._onMouseUp)}attributeChangedCallback(s,h,o){switch(s){case"min":this._min=Number(o);break;case"max":this._max=Number(o);break;case"value":this._value=this._clamp(Number(o));break;case"step":this._step=Number(o);break;case"disabled":this._disabled=o!==null,this.shadowRoot.host.classList.toggle("disabled",this._disabled);break;case"discrete":this._discrete=o!==null,this.shadowRoot.host.classList.toggle("discrete",this._discrete);break;case"color":this._color=o,this._updateStyles();break}this._updateSliderPosition()}get min(){return this._min}set min(s){this.setAttribute("min",s)}get max(){return this._max}set max(s){this.setAttribute("max",s)}get value(){return this._value}set value(s){this.setAttribute("value",s)}get step(){return this._step}set step(s){this.setAttribute("step",s)}get disabled(){return this._disabled}set disabled(s){if(s)this.setAttribute("disabled","");else this.removeAttribute("disabled")}get discrete(){return this._discrete}set discrete(s){if(s)this.setAttribute("discrete","");else this.removeAttribute("discrete")}get color(){return this._color}set color(s){this.setAttribute("color",s)}_render(){let s=`
        :host {
          display: block;
          height: 48px;
          position: relative;
          width: 100%;
          cursor: pointer;
          outline: none;
        }
        
        :host(.disabled) {
          cursor: not-allowed;
          opacity: 0.38;
          pointer-events: none;
        }
        
        .slider-container {
          position: relative;
          width: 100%;
          height: 100%;
          display: flex;
          align-items: center;
          padding: 0 8px;
          box-sizing: border-box;
        }
        
        .slider-track {
          position: relative;
          width: 100%;
          height: 2px;
          background-color: rgba(0, 0, 0, 0.26);
          border-radius: 1px;
        }
        
        .slider-filled-track {
          position: absolute;
          height: 2px;
          background-color: ${this._color};
          border-radius: 1px;
          left: 0;
          width: 0;
        }
        
        .slider-thumb {
          position: absolute;
          height: 12px;
          width: 12px;
          background-color: ${this._color};
          border-radius: 50%;
          top: 50%;
          transform: translate(-50%, -50%);
          transition: transform 0.1s ease, box-shadow 0.1s ease;
          left: 0;
          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 
                      0 1px 5px 0 rgba(0, 0, 0, 0.12), 
                      0 3px 1px -2px rgba(0, 0, 0, 0.2);
        }
        
        .slider-thumb:hover,
        :host(:focus) .slider-thumb {
          transform: translate(-50%, -50%) scale(1.2);
          box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 
                      0 2px 6px 0 rgba(0, 0, 0, 0.12), 
                      0 4px 2px -2px rgba(0, 0, 0, 0.2);
        }
        
        .slider-thumb-label {
          position: absolute;
          bottom: 32px;
          width: 30px;
          height: 30px;
          background-color: ${this._color};
          color: white;
          border-radius: 50% 50% 50% 0;
          left: 0;
          transform: translate(-50%, 0) rotate(-45deg) scale(0);
          display: ${this._discrete?"flex":"none"};
          align-items: center;
          justify-content: center;
          transition: transform 0.2s ease;
        }
        
        :host(.discrete) .slider-thumb-label {
          display: flex;
        }
        
        :host(.discrete.active) .slider-thumb-label,
        :host(.discrete:focus) .slider-thumb-label {
          transform: translate(-50%, 0) rotate(-45deg) scale(1);
        }
        
        .slider-thumb-label-text {
          transform: rotate(45deg);
          font-size: 12px;
          font-family: Roboto, sans-serif;
          font-weight: 500;
        }
        
        :host(.active) .slider-thumb {
          transform: translate(-50%, -50%) scale(1.5);
        }
      `,h=`
        <div class="slider-container">
          <div class="slider-track">
            <div class="slider-filled-track"></div>
            <div class="slider-thumb">
              <div class="slider-thumb-label">
                <span class="slider-thumb-label-text">0</span>
              </div>
            </div>
          </div>
        </div>
      `;this.shadowRoot.innerHTML=`
        <style>${s}</style>
        
        <div class="slider-container">
          <div class="slider-track">
            <div class="slider-filled-track"></div>
            <div class="slider-thumb">
              <div class="slider-thumb-label">
                <span class="slider-thumb-label-text">0</span>
              </div>
            </div>
          </div>
        </div>
      
      `}_updateStyles(){let s=this.shadowRoot.querySelector("style");s.textContent=s.textContent.replace(/background-color: [^;]+;/g,`background-color: ${this._color};`)}_updateSliderPosition(){if(!this._thumb||!this._filledTrack||!this._thumbLabel)return;let s=this._valueToPercentage(this._value);if(this._thumb.style.left=`${s}%`,this._thumbLabel.style.left=`${s}%`,this._filledTrack.style.width=`${s}%`,this._discrete)this.shadowRoot.querySelector(".slider-thumb-label-text").textContent=this._value}_onMouseDown(s){if(this._disabled)return;s.preventDefault(),this.shadowRoot.host.classList.add("active"),this._updateValueFromEvent(s),document.addEventListener("mousemove",this._onMouseMove),document.addEventListener("mouseup",this._onMouseUp)}_onMouseMove(s){if(this._disabled)return;this._updateValueFromEvent(s)}_onMouseUp(){if(this._disabled)return;this.shadowRoot.host.classList.remove("active"),document.removeEventListener("mousemove",this._onMouseMove),document.removeEventListener("mouseup",this._onMouseUp),this.dispatchEvent(new Event("change",{bubbles:!0}))}_onKeyDown(s){if(this._disabled)return;let h=this._value;switch(s.key){case"ArrowRight":case"ArrowUp":h+=this._step;break;case"ArrowLeft":case"ArrowDown":h-=this._step;break;case"Home":h=this._min;break;case"End":h=this._max;break;case"PageUp":h+=(this._max-this._min)/10;break;case"PageDown":h-=(this._max-this._min)/10;break;default:return}if(s.preventDefault(),h=this._quantizeToStep(this._clamp(h)),h!==this._value)this._value=h,this._updateSliderPosition(),this.dispatchEvent(new Event("input",{bubbles:!0})),this.dispatchEvent(new Event("change",{bubbles:!0}))}_onFocus(){this.shadowRoot.host.classList.add("focused")}_onBlur(){this.shadowRoot.host.classList.remove("focused"),this.shadowRoot.host.classList.remove("active")}_updateValueFromEvent(s){let h=this._track.getBoundingClientRect(),r=(Math.max(h.left,Math.min(s.clientX,h.right))-h.left)/h.width,b=this._percentageToValue(r),t=this._quantizeToStep(this._clamp(b));if(t!==this._value)this._value=t,this._updateSliderPosition(),this.dispatchEvent(new Event("input",{bubbles:!0}))}_clamp(s){return Math.min(this._max,Math.max(this._min,s))}_valueToPercentage(s){return(s-this._min)/(this._max-this._min)*100}_percentageToValue(s){return this._min+s*(this._max-this._min)}_quantizeToStep(s){let h=(s-this._min)/this._step,o=Math.round(h)*this._step+this._min;return Number(o.toFixed(10))}}customElements.define("vc-slider",O);var Us=O;class S extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._checked=!1,this._disabled=!1,this._label="",this.render()}static get observedAttributes(){return["checked","disabled","label"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"checked":this._checked=o!==null;break;case"disabled":this._disabled=o!==null;break;case"label":this._label=o||"";break}this.render()}get checked(){return this._checked}set checked(s){if(this._checked=Boolean(s),this._checked)this.setAttribute("checked","");else this.removeAttribute("checked");this.render()}get disabled(){return this._disabled}set disabled(s){if(this._disabled=Boolean(s),this._disabled)this.setAttribute("disabled","");else this.removeAttribute("disabled");this.render()}get label(){return this._label}set label(s){this._label=String(s),this.setAttribute("label",this._label),this.render()}connectedCallback(){this._checked=this.hasAttribute("checked"),this._disabled=this.hasAttribute("disabled"),this._label=this.getAttribute("label")||"",this.shadowRoot.querySelector(".switch-container")?.addEventListener("click",this._handleClick.bind(this)),this.render()}disconnectedCallback(){this.shadowRoot.querySelector(".switch-container")?.removeEventListener("click",this._handleClick.bind(this))}_handleClick(s){if(this._disabled)return;this.checked=!this._checked;let h=new CustomEvent("change",{bubbles:!0,composed:!0,detail:{checked:this._checked}});this.dispatchEvent(h)}render(){let s=this._checked?"checked":"",h=this._disabled?"disabled":"";this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: inline-block;
          font-family: Roboto, Arial, sans-serif;
        }
        
        .switch-container {
          display: flex;
          align-items: center;
          cursor: ${this._disabled?"not-allowed":"pointer"};
          user-select: none;
        }
        
        .switch {
          position: relative;
          display: inline-block;
          width: 36px;
          height: 14px;
          margin-right: 8px;
        }
        
        .track {
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background-color: rgba(0, 0, 0, 0.38);
          border-radius: 7px;
          transition: background-color 0.3s;
        }
        
        .thumb {
          position: absolute;
          top: -3px;
          left: 0;
          width: 20px;
          height: 20px;
          background-color: #FAFAFA;
          border-radius: 50%;
          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);
          transition: all 0.3s;
        }
        
        .switch.checked .track {
          background-color: rgba(33, 150, 243, 0.5);
        }
        
        .switch.checked .thumb {
          background-color: #2196F3;
          transform: translateX(16px);
        }
        
        .switch.disabled .track {
          background-color: rgba(0, 0, 0, 0.12);
        }
        
        .switch.disabled .thumb {
          background-color: #BDBDBD;
          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
        }
        
        .switch.checked.disabled .track {
          background-color: rgba(33, 150, 243, 0.2);
        }
        
        .switch.checked.disabled .thumb {
          background-color: #BBDEFB;
        }
        
        /* Ripple effect */
        .thumb::after {
          content: '';
          position: absolute;
          top: -10px;
          left: -10px;
          right: -10px;
          bottom: -10px;
          background-color: rgba(33, 150, 243, 0.12);
          border-radius: 50%;
          opacity: 0;
          transform: scale(0);
          transition: all 0.3s;
        }
        
        .switch:not(.disabled):active .thumb::after {
          opacity: 1;
          transform: scale(1);
        }
        
        .label {
          color: ${this._disabled?"rgba(0, 0, 0, 0.38)":"rgba(0, 0, 0, 0.87)"};
        }
      </style>
      
      <div class="switch-container">
        <div class="switch ${s} ${h}">
          <div class="track"></div>
          <div class="thumb"></div>
        </div>
        ${this._label?`<span class="label">${this._label}</span>`:""}
      </div>
    `,this.shadowRoot.querySelector(".switch-container")?.addEventListener("click",this._handleClick.bind(this))}}customElements.define("vc-switch",S);var Ns=S;class P extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._value="",this._label="",this._placeholder="",this._disabled=!1,this._required=!1,this._readonly=!1,this._helperText="",this._errorMessage="",this._hasError=!1,this._maxLength=-1,this._type="text",this._render()}static get observedAttributes(){return["value","label","placeholder","disabled","required","readonly","helper-text","error-message","max-length","type"]}attributeChangedCallback(s,h,o){switch(s){case"value":this._value=o||"",this._updateInputValue();break;case"label":this._label=o||"",this._updateLabel();break;case"placeholder":this._placeholder=o||"",this._updatePlaceholder();break;case"disabled":this._disabled=o!==null,this._updateDisabled();break;case"required":this._required=o!==null,this._updateRequired();break;case"readonly":this._readonly=o!==null,this._updateReadonly();break;case"helper-text":this._helperText=o||"",this._updateHelperText();break;case"error-message":this._errorMessage=o||"",this._updateErrorState();break;case"max-length":this._maxLength=o?parseInt(o,10):-1,this._updateMaxLength();break;case"type":this._type=o||"text",this._updateType();break}}get value(){return this._value}set value(s){this.setAttribute("value",s)}get label(){return this._label}set label(s){this.setAttribute("label",s)}get placeholder(){return this._placeholder}set placeholder(s){this.setAttribute("placeholder",s)}get disabled(){return this._disabled}set disabled(s){if(s)this.setAttribute("disabled","");else this.removeAttribute("disabled")}get required(){return this._required}set required(s){if(s)this.setAttribute("required","");else this.removeAttribute("required")}get readonly(){return this._readonly}set readonly(s){if(s)this.setAttribute("readonly","");else this.removeAttribute("readonly")}get helperText(){return this._helperText}set helperText(s){this.setAttribute("helper-text",s)}get errorMessage(){return this._errorMessage}set errorMessage(s){this.setAttribute("error-message",s)}get maxLength(){return this._maxLength}set maxLength(s){this.setAttribute("max-length",s)}get type(){return this._type}set type(s){this.setAttribute("type",s)}_render(){this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: inline-block;
          font-family: Roboto, Arial, sans-serif;
          font-size: 16px;
          width: 280px;
          --primary-color: #6200ee;
          --error-color: #b00020;
          --disabled-color: rgba(0, 0, 0, 0.38);
          --label-color: rgba(0, 0, 0, 0.6);
          --input-color: rgba(0, 0, 0, 0.87);
          --border-color: rgba(0, 0, 0, 0.42);
        }
        
        .text-field {
          position: relative;
          margin-bottom: 8px;
        }
        
        .input-container {
          position: relative;
          padding-top: 16px;
        }
        
        label {
          position: absolute;
          top: 16px;
          left: 0;
          color: var(--label-color);
          font-size: 16px;
          transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1);
          transform-origin: left top;
          pointer-events: none;
        }
        
        input {
          width: 100%;
          height: 30px;
          border: none;
          border-bottom: 1px solid var(--border-color);
          background: none;
          font-size: 16px;
          padding: 0;
          color: var(--input-color);
          outline: none;
          transition: border-bottom-color 150ms cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        input:focus {
          border-bottom-color: var(--primary-color);
          border-bottom-width: 2px;
        }
        
        input:focus + label,
        input:not(:placeholder-shown) + label {
          transform: translateY(-100%) scale(0.75);
          color: var(--primary-color);
        }
        
        input:focus + label.error,
        input.error:not(:placeholder-shown) + label {
          color: var(--error-color);
        }
        
        input.error {
          border-bottom-color: var(--error-color);
          border-bottom-width: 2px;
        }
        
        input:disabled {
          border-bottom: 1px dashed var(--disabled-color);
          color: var(--disabled-color);
        }
        
        input:disabled + label {
          color: var(--disabled-color);
        }
        
        input:read-only {
          border-bottom-style: dotted;
        }
        
        .line {
          position: absolute;
          bottom: 0;
          left: 0;
          width: 0;
          height: 2px;
          background-color: var(--primary-color);
          transition: width 150ms cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        input:focus ~ .line {
          width: 100%;
        }
        
        input.error ~ .line {
          background-color: var(--error-color);
        }
        
        .helper-text {
          font-size: 12px;
          color: var(--label-color);
          margin-top: 4px;
          min-height: 16px;
        }
        
        .helper-text.error {
          color: var(--error-color);
        }

        .char-counter {
          font-size: 12px;
          color: var(--label-color);
          float: right;
          margin-top: 4px;
        }
      </style>
      
      <div class="text-field">
        <div class="input-container">
          <input type="text" value="" placeholder=" ">
          <label></label>
          <div class="line"></div>
        </div>
        <div class="supporting-text">
          <div class="helper-text"></div>
          <div class="char-counter"></div>
        </div>
      </div>
    `,this._inputElement=this.shadowRoot.querySelector("input"),this._labelElement=this.shadowRoot.querySelector("label"),this._helperTextElement=this.shadowRoot.querySelector(".helper-text"),this._charCounterElement=this.shadowRoot.querySelector(".char-counter"),this._inputElement.addEventListener("input",this._handleInput.bind(this)),this._inputElement.addEventListener("focus",this._handleFocus.bind(this)),this._inputElement.addEventListener("blur",this._handleBlur.bind(this)),this._updateInputValue(),this._updateLabel(),this._updatePlaceholder(),this._updateDisabled(),this._updateRequired(),this._updateReadonly(),this._updateHelperText(),this._updateErrorState(),this._updateMaxLength(),this._updateType()}_handleInput(s){if(this._value=s.target.value,this._maxLength>0)this._updateCharCounter();this._validateInput(),this.dispatchEvent(new CustomEvent("change",{detail:{value:this._value},bubbles:!0,composed:!0}))}_handleFocus(){this.dispatchEvent(new CustomEvent("focus",{bubbles:!1,composed:!0}))}_handleBlur(){this._validateInput(!0),this.dispatchEvent(new CustomEvent("blur",{bubbles:!1,composed:!0}))}_validateInput(s=!1){if(this._hasError=!1,s&&this._required&&!this._value)this._hasError=!0,this._errorMessage=this._errorMessage||"This field is required";this._updateErrorState()}_updateInputValue(){if(this._inputElement){if(this._inputElement.value=this._value,this._maxLength>0)this._updateCharCounter()}}_updateLabel(){if(this._labelElement){if(this._labelElement.textContent=this._label,this._required)this._labelElement.textContent+=" *"}}_updatePlaceholder(){if(this._inputElement)this._inputElement.placeholder=this._placeholder?this._placeholder:" "}_updateDisabled(){if(this._inputElement)this._inputElement.disabled=this._disabled}_updateRequired(){if(this._inputElement)this._inputElement.required=this._required,this._updateLabel()}_updateReadonly(){if(this._inputElement)this._inputElement.readOnly=this._readonly}_updateHelperText(){if(this._helperTextElement)this._helperTextElement.textContent=this._hasError?this._errorMessage:this._helperText}_updateErrorState(){if(this._inputElement&&this._labelElement&&this._helperTextElement)if(this._hasError=!!this._errorMessage,this._hasError)this._inputElement.classList.add("error"),this._labelElement.classList.add("error"),this._helperTextElement.classList.add("error"),this._helperTextElement.textContent=this._errorMessage;else this._inputElement.classList.remove("error"),this._labelElement.classList.remove("error"),this._helperTextElement.classList.remove("error"),this._helperTextElement.textContent=this._helperText}_updateMaxLength(){if(this._inputElement)if(this._maxLength>0)this._inputElement.maxLength=this._maxLength,this._updateCharCounter();else this._inputElement.removeAttribute("maxLength"),this._charCounterElement.textContent=""}_updateCharCounter(){if(this._charCounterElement&&this._maxLength>0)this._charCounterElement.textContent=`${this._value.length} / ${this._maxLength}`}_updateType(){if(this._inputElement)this._inputElement.type=this._type}focus(){this._inputElement.focus()}blur(){this._inputElement.blur()}checkValidity(){return!this._hasError&&this._inputElement.checkValidity()}setError(s){this._errorMessage=s||"",this._updateErrorState()}clearError(){this._errorMessage="",this._updateErrorState()}}customElements.define("vc-text-field",P);var Gs=P;class T extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._open=!1,this._permanent=!1,this._position="left",this._width="256px",this._overlay=!1,this._handleClickOutside=this._handleClickOutside.bind(this),this._handleKeyDown=this._handleKeyDown.bind(this)}static get observedAttributes(){return["open","permanent","position","width","overlay"]}connectedCallback(){if(this._render(),!this._permanent)document.addEventListener("click",this._handleClickOutside),document.addEventListener("keydown",this._handleKeyDown);this.dispatchEvent(new CustomEvent("vc-drawer-connected",{bubbles:!0,composed:!0}))}disconnectedCallback(){document.removeEventListener("click",this._handleClickOutside),document.removeEventListener("keydown",this._handleKeyDown)}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"open":this._open=o!==null;break;case"permanent":this._permanent=o!==null;break;case"position":if(o==="left"||o==="right")this._position=o;break;case"width":this._width=o;break;case"overlay":this._overlay=o!==null;break}this._render()}_handleClickOutside(s){if(!this._open||this._permanent)return;if(!s.composedPath().includes(this.shadowRoot.querySelector(".drawer")))this.close()}_handleKeyDown(s){if(s.key==="Escape"&&this._open&&!this._permanent)this.close()}open(){if(this._permanent)return;this._open=!0,this.setAttribute("open",""),this._render(),this.dispatchEvent(new CustomEvent("vc-drawer-opened",{bubbles:!0,composed:!0}))}close(){if(this._permanent)return;this._open=!1,this.removeAttribute("open"),this._render(),this.dispatchEvent(new CustomEvent("vc-drawer-closed",{bubbles:!0,composed:!0}))}toggle(){if(this._permanent)return;if(this._open)this.close();else this.open()}_render(){let s=`
        :host {
          --drawer-width: ${this._width};
          --drawer-bg-color: #ffffff;
          --drawer-text-color: rgba(0, 0, 0, 0.87);
          --drawer-secondary-text-color: rgba(0, 0, 0, 0.54);
          --drawer-divider-color: rgba(0, 0, 0, 0.12);
          --drawer-hover-color: rgba(0, 0, 0, 0.04);
          --drawer-active-color: rgba(0, 0, 0, 0.08);
          --drawer-transition-duration: 0.3s;
          --drawer-elevation: 0 8px 10px -5px rgba(0,0,0,0.2), 0 16px 24px 2px rgba(0,0,0,0.14), 0 6px 30px 5px rgba(0,0,0,0.12);
          
          display: block;
          position: relative;
          height: 100%;
          z-index: 5;
        }
  
        .drawer-container {
          position: ${this._overlay?"fixed":"absolute"};
          top: 0;
          ${this._position}: 0;
          height: 100%;
          width: 100%;
          z-index: 6;
          pointer-events: ${this._open||this._permanent?"auto":"none"};
        }
  
        .drawer-scrim {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.5);
          opacity: ${this._open&&!this._permanent?"1":"0"};
          transition: opacity var(--drawer-transition-duration) ease;
          pointer-events: ${this._open&&!this._permanent?"auto":"none"};
        }
  
        .drawer {
          position: absolute;
          top: 0;
          ${this._position}: ${this._open||this._permanent?"0":"-"+this._width};
          width: var(--drawer-width);
          height: 100%;
          background-color: var(--drawer-bg-color);
          color: var(--drawer-text-color);
          box-shadow: ${this._permanent?"none":"var(--drawer-elevation)"};
          transition: ${this._position} var(--drawer-transition-duration) cubic-bezier(0.4, 0, 0.2, 1);
          display: flex;
          flex-direction: column;
          overflow: hidden;
          z-index: 7;
        }
  
        .drawer-header {
          min-height: 64px;
          padding: 16px;
          display: flex;
          flex-direction: column;
          justify-content: flex-end;
          box-sizing: border-box;
        }
  
        .drawer-content {
          flex-grow: 1;
          overflow-y: auto;
          overflow-x: hidden;
          -webkit-overflow-scrolling: touch;
        }
  
        .drawer-divider {
          height: 1px;
          background-color: var(--drawer-divider-color);
          margin: 8px 0;
        }
  
        /* Slotted elements styling */
        ::slotted(.drawer-title) {
          font-size: 20px;
          font-weight: 500;
          margin: 0;
          padding: 0;
        }
  
        ::slotted(.drawer-subtitle) {
          font-size: 14px;
          font-weight: 400;
          color: var(--drawer-secondary-text-color);
          margin: 4px 0 0 0;
          padding: 0;
        }
  
        ::slotted(.drawer-item) {
          display: flex;
          align-items: center;
          height: 48px;
          padding: 0 16px;
          font-size: 14px;
          font-weight: 500;
          cursor: pointer;
          user-select: none;
          text-decoration: none;
          color: var(--drawer-text-color);
          transition: background-color 0.2s ease;
        }
  
        ::slotted(.drawer-item:hover) {
          background-color: var(--drawer-hover-color);
        }
  
        ::slotted(.drawer-item.active) {
          background-color: var(--drawer-active-color);
        }
  
        ::slotted(.drawer-item-icon) {
          margin-right: 32px;
          color: var(--drawer-secondary-text-color);
        }
      `;this.shadowRoot.innerHTML=`
        <style>${s}</style>
        <div class="drawer-container">
          <div class="drawer-scrim"></div>
          <div class="drawer">
            <div class="drawer-header">
              <slot name="header"></slot>
            </div>
            <div class="drawer-divider"></div>
            <div class="drawer-content">
              <slot></slot>
            </div>
            <div class="drawer-footer">
              <slot name="footer"></slot>
            </div>
          </div>
        </div>
      `,this.shadowRoot.querySelector(".drawer-scrim").addEventListener("click",()=>{if(!this._permanent)this.close()})}}customElements.define("vc-drawer",T);var Fs=T;class B extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._message="",this._action="",this._actionHandler=null,this._duration=5000,this._position="bottom",this._isOpen=!1,this._timeoutId=null,this.render()}static get observedAttributes(){return["message","action","duration","position","open"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"message":this._message=o,this.updateMessage();break;case"action":this._action=o,this.updateAction();break;case"duration":this._duration=Number(o)||5000;break;case"position":this._position=o||"bottom",this.updatePosition();break;case"open":if(o===null)this.close();else this.open();break}}get message(){return this._message}set message(s){this._message=s,this.setAttribute("message",s),this.updateMessage()}get action(){return this._action}set action(s){this._action=s,this.setAttribute("action",s),this.updateAction()}get duration(){return this._duration}set duration(s){this._duration=Number(s)||5000,this.setAttribute("duration",s)}get position(){return this._position}set position(s){this._position=s||"bottom",this.setAttribute("position",s),this.updatePosition()}get isOpen(){return this._isOpen}open(){if(this._isOpen)return;if(this._isOpen=!0,this.setAttribute("open",""),this.shadowRoot.querySelector(".snackbar-container").classList.add("show"),this._duration!==-1)this._timeoutId=setTimeout(()=>{this.close()},this._duration);this.dispatchEvent(new CustomEvent("vc-snackbar-open",{bubbles:!0,composed:!0}))}close(){if(!this._isOpen)return;if(this._isOpen=!1,this.removeAttribute("open"),this.shadowRoot.querySelector(".snackbar-container").classList.remove("show"),this._timeoutId)clearTimeout(this._timeoutId),this._timeoutId=null;this.dispatchEvent(new CustomEvent("vc-snackbar-close",{bubbles:!0,composed:!0}))}setActionHandler(s){if(typeof s==="function")this._actionHandler=s}updateMessage(){let s=this.shadowRoot.querySelector(".snackbar-message");if(s)s.textContent=this._message}updateAction(){let s=this.shadowRoot.querySelector(".snackbar-action");if(s)if(this._action)s.textContent=this._action,s.style.display="inline-block";else s.style.display="none"}updatePosition(){let s=this.shadowRoot.querySelector(".snackbar-container");if(s){if(s.className="snackbar-container",s.classList.add(`position-${this._position}`),this._isOpen)s.classList.add("show")}}handleActionClick(s){if(this._actionHandler)this._actionHandler(s);this.close(),this.dispatchEvent(new CustomEvent("vc-snackbar-action",{bubbles:!0,composed:!0}))}render(){let s=document.createElement("style");s.textContent=`
      :host {
        position: fixed;
        z-index: 10000;
        left: 0;
        right: 0;
        pointer-events: none;
      }
      
      .snackbar-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-sizing: border-box;
        min-height: 48px;
        padding: 14px 16px;
        background-color: #323232;
        color: #fff;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.4;
        border-radius: 4px;
        box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);
        transform: translateY(100%);
        transition: transform 0.25s cubic-bezier(0, 0, 0.2, 1);
        max-width: 600px;
        margin: 0 auto;
        pointer-events: auto;
        opacity: 0;
      }
      
      .snackbar-container.show {
        transform: translateY(0);
        opacity: 1;
      }
      
      .position-bottom {
        position: fixed;
        bottom: 16px;
        left: 16px;
        right: 16px;
      }
      
      .position-top {
        position: fixed;
        top: 16px;
        left: 16px;
        right: 16px;
        transform: translateY(-100%);
      }
      
      .position-top.show {
        transform: translateY(0);
      }
      
      .position-bottom-center {
        position: fixed;
        bottom: 16px;
        left: 50%;
        transform: translate(-50%, 100%);
      }
      
      .position-bottom-center.show {
        transform: translate(-50%, 0);
      }
      
      .position-top-center {
        position: fixed;
        top: 16px;
        left: 50%;
        transform: translate(-50%, -100%);
      }
      
      .position-top-center.show {
        transform: translate(-50%, 0);
      }
      
      .snackbar-message {
        flex-grow: 1;
        margin-right: 48px;
      }
      
      .snackbar-action {
        background: none;
        border: none;
        color: #bb86fc;
        text-transform: uppercase;
        font-weight: 500;
        padding: 4px 8px;
        margin: -4px -8px -4px 8px;
        cursor: pointer;
        outline: none;
        font-family: inherit;
        font-size: 14px;
        letter-spacing: 0.5px;
      }
      
      .snackbar-action:hover,
      .snackbar-action:focus {
        background-color: rgba(187, 134, 252, 0.12);
        border-radius: 4px;
      }
    `;let h=document.createElement("div");h.className=`snackbar-container position-${this._position}`;let o=document.createElement("div");o.className="snackbar-message",o.textContent=this._message;let r=document.createElement("button");if(r.className="snackbar-action",r.textContent=this._action,!this._action)r.style.display="none";r.addEventListener("click",(b)=>this.handleActionClick(b)),h.appendChild(o),h.appendChild(r),this.shadowRoot.appendChild(s),this.shadowRoot.appendChild(h)}}customElements.define("vc-snackbar",B);var Rs=B;class I extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._tooltipContainer=document.createElement("div"),this._tooltipContainer.className="tooltip-container",this._tooltipContainer.style.display="none",this.shadowRoot.innerHTML=`
        <style>
          :host {
            position: relative;
            display: inline-block;
          }
          
          .tooltip-container {
            position: absolute;
            background-color: rgba(97, 97, 97, 0.9);
            color: white;
            font-family: Roboto, 'Helvetica Neue', sans-serif;
            font-size: 10px;
            font-weight: 500;
            line-height: 14px;
            padding: 8px 16px;
            border-radius: 4px;
            pointer-events: none;
            white-space: nowrap;
            z-index: 1000;
            transition: opacity 0.2s, transform 0.2s;
            opacity: 0;
            transform: scale(0.9);
            box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 
                        0 6px 10px 0 rgba(0,0,0,.14), 
                        0 1px 18px 0 rgba(0,0,0,.12);
          }
          
          .tooltip-container.visible {
            opacity: 1;
            transform: scale(1);
          }
          
          /* Arrow styles */
          .tooltip-container::after {
            content: '';
            position: absolute;
            width: 0;
            height: 0;
            border: 5px solid transparent;
          }
          
          .tooltip-container.top::after {
            border-top-color: rgba(97, 97, 97, 0.9);
            top: 100%;
            left: 50%;
            transform: translateX(-50%);
          }
          
          .tooltip-container.bottom::after {
            border-bottom-color: rgba(97, 97, 97, 0.9);
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
          }
          
          .tooltip-container.left::after {
            border-left-color: rgba(97, 97, 97, 0.9);
            top: 50%;
            left: 100%;
            transform: translateY(-50%);
          }
          
          .tooltip-container.right::after {
            border-right-color: rgba(97, 97, 97, 0.9);
            top: 50%;
            right: 100%;
            transform: translateY(-50%);
          }
          
          /* Slot style */
          ::slotted(*) {
            display: inline-block;
          }
        </style>
        <slot></slot>
      `,this.shadowRoot.appendChild(this._tooltipContainer),this._showTooltip=this._showTooltip.bind(this),this._hideTooltip=this._hideTooltip.bind(this),this._onSlotChange=this._onSlotChange.bind(this),this._position="top",this._delay=500,this._hideDelay=0,this._showTimeout=null,this._hideTimeout=null}static get observedAttributes(){return["text","position","delay","hide-delay"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"text":this._tooltipContainer.textContent=o;break;case"position":this._position=o||"top",this._updatePosition();break;case"delay":this._delay=o?parseInt(o,10):500;break;case"hide-delay":this._hideDelay=o?parseInt(o,10):0;break}}connectedCallback(){this.shadowRoot.querySelector("slot").addEventListener("slotchange",this._onSlotChange),this._updatePosition(),this._addEventListeners()}disconnectedCallback(){if(this.shadowRoot.querySelector("slot").removeEventListener("slotchange",this._onSlotChange),this._removeEventListeners(),this._showTimeout)clearTimeout(this._showTimeout),this._showTimeout=null;if(this._hideTimeout)clearTimeout(this._hideTimeout),this._hideTimeout=null}_onSlotChange(){this._addEventListeners()}_addEventListeners(){this.shadowRoot.querySelector("slot").assignedElements().forEach((h)=>{h.addEventListener("mouseenter",this._showTooltip),h.addEventListener("focus",this._showTooltip),h.addEventListener("mouseleave",this._hideTooltip),h.addEventListener("blur",this._hideTooltip),h.addEventListener("touchstart",this._showTooltip,{passive:!0}),h.addEventListener("touchend",this._hideTooltip,{passive:!0})})}_removeEventListeners(){this.shadowRoot.querySelector("slot").assignedElements().forEach((h)=>{h.removeEventListener("mouseenter",this._showTooltip),h.removeEventListener("focus",this._showTooltip),h.removeEventListener("mouseleave",this._hideTooltip),h.removeEventListener("blur",this._hideTooltip),h.removeEventListener("touchstart",this._showTooltip),h.removeEventListener("touchend",this._hideTooltip)})}_showTooltip(){if(this._hideTimeout)clearTimeout(this._hideTimeout),this._hideTimeout=null;this._showTimeout=setTimeout(()=>{this._tooltipContainer.style.display="block",this._updatePosition(),this._tooltipContainer.offsetWidth,this._tooltipContainer.classList.add("visible")},this._delay)}_hideTooltip(){if(this._showTimeout)clearTimeout(this._showTimeout),this._showTimeout=null;this._hideTimeout=setTimeout(()=>{this._tooltipContainer.classList.remove("visible"),setTimeout(()=>{this._tooltipContainer.style.display="none"},200)},this._hideDelay)}_updatePosition(){if(this._tooltipContainer.classList.remove("top","bottom","left","right"),this._tooltipContainer.classList.add(this._position),!this.shadowRoot.querySelector("slot").assignedElements().length)return;let h=this.shadowRoot.querySelector("slot").assignedElements()[0].getBoundingClientRect();this._tooltipContainer.style.top="",this._tooltipContainer.style.bottom="",this._tooltipContainer.style.left="",this._tooltipContainer.style.right="";let o=this._tooltipContainer.getBoundingClientRect();switch(this._position){case"top":this._tooltipContainer.style.bottom=`${h.height+8}px`,this._tooltipContainer.style.left=`${(h.width-o.width)/2}px`;break;case"bottom":this._tooltipContainer.style.top=`${h.height+8}px`,this._tooltipContainer.style.left=`${(h.width-o.width)/2}px`;break;case"left":this._tooltipContainer.style.right=`${h.width+8}px`,this._tooltipContainer.style.top=`${(h.height-o.height)/2}px`;break;case"right":this._tooltipContainer.style.left=`${h.width+8}px`,this._tooltipContainer.style.top=`${(h.height-o.height)/2}px`;break}}}customElements.define("vc-tooltip",I);var Os=I;class D extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`
        <style>
          :host {
            --vc-dialog-width: 280px;
            --vc-dialog-max-width: 80vw;
            --vc-dialog-max-height: 80vh;
            --vc-dialog-border-radius: 4px;
            --vc-dialog-bg-color: #ffffff;
            --vc-dialog-text-color: rgba(0, 0, 0, 0.87);
            --vc-dialog-secondary-text-color: rgba(0, 0, 0, 0.6);
            --vc-dialog-divider-color: rgba(0, 0, 0, 0.12);
            --vc-dialog-scrim-color: rgba(0, 0, 0, 0.32);
            --vc-dialog-elevation: 0 8px 10px -5px rgba(0, 0, 0, 0.2),
                                   0 16px 24px 2px rgba(0, 0, 0, 0.14),
                                   0 6px 30px 5px rgba(0, 0, 0, 0.12);
            --vc-dialog-title-font-size: 20px;
            --vc-dialog-content-font-size: 16px;
            
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 999;
            align-items: center;
            justify-content: center;
          }
  
          :host([open]) {
            display: flex;
          }
  
          .vc-dialog-scrim {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--vc-dialog-scrim-color);
          }
  
          .vc-dialog-container {
            position: relative;
            display: flex;
            flex-direction: column;
            width: var(--vc-dialog-width);
            max-width: var(--vc-dialog-max-width);
            max-height: var(--vc-dialog-max-height);
            background-color: var(--vc-dialog-bg-color);
            color: var(--vc-dialog-text-color);
            border-radius: var(--vc-dialog-border-radius);
            box-shadow: var(--vc-dialog-elevation);
            overflow: hidden;
            z-index: 1;
            transform: scale(0.8);
            opacity: 0;
            transition: transform 0.15s cubic-bezier(0, 0, 0.2, 1),
                        opacity 0.15s cubic-bezier(0, 0, 0.2, 1);
          }
  
          :host([open]) .vc-dialog-container {
            transform: scale(1);
            opacity: 1;
          }
  
          .vc-dialog-title {
            padding: 24px 24px 16px;
            font-size: var(--vc-dialog-title-font-size);
            font-weight: 500;
            line-height: 1.4;
            letter-spacing: 0.0125em;
          }
  
          .vc-dialog-content {
            flex: 1;
            padding: 0 24px 20px;
            font-size: var(--vc-dialog-content-font-size);
            line-height: 1.5;
            color: var(--vc-dialog-secondary-text-color);
            overflow-y: auto;
          }
  
          .vc-dialog-actions {
            display: flex;
            justify-content: flex-end;
            padding: 8px;
          }
  
          .vc-dialog-actions ::slotted(button) {
            margin-left: 8px;
            padding: 8px 8px;
            min-width: 64px;
            font-family: inherit;
            font-size: 14px;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.0892857143em;
            border: none;
            border-radius: 4px;
            background: transparent;
            color: #6200ee;
            cursor: pointer;
            transition: background-color 0.2s;
          }
  
          .vc-dialog-actions ::slotted(button:hover) {
            background-color: rgba(98, 0, 238, 0.08);
          }
  
          .vc-dialog-actions ::slotted(button[data-primary]) {
            background-color: #6200ee;
            color: white;
          }
  
          .vc-dialog-actions ::slotted(button[data-primary]:hover) {
            background-color: #5000d1;
          }
        </style>
  
        <div class="vc-dialog-scrim"></div>
        <div class="vc-dialog-container">
          <div class="vc-dialog-title">
            <slot name="title">Dialog Title</slot>
          </div>
          <div class="vc-dialog-content">
            <slot></slot>
          </div>
          <div class="vc-dialog-actions">
            <slot name="actions"></slot>
          </div>
        </div>
      `,this.scrim=this.shadowRoot.querySelector(".vc-dialog-scrim"),this.container=this.shadowRoot.querySelector(".vc-dialog-container"),this._handleKeydown=this._handleKeydown.bind(this),this._handleScrimClick=this._handleScrimClick.bind(this)}connectedCallback(){if(this.scrim.addEventListener("click",this._handleScrimClick),this.hasAttribute("open"))this._addGlobalListeners()}disconnectedCallback(){this.scrim.removeEventListener("click",this._handleScrimClick),this._removeGlobalListeners()}_addGlobalListeners(){document.addEventListener("keydown",this._handleKeydown),document.body.style.overflow="hidden"}_removeGlobalListeners(){document.removeEventListener("keydown",this._handleKeydown),document.body.style.overflow=""}_handleKeydown(s){if(s.key==="Escape")this.close()}_handleScrimClick(){if(this.hasAttribute("modal"))return;this.close()}static get observedAttributes(){return["open"]}attributeChangedCallback(s,h,o){if(s==="open")if(o!==null)this._addGlobalListeners(),this.dispatchEvent(new CustomEvent("vc-dialog-open"));else this._removeGlobalListeners(),this.dispatchEvent(new CustomEvent("vc-dialog-close"))}open(){if(!this.hasAttribute("open"))this.setAttribute("open","")}close(){if(this.hasAttribute("open"))this.removeAttribute("open")}}customElements.define("vc-dialog",D);var Ss=D;class v extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`
        <style>
          :host {
            display: inline-block;
            padding: 12px 16px;
            cursor: pointer;
            font-family: Roboto, Arial, sans-serif;
            font-size: 14px;
            font-weight: 500;
            text-transform: uppercase;
            color: rgba(0, 0, 0, 0.6);
            transition: color 0.3s ease, background-color 0.3s ease;
            position: relative;
            user-select: none;
            white-space: nowrap;
          }
          
          :host(:hover) {
            background-color: rgba(0, 0, 0, 0.04);
          }
          
          :host([active]) {
            color: #673ab7;
          }
          
          .indicator {
            display: none;
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: #673ab7;
            transform-origin: left center;
          }
          
          :host([active]) .indicator {
            display: block;
          }
          
          .ripple {
            position: absolute;
            border-radius: 50%;
            background-color: rgba(0, 0, 0, 0.1);
            transform: scale(0);
            pointer-events: none;
          }
          
          .ripple.animate {
            animation: ripple-effect 0.6s linear;
          }
          
          @keyframes ripple-effect {
            to {
              transform: scale(2);
              opacity: 0;
            }
          }
        </style>
        <slot></slot>
        <div class="indicator"></div>
      `,this._ripples=[],this._handleClick=this._handleClick.bind(this)}static get observedAttributes(){return["active"]}get active(){return this.hasAttribute("active")}set active(s){if(s)this.setAttribute("active","");else this.removeAttribute("active")}connectedCallback(){this.addEventListener("click",this._handleClick)}disconnectedCallback(){this.removeEventListener("click",this._handleClick)}attributeChangedCallback(s,h,o){if(s==="active"&&this.active){let r=new CustomEvent("tab-selected",{bubbles:!0,composed:!0,detail:{tab:this}});this.dispatchEvent(r)}}_handleClick(s){this.active=!0,this._createRipple(s)}_createRipple(s){let h=this.getBoundingClientRect(),o=s.clientX-h.left,r=s.clientY-h.top,b=document.createElement("div");b.classList.add("ripple"),b.style.left=`${o}px`,b.style.top=`${r}px`,this.shadowRoot.appendChild(b),b.offsetWidth,b.classList.add("animate"),setTimeout(()=>{b.remove()},600)}}class m extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`
        <style>
          :host {
            display: block;
            width: 100%;
            font-family: Roboto, Arial, sans-serif;
          }
          
          .tabs-header {
            display: flex;
            position: relative;
            border-bottom: 1px solid rgba(0, 0, 0, 0.12);
            overflow-x: auto;
            scrollbar-width: none; /* Firefox */
          }
          
          .tabs-header::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Edge */
          }
          
          .tabs-content {
            padding: 24px 16px;
          }
          
          ::slotted([slot="content"]) {
            display: none;
          }
          
          ::slotted([slot="content"][active]) {
            display: block;
          }
        </style>
        <div class="tabs-header">
          <slot name="tab"></slot>
        </div>
        <div class="tabs-content">
          <slot name="content"></slot>
        </div>
      `,this._handleTabSelected=this._handleTabSelected.bind(this)}connectedCallback(){this.shadowRoot.addEventListener("tab-selected",this._handleTabSelected),setTimeout(()=>{let s=this._getTabs(),h=s.find((o)=>o.hasAttribute("active"));if(!h&&s.length>0)s[0].active=!0;else if(h)this._activateTab(h)},0)}disconnectedCallback(){this.shadowRoot.removeEventListener("tab-selected",this._handleTabSelected)}_getTabs(){return Array.from(this.querySelectorAll('vc-tab[slot="tab"]'))}_getContents(){return Array.from(this.querySelectorAll('[slot="content"]'))}_handleTabSelected(s){let h=s.detail.tab;this._activateTab(h)}_activateTab(s){let h=this._getTabs();h.forEach((t)=>{if(t!==s)t.active=!1});let o=this._getContents(),r=h.indexOf(s);o.forEach((t,i)=>{if(i===r)t.setAttribute("active","");else t.removeAttribute("active")});let b=new CustomEvent("tabs-changed",{bubbles:!0,detail:{selectedIndex:r,selectedTab:s}});this.dispatchEvent(b)}selectTab(s){let h=this._getTabs();if(s>=0&&s<h.length)h[s].active=!0}}customElements.define("vc-tab",v);customElements.define("vc-tabs",m);class w extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._data=[],this._columns=[],this._sortColumn=null,this._sortDirection="asc",this._page=1,this._pageSize=10,this._totalPages=1,this._selectable=!1,this._selectedRows=new Set}static get observedAttributes(){return["selectable","page-size"]}attributeChangedCallback(s,h,o){if(s==="selectable")this._selectable=o!==null,this.render();else if(s==="page-size")this._pageSize=parseInt(o)||10,this._updatePagination(),this.render()}connectedCallback(){this.render()}set data(s){if(Array.isArray(s))this._data=[...s],this._updatePagination(),this.render()}get data(){return this._data}set columns(s){if(Array.isArray(s))this._columns=[...s],this.render()}get columns(){return this._columns}get selectedRows(){return Array.from(this._selectedRows).map((s)=>this._data[s])}_updatePagination(){if(this._totalPages=Math.ceil(this._data.length/this._pageSize),this._page=Math.min(this._page,this._totalPages),this._page<1)this._page=1}_sortData(){if(this._sortColumn!==null){let s=this._columns[this._sortColumn].key;this._data.sort((h,o)=>{let r=h[s],b=o[s],t=0;if(r>b)t=1;else if(r<b)t=-1;return this._sortDirection==="asc"?t:-t})}}_getVisibleData(){let s=(this._page-1)*this._pageSize,h=s+this._pageSize;return this._data.slice(s,h)}_handleHeaderClick(s){if(this._columns[s].sortable!==!1){if(this._sortColumn===s)this._sortDirection=this._sortDirection==="asc"?"desc":"asc";else this._sortColumn=s,this._sortDirection="asc";this._sortData(),this.render()}}_handleRowSelect(s,h){let o=(this._page-1)*this._pageSize+s;if(h)this._selectedRows.add(o);else this._selectedRows.delete(o);this._updateSelectAllCheckbox(),this.dispatchEvent(new CustomEvent("selection-change",{detail:{selectedRows:this.selectedRows}}))}_handleSelectAll(s){let h=this._getVisibleData(),o=(this._page-1)*this._pageSize;for(let r=0;r<h.length;r++){let b=o+r;if(s)this._selectedRows.add(b);else this._selectedRows.delete(b)}this.render(),this.dispatchEvent(new CustomEvent("selection-change",{detail:{selectedRows:this.selectedRows}}))}_handlePageChange(s){this._page=s,this.render(),this.dispatchEvent(new CustomEvent("page-change",{detail:{page:this._page}}))}_updateSelectAllCheckbox(){let s=this.shadowRoot.querySelector(".select-all-checkbox");if(!s)return;let h=this._getVisibleData(),o=(this._page-1)*this._pageSize,r=h.length>0,b=!1;for(let t=0;t<h.length;t++){let i=o+t;if(this._selectedRows.has(i))b=!0;else r=!1}if(r)s.checked=!0,s.indeterminate=!1;else if(b)s.checked=!1,s.indeterminate=!0;else s.checked=!1,s.indeterminate=!1}render(){let h=this._getVisibleData(),o=Math.min((this._page-1)*this._pageSize+1,this._data.length),r=Math.min(o+h.length-1,this._data.length),b="";if(b+="<tr>",this._selectable)b+=`<th class="checkbox-cell">
          <input type="checkbox" class="select-all-checkbox" ${h.length===0?"disabled":""}>
        </th>`;if(this._columns.forEach((_,d)=>{let x=this._sortColumn===d?`sorted-${this._sortDirection}`:"",z=`${_.sortable!==!1?"sortable":""} ${x}`.trim();b+=`<th class="${z}" data-column-index="${d}">
          ${_.label||_.key}
        </th>`}),b+="</tr>",h.length===0)b+=`<tr><td colspan="${this._columns.length+(this._selectable?1:0)}" class="empty-message">No data available</td></tr>`;else h.forEach((_,d)=>{let f=(this._page-1)*this._pageSize+d,x=this._selectedRows.has(f);if(b+="<tr>",this._selectable)b+=`<td class="checkbox-cell">
              <input type="checkbox" class="row-checkbox" data-row-index="${d}" ${x?"checked":""}>
            </td>`;this._columns.forEach((k)=>{let z=_[k.key],$=k.formatter?k.formatter(z,_):z;b+=`<td>${$!==void 0?$:""}</td>`}),b+="</tr>"});let t=this._data.length>0?`
        <div class="pagination">
          <div class="pagination-info">
            ${o}-${r} of ${this._data.length}
          </div>
          <div class="pagination-controls">
            <button class="pagination-button" data-page="first" ${this._page===1?"disabled":""}>
              ⟪
            </button>
            <button class="pagination-button" data-page="prev" ${this._page===1?"disabled":""}>
              ⟨
            </button>
            <button class="pagination-button" data-page="next" ${this._page===this._totalPages?"disabled":""}>
              ⟩
            </button>
            <button class="pagination-button" data-page="last" ${this._page===this._totalPages?"disabled":""}>
              ⟫
            </button>
          </div>
        </div>
      `:"";if(this.shadowRoot.innerHTML=`
        <style>
        :host {
          display: block;
          font-family: Roboto, 'Helvetica Neue', sans-serif;
          color: rgba(0, 0, 0, 0.87);
          background-color: #fff;
          border-radius: 4px;
          overflow: hidden;
          box-shadow: 0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12);
        }
        
        table {
          width: 100%;
          border-collapse: collapse;
        }
        
        th, td {
          padding: 0 16px;
          height: 48px;
          text-align: left;
          font-size: 14px;
          border-bottom: 1px solid rgba(0, 0, 0, 0.12);
          white-space: nowrap;
          position: relative;
        }
        
        th {
          color: rgba(0, 0, 0, 0.54);
          font-weight: 500;
          font-size: 12px;
          cursor: pointer;
          user-select: none;
          transition: background-color 0.2s;
        }
        
        th:hover {
          background-color: rgba(0, 0, 0, 0.04);
        }
        
        th.sortable:after {
          content: '';
          opacity: 0;
          margin-left: 4px;
          display: inline-block;
          width: 0;
          height: 0;
          border-left: 5px solid transparent;
          border-right: 5px solid transparent;
          vertical-align: middle;
        }
        
        th.sorted-asc:after {
          content: '';
          opacity: 1;
          border-bottom: 5px solid rgba(0, 0, 0, 0.54);
          border-top: 0;
        }
        
        th.sorted-desc:after {
          content: '';
          opacity: 1;
          border-top: 5px solid rgba(0, 0, 0, 0.54);
          border-bottom: 0;
        }
        
        tr:hover {
          background-color: rgba(0, 0, 0, 0.04);
        }
        
        .pagination {
          display: flex;
          align-items: center;
          justify-content: flex-end;
          padding: 8px 16px;
          font-size: 12px;
          color: rgba(0, 0, 0, 0.54);
        }
        
        .pagination-info {
          margin-right: 16px;
        }
        
        .pagination-controls {
          display: flex;
          align-items: center;
        }
        
        .pagination-button {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 24px;
          height: 24px;
          margin: 0 4px;
          border-radius: 50%;
          border: none;
          background: none;
          cursor: pointer;
          color: rgba(0, 0, 0, 0.54);
          transition: background-color 0.2s;
        }
        
        .pagination-button:hover {
          background-color: rgba(0, 0, 0, 0.04);
        }
        
        .pagination-button:disabled {
          opacity: 0.38;
          cursor: default;
        }
        
        .pagination-button:disabled:hover {
          background-color: transparent;
        }
        
        .checkbox-cell {
          width: 24px;
          padding: 0 12px 0 16px;
        }
        
        input[type="checkbox"] {
          appearance: none;
          -webkit-appearance: none;
          width: 18px;
          height: 18px;
          border: 2px solid rgba(0, 0, 0, 0.54);
          border-radius: 2px;
          position: relative;
          cursor: pointer;
          transition: background-color 0.2s, border-color 0.2s;
        }
        
        input[type="checkbox"]:checked {
          background-color: #1976d2;
          border-color: #1976d2;
        }
        
        input[type="checkbox"]:checked:after {
          content: '';
          position: absolute;
          top: 2px;
          left: 6px;
          width: 3px;
          height: 8px;
          border: solid white;
          border-width: 0 2px 2px 0;
          transform: rotate(45deg);
        }
        
        input[type="checkbox"]:indeterminate {
          background-color: #1976d2;
          border-color: #1976d2;
        }
        
        input[type="checkbox"]:indeterminate:after {
          content: '';
          position: absolute;
          top: 7px;
          left: 3px;
          width: 10px;
          height: 2px;
          background-color: white;
        }
        
        .empty-message {
          padding: 16px;
          text-align: center;
          color: rgba(0, 0, 0, 0.54);
        }
      </style>
        <table>
          ${b}
        </table>
        ${t}
      `,this._selectable){let _=this.shadowRoot.querySelector(".select-all-checkbox");if(_)_.addEventListener("change",(f)=>{this._handleSelectAll(f.target.checked)});this.shadowRoot.querySelectorAll(".row-checkbox").forEach((f)=>{f.addEventListener("change",(x)=>{let k=parseInt(x.target.getAttribute("data-row-index"));this._handleRowSelect(k,x.target.checked)})}),this._updateSelectAllCheckbox()}this.shadowRoot.querySelectorAll("th[data-column-index]").forEach((_)=>{_.addEventListener("click",(d)=>{let f=parseInt(d.currentTarget.getAttribute("data-column-index"));this._handleHeaderClick(f)})}),this.shadowRoot.querySelectorAll(".pagination-button").forEach((_)=>{_.addEventListener("click",(d)=>{let f=d.currentTarget.getAttribute("data-page"),x=this._page;switch(f){case"first":x=1;break;case"prev":x=this._page-1;break;case"next":x=this._page+1;break;case"last":x=this._totalPages;break}if(x>=1&&x<=this._totalPages&&x!==this._page)this._handlePageChange(x)})})}}customElements.define("vc-data-table",w);var Ps=w;class u extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._isOpen=!1,this._position="bottom-start",this._triggerElement=null,this._onDocumentClick=this._onDocumentClick.bind(this)}static get observedAttributes(){return["position","open"]}connectedCallback(){this.render(),this._setupEventListeners()}disconnectedCallback(){if(document.removeEventListener("click",this._onDocumentClick),this._triggerElement)this._triggerElement.removeEventListener("click",this._toggleMenu.bind(this))}attributeChangedCallback(s,h,o){if(s==="position"&&h!==o){if(this._position=o,this._isOpen)this._updateMenuPosition()}if(s==="open"&&h!==o)this._isOpen=o==="true",this._toggleMenuVisibility()}setTrigger(s){if(this._triggerElement)this._triggerElement.removeEventListener("click",this._toggleMenu.bind(this));if(this._triggerElement=s,this._triggerElement)this._triggerElement.addEventListener("click",this._toggleMenu.bind(this))}open(){if(!this._isOpen)this._isOpen=!0,this.setAttribute("open","true"),this._toggleMenuVisibility(),document.addEventListener("click",this._onDocumentClick)}close(){if(this._isOpen)this._isOpen=!1,this.setAttribute("open","false"),this._toggleMenuVisibility(),document.removeEventListener("click",this._onDocumentClick)}toggle(){if(this._isOpen)this.close();else this.open()}setPosition(s){if(this._position=s,this.setAttribute("position",s),this._isOpen)this._updateMenuPosition()}_setupEventListeners(){this.shadowRoot.querySelectorAll(".menu-item").forEach((o)=>{o.addEventListener("click",(r)=>{if(this.dispatchEvent(new CustomEvent("menu-select",{detail:{value:o.getAttribute("value")||o.textContent.trim()},bubbles:!0,composed:!0})),!r.preventDefault)this.close()})});let h=document.querySelector(`[aria-controls="${this.id}"]`);if(h)this.setTrigger(h)}_toggleMenu(){this.toggle()}_toggleMenuVisibility(){let s=this.shadowRoot.querySelector(".menu-container");if(s)if(this._isOpen)s.style.display="block",this._updateMenuPosition(),s.classList.add("menu-open"),setTimeout(()=>{let h=s.querySelector(".menu-item");if(h)h.focus()},100);else{s.classList.remove("menu-open");let h=()=>{s.style.display="none",s.removeEventListener("transitionend",h)};s.addEventListener("transitionend",h)}}_updateMenuPosition(){if(!this._triggerElement)return;let s=this.shadowRoot.querySelector(".menu-container");if(!s)return;let h=this._triggerElement.getBoundingClientRect(),o=s.getBoundingClientRect();s.style.top="0",s.style.left="0";let r,b;switch(this._position){case"top-start":r=h.top-o.height,b=h.left;break;case"top-end":r=h.top-o.height,b=h.right-o.width;break;case"bottom-end":r=h.bottom,b=h.right-o.width;break;case"bottom-start":default:r=h.bottom,b=h.left;break}s.style.top=`${r}px`,s.style.left=`${b}px`;let{innerHeight:t,innerWidth:i}=window;if(r+o.height>t)s.style.top=`${h.top-o.height}px`;if(b+o.width>i)s.style.left=`${h.right-o.width}px`}_onDocumentClick(s){if(!(this.contains(s.target)||this._triggerElement&&this._triggerElement.contains(s.target)||this.shadowRoot.contains(s.target))&&this._isOpen)this.close()}render(){let s=Array.from(this.children).map((h)=>{if(h.tagName==="BUTTON"||h.getAttribute("role")==="menuitem")return`<div class="menu-item" role="menuitem" tabindex="0" value="${h.getAttribute("value")||""}">${h.innerHTML}</div>`;else if(h.tagName==="HR"||h.classList.contains("divider"))return'<div class="menu-divider"></div>';else return h.outerHTML}).join("");this.shadowRoot.innerHTML=`
        <style>
          :host {
            display: inline-block;
            position: relative;
          }
          
          .menu-container {
            position: fixed;
            display: none;
            min-width: 112px;
            max-width: 280px;
            background-color: #fff;
            border-radius: 4px;
            box-shadow: 0 5px 5px -3px rgba(0,0,0,.2), 
                        0 8px 10px 1px rgba(0,0,0,.14), 
                        0 3px 14px 2px rgba(0,0,0,.12);
            padding: 8px 0;
            z-index: 1000;
            transform-origin: top left;
            transform: scale(0.8);
            opacity: 0;
            transition: transform 0.12s cubic-bezier(0, 0, 0.2, 1), 
                        opacity 0.12s cubic-bezier(0, 0, 0.2, 1);
            overflow: auto;
            max-height: calc(100vh - 48px);
          }
          
          .menu-container.menu-open {
            transform: scale(1);
            opacity: 1;
          }
          
          .menu-item {
            position: relative;
            display: flex;
            align-items: center;
            height: 48px;
            padding: 0 16px;
            font-size: 14px;
            font-family: Roboto, sans-serif;
            color: rgba(0, 0, 0, 0.87);
            cursor: pointer;
            user-select: none;
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
          }
          
          .menu-item:hover {
            background-color: rgba(0, 0, 0, 0.04);
          }
          
          .menu-item:focus {
            outline: none;
            background-color: rgba(0, 0, 0, 0.08);
          }
          
          .menu-divider {
            height: 1px;
            margin: 8px 0;
            background-color: rgba(0, 0, 0, 0.12);
          }
          
          /* Disabled item styling */
          .menu-item[disabled] {
            color: rgba(0, 0, 0, 0.38);
            pointer-events: none;
          }
        </style>
        <div class="menu-container" role="menu">
          ${s}
        </div>
      `}}customElements.define("vc-menu",u);var Ts=u;class n extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}static get observedAttributes(){return["cols","sm","md","lg","xl","offset","align","justify","order"]}connectedCallback(){this.render()}attributeChangedCallback(){this.render()}render(){let s=this.getAttribute("cols")||"12",h=this.getAttribute("sm")||null,o=this.getAttribute("md")||null,r=this.getAttribute("lg")||null,b=this.getAttribute("xl")||null,t=this.getAttribute("offset")||null,i=this.getAttribute("align")||"start",c=this.getAttribute("justify")||"start",_=this.getAttribute("order")||null;this.shadowRoot.innerHTML=`
        <style>
          :host {
            box-sizing: border-box;
            flex-basis: ${parseInt(s)/12*100}%;
            max-width: ${parseInt(s)/12*100}%;
            padding: 12px;
            display: flex;
            flex-direction: column;
          }
  
          ${h?`@media (min-width: 600px) { :host { flex-basis: ${parseInt(h)/12*100}%; max-width: ${parseInt(h)/12*100}%; } }`:""}
          ${o?`@media (min-width: 960px) { :host { flex-basis: ${parseInt(o)/12*100}%; max-width: ${parseInt(o)/12*100}%; } }`:""}
          ${r?`@media (min-width: 1264px) { :host { flex-basis: ${parseInt(r)/12*100}%; max-width: ${parseInt(r)/12*100}%; } }`:""}
          ${b?`@media (min-width: 1904px) { :host { flex-basis: ${parseInt(b)/12*100}%; max-width: ${parseInt(b)/12*100}%; } }`:""}
  
          ${t?`:host { margin-left: ${parseInt(t)/12*100}%; }`:""}
          ${_?`:host { order: ${_}; }`:""}
  
          :host {
            align-items: ${this._getAlignValue(i)};
            justify-content: ${this._getJustifyValue(c)};
          }
  
          ::slotted(*) {
            width: 100%;
          }
        </style>
        <slot></slot>
      `}_getAlignValue(s){return{start:"flex-start",end:"flex-end",center:"center",baseline:"baseline",stretch:"stretch"}[s]||"flex-start"}_getJustifyValue(s){return{start:"flex-start",end:"flex-end",center:"center","space-between":"space-between","space-around":"space-around","space-evenly":"space-evenly"}[s]||"flex-start"}}customElements.define("vc-col",n);var Bs=n;class a extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}static get observedAttributes(){return["dense","no-gutters","align","justify","wrap"]}connectedCallback(){this.render()}attributeChangedCallback(){this.render()}render(){let s=this.hasAttribute("dense"),h=this.hasAttribute("no-gutters"),o=this.getAttribute("align")||"start",r=this.getAttribute("justify")||"start",b=this.getAttribute("wrap")!=="no-wrap";this.shadowRoot.innerHTML=`
        <style>
          :host {
            display: flex;
            flex-wrap: ${b?"wrap":"nowrap"};
            flex: 1 1 auto;
            margin: ${h?"0":"-12px"};
            box-sizing: border-box;
            align-items: ${this._getAlignValue(o)};
            justify-content: ${this._getJustifyValue(r)};
          }
  
          ${s?":host { margin: -4px; }":""}
          ${s?"::slotted(vc-col) { padding: 4px; }":""}
        </style>
        <slot></slot>
      `}_getAlignValue(s){return{start:"flex-start",end:"flex-end",center:"center",baseline:"baseline",stretch:"stretch"}[s]||"flex-start"}_getJustifyValue(s){return{start:"flex-start",end:"flex-end",center:"center","space-between":"space-between","space-around":"space-around","space-evenly":"space-evenly"}[s]||"flex-start"}}customElements.define("vc-row",a);var Is=a;class V extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._value="",this._min="",this._max="",this._label="Select date",this._disabled=!1,this._required=!1,this._currentMonth=new Date,this._selectedDate=null,this._isOpen=!1,this._handleInputClick=this._handleInputClick.bind(this),this._handleDocumentClick=this._handleDocumentClick.bind(this),this._handlePrevMonthClick=this._handlePrevMonthClick.bind(this),this._handleNextMonthClick=this._handleNextMonthClick.bind(this),this._handleDateClick=this._handleDateClick.bind(this),this._handleInputChange=this._handleInputChange.bind(this),this._handleTodayClick=this._handleTodayClick.bind(this),this._handleClearClick=this._handleClearClick.bind(this)}static get observedAttributes(){return["value","min","max","label","disabled","required"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"value":this._value=o||"";try{if(this._selectedDate=o?new Date(o):null,this._selectedDate&&isNaN(this._selectedDate.getTime()))console.warn("Invalid date provided:",o),this._selectedDate=null}catch(r){console.error("Error parsing date:",r),this._selectedDate=null}if(this.shadowRoot&&this.shadowRoot.querySelector(".date-input"))this._updateInputValue();break;case"min":this._min=o||"";break;case"max":this._max=o||"";break;case"label":if(this._label=o||"Select date",this.shadowRoot&&this.shadowRoot.querySelector(".date-input-label"))this.shadowRoot.querySelector(".date-input-label").textContent=this._label;break;case"disabled":if(this._disabled=o!==null,this.shadowRoot&&this.shadowRoot.querySelector(".date-input"))this.shadowRoot.querySelector(".date-input").disabled=this._disabled;break;case"required":if(this._required=o!==null,this.shadowRoot&&this.shadowRoot.querySelector(".date-input"))this.shadowRoot.querySelector(".date-input").required=this._required;break}}connectedCallback(){this._render();let s=this.shadowRoot.querySelector(".date-input-wrapper"),h=this.shadowRoot.querySelector(".prev-month"),o=this.shadowRoot.querySelector(".next-month"),r=this.shadowRoot.querySelector(".date-input"),b=this.shadowRoot.querySelector(".today-btn"),t=this.shadowRoot.querySelector(".clear-btn");if(s)s.addEventListener("click",this._handleInputClick);if(h)h.addEventListener("click",this._handlePrevMonthClick);if(o)o.addEventListener("click",this._handleNextMonthClick);if(r)r.addEventListener("change",this._handleInputChange);if(b)b.addEventListener("click",this._handleTodayClick);if(t)t.addEventListener("click",this._handleClearClick);if(document.addEventListener("click",this._handleDocumentClick),this._value)try{let i=new Date(this._value);if(!isNaN(i.getTime()))this._selectedDate=i,this._currentMonth=new Date(i.getFullYear(),i.getMonth(),1);else console.warn("Invalid date value:",this._value),this._selectedDate=null}catch(i){console.error("Error parsing date:",i),this._selectedDate=null}this._updateCalendar(),this._updateInputValue()}disconnectedCallback(){document.removeEventListener("click",this._handleDocumentClick),this.shadowRoot.querySelector(".date-input-wrapper").removeEventListener("click",this._handleInputClick),this.shadowRoot.querySelector(".prev-month").removeEventListener("click",this._handlePrevMonthClick),this.shadowRoot.querySelector(".next-month").removeEventListener("click",this._handleNextMonthClick),this.shadowRoot.querySelector(".date-input").removeEventListener("change",this._handleInputChange),this.shadowRoot.querySelector(".today-btn").removeEventListener("click",this._handleTodayClick),this.shadowRoot.querySelector(".clear-btn").removeEventListener("click",this._handleClearClick)}_render(){this.shadowRoot.innerHTML=`
        <style>
          :host {
            display: inline-block;
            font-family: Roboto, 'Helvetica Neue', sans-serif;
            position: relative;
            min-width: 210px;
          }
          
          .date-input-wrapper {
            position: relative;
            margin-top: 16px;
          }
          
          .date-input {
            width: 100%;
            height: 56px;
            border: 1px solid rgba(0, 0, 0, 0.38);
            border-radius: 4px;
            padding: 0 16px;
            font-size: 16px;
            background: transparent;
            outline: none;
            transition: border-color 0.2s, box-shadow 0.2s;
            cursor: pointer;
          }
          
          .date-input:focus {
            border-color: #6200ee;
            box-shadow: 0 0 0 1px #6200ee;
          }
          
          .date-input:disabled {
            background: rgba(0, 0, 0, 0.04);
            border-color: rgba(0, 0, 0, 0.26);
            color: rgba(0, 0, 0, 0.38);
            cursor: not-allowed;
          }
          
          .date-input-label {
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: rgba(0, 0, 0, 0.6);
            pointer-events: none;
            transition: all 0.2s;
          }
          
          .date-input-wrapper.has-value .date-input-label,
          .date-input:focus + .date-input-label {
            top: 0;
            transform: translateY(-50%) scale(0.75);
            background: white;
            padding: 0 4px;
            color: #6200ee;
          }
          
          .calendar-icon {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: rgba(0, 0, 0, 0.54);
            pointer-events: none;
          }
          
          .calendar-dropdown {
            position: absolute;
            top: calc(100% + 8px);
            left: 0;
            z-index: 1000;
            display: none;
            width: 280px;
            background: white;
            border-radius: 4px;
            box-shadow: 0 5px 5px -3px rgba(0,0,0,.2), 
                       0 8px 10px 1px rgba(0,0,0,.14), 
                       0 3px 14px 2px rgba(0,0,0,.12);
            overflow: hidden;
          }
          
          .calendar-dropdown.open {
            display: block;
          }
          
          .calendar-header {
            background: #6200ee;
            color: white;
            padding: 16px;
            text-align: center;
          }
          
          .month-nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 16px;
            color: rgba(0, 0, 0, 0.87);
          }
          
          .month-nav button {
            background: transparent;
            border: none;
            cursor: pointer;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
          }
          
          .month-nav button:hover {
            background: rgba(0, 0, 0, 0.04);
          }
          
          .month-name {
            font-weight: 500;
            font-size: 14px;
          }
          
          .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            padding: 8px;
          }
          
          .weekday {
            text-align: center;
            font-size: 12px;
            font-weight: 500;
            color: rgba(0, 0, 0, 0.6);
            margin-bottom: 4px;
          }
          
          .date-cell {
            height: 36px;
            width: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            border-radius: 50%;
            font-size: 13px;
            margin: 2px 0;
          }
          
          .date-cell:hover {
            background: rgba(0, 0, 0, 0.04);
          }
          
          .date-cell.selected {
            background: #6200ee;
            color: white;
          }
          
          .date-cell.today {
            border: 1px solid #6200ee;
          }
          
          .date-cell.disabled {
            color: rgba(0, 0, 0, 0.38);
            cursor: default;
          }
          
          .date-cell.disabled:hover {
            background: transparent;
          }
          
          .date-cell.other-month {
            color: rgba(0, 0, 0, 0.38);
          }
          
          .calendar-actions {
            display: flex;
            justify-content: flex-end;
            padding: 8px 16px;
            border-top: 1px solid rgba(0, 0, 0, 0.12);
          }
          
          .calendar-actions button {
            background: transparent;
            border: none;
            color: #6200ee;
            font-weight: 500;
            text-transform: uppercase;
            padding: 8px 16px;
            cursor: pointer;
            font-size: 14px;
            letter-spacing: 0.5px;
            border-radius: 4px;
          }
          
          .calendar-actions button:hover {
            background: rgba(98, 0, 238, 0.04);
          }
        </style>
        
        <div class="date-input-wrapper">
          <input type="text" class="date-input" readonly ${this._disabled?"disabled":""} ${this._required?"required":""}>
          <span class="date-input-label">${this._label}</span>
          <span class="calendar-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
              <path fill="currentColor" d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/>
            </svg>
          </span>
        </div>
        
        <div class="calendar-dropdown">
          <div class="calendar-header">
            <div class="selected-date"></div>
          </div>
          
          <div class="month-nav">
            <button class="prev-month">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <path fill="currentColor" d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/>
              </svg>
            </button>
            <div class="month-name"></div>
            <button class="next-month">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <path fill="currentColor" d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"/>
              </svg>
            </button>
          </div>
          
          <div class="calendar-grid">
            <div class="weekday">S</div>
            <div class="weekday">M</div>
            <div class="weekday">T</div>
            <div class="weekday">W</div>
            <div class="weekday">T</div>
            <div class="weekday">F</div>
            <div class="weekday">S</div>
            <!-- Date cells will be added dynamically -->
          </div>
          
          <div class="calendar-actions">
            <button class="clear-btn">Clear</button>
            <button class="today-btn">Today</button>
          </div>
        </div>
      `}_updateCalendar(){if(!this._currentMonth||isNaN(this._currentMonth.getTime()))this._currentMonth=new Date;let s=this.shadowRoot.querySelector(".month-name");if(s){let g=this._currentMonth.toLocaleString("default",{month:"long",year:"numeric"});s.textContent=g}let h=this.shadowRoot.querySelector(".selected-date");if(h)if(this._selectedDate&&!isNaN(this._selectedDate.getTime()))try{let g=this._selectedDate.toLocaleDateString("default",{weekday:"long",month:"long",day:"numeric",year:"numeric"});h.textContent=g}catch(g){console.error("Error formatting date:",g),h.textContent="Invalid date"}else h.textContent="No date selected";let o=this.shadowRoot.querySelector(".calendar-grid");if(!o){console.error("Calendar grid element not found");return}let r=o.querySelectorAll(".weekday");if(o.innerHTML="",r.forEach((g)=>{o.appendChild(g)}),!this._currentMonth||isNaN(this._currentMonth.getTime()))this._currentMonth=new Date;let b=this._currentMonth.getFullYear(),t=this._currentMonth.getMonth(),i,c;try{i=new Date(b,t,1),c=i.getDay()}catch(g){console.error("Error creating first day of month:",g),i=new Date,c=i.getDay()}let _,d;try{_=new Date(b,t+1,0),d=_.getDate()}catch(g){console.error("Error creating last day of month:",g),_=new Date,d=30}let f,x;try{f=new Date(b,t,0),x=f.getDate()}catch(g){console.error("Error creating last day of previous month:",g),f=new Date,x=30}let k,z;try{k=new Date,z=k.toISOString().split("T")[0]}catch(g){console.error("Error formatting today's date:",g),z=""}let $=null,L=null;if(this._min)try{if($=new Date(this._min),isNaN($.getTime()))console.warn("Invalid min date:",this._min),$=null}catch(g){console.error("Error parsing min date:",g),$=null}if(this._max)try{if(L=new Date(this._max),isNaN(L.getTime()))console.warn("Invalid max date:",this._max),L=null}catch(g){console.error("Error parsing max date:",g),L=null}for(let g=c;g>0;g--){let y=x-g+1,p=new Date(b,t-1,y),q=p.toISOString().split("T")[0],A=$&&p<$||L&&p>L,M=document.createElement("div");if(M.classList.add("date-cell","other-month"),A)M.classList.add("disabled");if(M.textContent=y,M.dataset.date=q,!A)M.addEventListener("click",this._handleDateClick);o.appendChild(M)}for(let g=1;g<=d;g++){let y=new Date(b,t,g),p=y.toISOString().split("T")[0],q=p===z,A=this._selectedDate&&y.getDate()===this._selectedDate.getDate()&&y.getMonth()===this._selectedDate.getMonth()&&y.getFullYear()===this._selectedDate.getFullYear(),M=$&&y<$||L&&y>L,j=document.createElement("div");if(j.classList.add("date-cell"),q)j.classList.add("today");if(A)j.classList.add("selected");if(M)j.classList.add("disabled");if(j.textContent=g,j.dataset.date=p,!M)j.addEventListener("click",this._handleDateClick);o.appendChild(j)}let js=42-(c+d);for(let g=1;g<=js;g++){let y=new Date(b,t+1,g),p=y.toISOString().split("T")[0],q=$&&y<$||L&&y>L,A=document.createElement("div");if(A.classList.add("date-cell","other-month"),q)A.classList.add("disabled");if(A.textContent=g,A.dataset.date=p,!q)A.addEventListener("click",this._handleDateClick);o.appendChild(A)}}_updateInputValue(){let s=this.shadowRoot.querySelector(".date-input"),h=this.shadowRoot.querySelector(".date-input-wrapper");if(this._selectedDate!==null&&this._selectedDate!==void 0)if(!isNaN(this._selectedDate.getTime())){let o=this._formatDate(this._selectedDate);s.value=o,h.classList.add("has-value")}else s.value="",h.classList.remove("has-value");else s.value="",h.classList.remove("has-value")}_formatDate(s){if(!s)return"";try{if(isNaN(s.getTime()))return console.warn("Invalid date object in _formatDate"),"";let h=s.getFullYear(),o=String(s.getMonth()+1).padStart(2,"0"),r=String(s.getDate()).padStart(2,"0");return`${o}/${r}/${h}`}catch(h){return console.error("Error formatting date:",h),""}}_parseDate(s){if(!s)return null;let h=s.split("/");if(h.length===3){let r=parseInt(h[0],10)-1,b=parseInt(h[1],10),t=parseInt(h[2],10),i=new Date(t,r,b);if(!isNaN(i.getTime()))return i}let o=new Date(s);if(!isNaN(o.getTime()))return o;return null}_handleInputClick(s){if(this._disabled)return;s.stopPropagation(),this._toggleCalendar()}_handleDocumentClick(s){let h=this.shadowRoot.querySelector(".calendar-dropdown");if(!s.composedPath().includes(this)&&h.classList.contains("open"))this._closeCalendar()}_toggleCalendar(){if(this.shadowRoot.querySelector(".calendar-dropdown").classList.contains("open"))this._closeCalendar();else this._openCalendar()}_openCalendar(){if(this.shadowRoot.querySelector(".calendar-dropdown").classList.add("open"),this._isOpen=!0,this._selectedDate)this._currentMonth=new Date(this._selectedDate.getFullYear(),this._selectedDate.getMonth(),1);this._updateCalendar()}_closeCalendar(){this.shadowRoot.querySelector(".calendar-dropdown").classList.remove("open"),this._isOpen=!1}_handlePrevMonthClick(s){s.stopPropagation(),this._currentMonth=new Date(this._currentMonth.getFullYear(),this._currentMonth.getMonth()-1,1),this._updateCalendar()}_handleNextMonthClick(s){s.stopPropagation(),this._currentMonth=new Date(this._currentMonth.getFullYear(),this._currentMonth.getMonth()+1,1),this._updateCalendar()}_handleDateClick(s){s.stopPropagation();let h=s.currentTarget.dataset.date,o=new Date(h);this._selectedDate=o,this._value=h,this.setAttribute("value",h),this._updateCalendar(),this._updateInputValue(),this._dispatchChangeEvent(),this._closeCalendar()}_handleInputChange(s){let h=s.target.value,o=this._parseDate(h);if(o)this._selectedDate=o,this._value=o.toISOString().split("T")[0],this.setAttribute("value",this._value),this._dispatchChangeEvent();else if(h==="")this._selectedDate=null,this._value="",this.removeAttribute("value"),this._dispatchChangeEvent();this._updateInputValue()}_handleTodayClick(s){s.stopPropagation();let h=new Date,o=h.toISOString().split("T")[0],r=null,b=null;if(this._min){if(r=new Date(this._min),isNaN(r.getTime()))r=null}if(this._max){if(b=new Date(this._max),isNaN(b.getTime()))b=null}if(r&&h<r||b&&h>b)return;this._selectedDate=h,this._value=o,this._currentMonth=new Date(h.getFullYear(),h.getMonth(),1),this.setAttribute("value",o),this._updateCalendar(),this._updateInputValue(),this._dispatchChangeEvent(),this._closeCalendar()}_handleClearClick(s){s.stopPropagation(),this._selectedDate=null,this._value="",this.removeAttribute("value"),this._updateCalendar(),this._updateInputValue(),this._dispatchChangeEvent(),this._closeCalendar()}_dispatchChangeEvent(){let s=new CustomEvent("change",{detail:{value:this._value,date:this._selectedDate},bubbles:!0,composed:!0});this.dispatchEvent(s)}get value(){return this._value}set value(s){if(s===this._value)return;if(s)try{let h=new Date(s);if(!isNaN(h.getTime()))this._value=s,this._selectedDate=h,this.setAttribute("value",s);else console.warn("Invalid date format:",s),this._value="",this._selectedDate=null,this.removeAttribute("value")}catch(h){console.error("Error parsing date:",h),this._value="",this._selectedDate=null,this.removeAttribute("value")}else this._value="",this._selectedDate=null,this.removeAttribute("value");if(this.isConnected&&this.shadowRoot){if(this._updateInputValue(),this._isOpen)this._updateCalendar()}}get label(){return this._label}set label(s){this._label=s,this.setAttribute("label",s)}get min(){return this._min}set min(s){this._min=s,this.setAttribute("min",s)}get max(){return this._max}set max(s){this._max=s,this.setAttribute("max",s)}get disabled(){return this._disabled}set disabled(s){if(this._disabled=Boolean(s),this._disabled)this.setAttribute("disabled","");else this.removeAttribute("disabled")}get required(){return this._required}set required(s){if(this._required=Boolean(s),this._required)this.setAttribute("required","");else this.removeAttribute("required")}}customElements.define("vc-date-picker",V);var Ds=V;class l extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._interval=6000,this._continuous=!0,this._showArrows=!0,this._showDelimiters=!0,this._currentIndex=0,this._autoplay=!1,this._timer=null,this._touch={startX:0,endX:0},this._render(),this._setupEventListeners()}static get observedAttributes(){return["continuous","interval","show-arrows","show-delimiters","autoplay","height"]}attributeChangedCallback(s,h,o){switch(s){case"continuous":this._continuous=o!=="false";break;case"interval":this._interval=parseInt(o)||6000,this._resetAutoplay();break;case"show-arrows":this._showArrows=o!=="false",this._updateControls();break;case"show-delimiters":this._showDelimiters=o!=="false",this._updateControls();break;case"autoplay":this._autoplay=o!=="false",this._resetAutoplay();break;case"height":this.shadowRoot.querySelector(".carousel").style.height=o;break}}connectedCallback(){if(this._updateSlides(),this._updateControls(),this._resetAutoplay(),this.hasAttribute("continuous"))this._continuous=this.getAttribute("continuous")!=="false";if(this.hasAttribute("interval"))this._interval=parseInt(this.getAttribute("interval"))||6000;if(this.hasAttribute("show-arrows"))this._showArrows=this.getAttribute("show-arrows")!=="false";if(this.hasAttribute("show-delimiters"))this._showDelimiters=this.getAttribute("show-delimiters")!=="false";if(this.hasAttribute("autoplay"))this._autoplay=this.getAttribute("autoplay")!=="false";if(this.hasAttribute("height"))this.shadowRoot.querySelector(".carousel").style.height=this.getAttribute("height")}disconnectedCallback(){this._stopAutoplay(),this._removeEventListeners()}_render(){let s=document.createElement("style");s.textContent=`
        :host {
          display: block;
        }
        
        .carousel {
          position: relative;
          overflow: hidden;
          width: 100%;
          height: 400px;
          border-radius: 4px;
          background-color: #f5f5f5;
          box-shadow: 0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);
        }
        
        .carousel__slides {
          position: relative;
          height: 100%;
          width: 100%;
          display: flex;
          transition: transform 0.5s cubic-bezier(0.25, 0.8, 0.5, 1);
          will-change: transform;
        }
        
        .carousel__slide {
          display: flex;
          align-items: center;
          justify-content: center;
          flex: 0 0 100%;
          height: 100%;
          width: 100%;
          position: relative;
          overflow: hidden;
          transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);
        }
        
        .carousel__controls {
          position: absolute;
          height: 100%;
          width: 100%;
          top: 0;
          left: 0;
          display: flex;
          align-items: center;
          justify-content: space-between;
        }
        
        .carousel__arrow {
          color: #fff;
          background-color: rgba(0, 0, 0, 0.3);
          margin: 0 16px;
          display: flex;
          align-items: center;
          justify-content: center;
          border-radius: 50%;
          width: 36px;
          height: 36px;
          cursor: pointer;
          user-select: none;
          transition: background-color 0.3s ease;
          box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);
        }
        
        .carousel__arrow:hover {
          background-color: rgba(0, 0, 0, 0.5);
        }
        
        .carousel__arrow--prev::after {
          content: '⟨';
          font-size: 20px;
        }
        
        .carousel__arrow--next::after {
          content: '⟩';
          font-size: 20px;
        }
        
        .carousel__delimiters {
          position: absolute;
          bottom: 16px;
          left: 50%;
          transform: translateX(-50%);
          display: flex;
          align-items: center;
          gap: 8px;
        }
        
        .carousel__delimiter {
          width: 12px;
          height: 12px;
          background-color: rgba(255, 255, 255, 0.5);
          border-radius: 50%;
          cursor: pointer;
          transition: background-color 0.3s ease;
        }
        
        .carousel__delimiter--active {
          background-color: #fff;
        }
      `;let h=document.createElement("div");h.className="carousel";let o=document.createElement("div");o.className="carousel__slides";let r=document.createElement("div");r.className="carousel__controls";let b=document.createElement("div");b.className="carousel__arrow carousel__arrow--prev",b.setAttribute("data-direction","prev");let t=document.createElement("div");t.className="carousel__arrow carousel__arrow--next",t.setAttribute("data-direction","next"),r.appendChild(b),r.appendChild(t);let i=document.createElement("div");i.className="carousel__delimiters",h.appendChild(o),h.appendChild(r),h.appendChild(i),this.shadowRoot.appendChild(s),this.shadowRoot.appendChild(h)}_setupEventListeners(){let s=this.shadowRoot.querySelector(".carousel__arrow--prev"),h=this.shadowRoot.querySelector(".carousel__arrow--next");s.addEventListener("click",()=>this.prev()),h.addEventListener("click",()=>this.next());let o=this.shadowRoot.querySelector(".carousel");o.addEventListener("touchstart",this._handleTouchStart.bind(this),{passive:!0}),o.addEventListener("touchend",this._handleTouchEnd.bind(this),{passive:!0}),o.addEventListener("mouseenter",()=>{if(this._autoplay)this._stopAutoplay()}),o.addEventListener("mouseleave",()=>{if(this._autoplay)this._startAutoplay()}),this.addEventListener("slotchange",()=>{this._updateSlides(),this._updateControls()})}_removeEventListeners(){let s=this.shadowRoot.querySelector(".carousel__arrow--prev"),h=this.shadowRoot.querySelector(".carousel__arrow--next"),o=this.shadowRoot.querySelector(".carousel");s.removeEventListener("click",()=>this.prev()),h.removeEventListener("click",()=>this.next()),o.removeEventListener("touchstart",this._handleTouchStart.bind(this)),o.removeEventListener("touchend",this._handleTouchEnd.bind(this)),o.removeEventListener("mouseenter",()=>{if(this._autoplay)this._stopAutoplay()}),o.removeEventListener("mouseleave",()=>{if(this._autoplay)this._startAutoplay()})}_handleTouchStart(s){this._touch.startX=s.touches[0].clientX}_handleTouchEnd(s){this._touch.endX=s.changedTouches[0].clientX;let h=this._touch.startX-this._touch.endX;if(h>50)this.next();else if(h<-50)this.prev()}_updateSlides(){let s=Array.from(this.children).filter((o)=>o.nodeType===Node.ELEMENT_NODE);if(s.length===0)return;let h=this.shadowRoot.querySelector(".carousel__slides");h.innerHTML="",s.forEach((o,r)=>{let b=document.createElement("div");b.className="carousel__slide",b.setAttribute("data-index",r);let t=document.createElement("slot");t.name=`slide-${r}`,o.slot=`slide-${r}`,b.appendChild(t),h.appendChild(b)}),this._goToSlide(this._currentIndex)}_updateControls(){this.shadowRoot.querySelectorAll(".carousel__arrow").forEach((r)=>{r.style.display=this._showArrows?"flex":"none"});let h=Array.from(this.children).filter((r)=>r.nodeType===Node.ELEMENT_NODE),o=this.shadowRoot.querySelector(".carousel__delimiters");if(o.innerHTML="",this._showDelimiters)h.forEach((r,b)=>{let t=document.createElement("div");if(t.className="carousel__delimiter",b===this._currentIndex)t.classList.add("carousel__delimiter--active");t.setAttribute("data-index",b),t.addEventListener("click",()=>this._goToSlide(b)),o.appendChild(t)}),o.style.display="flex";else o.style.display="none"}_goToSlide(s){let h=Array.from(this.children).filter((b)=>b.nodeType===Node.ELEMENT_NODE);if(h.length===0)return;if(s<0)s=this._continuous?h.length-1:0;else if(s>=h.length)s=this._continuous?0:h.length-1;this._currentIndex=s;let o=this.shadowRoot.querySelector(".carousel__slides");o.style.transform=`translateX(-${s*100}%)`,this.shadowRoot.querySelectorAll(".carousel__delimiter").forEach((b,t)=>{if(t===s)b.classList.add("carousel__delimiter--active");else b.classList.remove("carousel__delimiter--active")}),this.dispatchEvent(new CustomEvent("change",{detail:{index:this._currentIndex}}))}_resetAutoplay(){if(this._stopAutoplay(),this._autoplay)this._startAutoplay()}_startAutoplay(){this._timer=setInterval(()=>{this.next()},this._interval)}_stopAutoplay(){if(this._timer)clearInterval(this._timer),this._timer=null}next(){this._goToSlide(this._currentIndex+1)}prev(){this._goToSlide(this._currentIndex-1)}goTo(s){this._goToSlide(s)}}customElements.define("vc-carousel",l);var vs=l;class e extends HTMLElement{constructor(){super();this._shadowRoot=this.attachShadow({mode:"open"}),this._currentStep=0,this._steps=[],this._vertical=!1,this._editable=!1,this._nonLinear=!1}static get observedAttributes(){return["vertical","editable","non-linear","current-step"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"vertical":this._vertical=o!==null,this._render();break;case"editable":this._editable=o!==null,this._render();break;case"non-linear":this._nonLinear=o!==null,this._render();break;case"current-step":let r=parseInt(o,10);if(!isNaN(r)&&r>=0)this._currentStep=r,this._updateActiveStep();break}}connectedCallback(){this._parseSteps(),this._setupStyles(),this._render(),this._observer=new MutationObserver(()=>{this._parseSteps(),this._render()}),this._observer.observe(this,{childList:!0,subtree:!0})}disconnectedCallback(){if(this._observer)this._observer.disconnect()}_parseSteps(){this._steps=[],this.querySelectorAll("vc-step").forEach((h,o)=>{let r=h.getAttribute("title")||`Step ${o+1}`,b=h.getAttribute("subtitle")||"",t=h.hasAttribute("complete"),i=h.hasAttribute("error"),c=h.hasAttribute("disabled");this._steps.push({title:r,subtitle:b,complete:t,error:i,disabled:c,content:h.innerHTML,element:h})})}_setupStyles(){let s=document.createElement("style");s.textContent=`
        :host {
          display: block;
          font-family: Roboto, sans-serif;
          --primary-color: #1976D2;
          --error-color: #FF5252;
          --disabled-color: #9E9E9E;
          --complete-color: #4CAF50;
          --step-size: 24px;
          --step-connector-size: 1px;
        }
        
        .stepper {
          display: flex;
          flex-direction: column;
          width: 100%;
        }
        
        .stepper-header {
          display: flex;
          flex-direction: row;
          align-items: center;
          justify-content: space-between;
          width: 100%;
        }
        
        .stepper-vertical .stepper-header {
          flex-direction: column;
          align-items: flex-start;
        }
        
        .step {
          display: flex;
          flex: 1;
          align-items: center;
          position: relative;
        }
        
        .stepper-vertical .step {
          flex-direction: column;
          align-items: flex-start;
          margin-bottom: 8px;
          flex: 0;
          width: 100%;
        }
        
        .step-content {
          position: relative;
          width: 100%;
          padding: 16px;
          box-sizing: border-box;
          display: none;
        }
        
        .step-content.active {
          display: block;
        }
        
        .step-dot {
          width: var(--step-size);
          height: var(--step-size);
          border-radius: 50%;
          background-color: var(--primary-color);
          display: flex;
          align-items: center;
          justify-content: center;
          color: white;
          font-size: 12px;
          z-index: 2;
          transition: background-color 0.3s ease;
        }
        
        .step.complete .step-dot {
          background-color: var(--complete-color);
        }
        
        .step.error .step-dot {
          background-color: var(--error-color);
        }
        
        .step.disabled .step-dot {
          background-color: var(--disabled-color);
        }
        
        .step-info {
          margin-left: 8px;
          position: relative;
          z-index: 1;
        }
        
        .stepper-vertical .step-info {
          margin-left: 32px;
          margin-top: -16px;
        }
        
        .step-title {
          font-size: 14px;
          font-weight: 500;
          color: rgba(0, 0, 0, 0.87);
        }
        
        .step-subtitle {
          font-size: 12px;
          color: rgba(0, 0, 0, 0.54);
        }
        
        .step.disabled .step-title,
        .step.disabled .step-subtitle {
          color: var(--disabled-color);
        }
        
        .step-connector {
          flex: 1;
          height: var(--step-connector-size);
          background-color: rgba(0, 0, 0, 0.12);
          margin: 0 12px;
        }
        
        .stepper-vertical .step-connector {
          width: var(--step-connector-size);
          height: 24px;
          margin: 0;
          margin-left: calc(var(--step-size) / 2);
          position: absolute;
          top: var(--step-size);
          bottom: 0;
        }
        
        .step:last-child .step-connector {
          display: none;
        }
        
        .step.complete .step-connector,
        .step.active .step-connector {
          background-color: var(--primary-color);
        }
        
        .step.error .step-connector {
          background-color: var(--error-color);
        }
        
        .step.clickable {
          cursor: pointer;
        }
        
        .step.clickable:hover .step-dot {
          box-shadow: 0 0 0 4px rgba(25, 118, 210, 0.1);
        }
        
        .actions {
          display: flex;
          justify-content: flex-end;
          margin-top: 16px;
          gap: 8px;
        }
        
        button {
          padding: 8px 16px;
          background-color: var(--primary-color);
          color: white;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          font-size: 14px;
          text-transform: uppercase;
          letter-spacing: 0.5px;
        }
        
        button:hover {
          background-color: #1565C0;
        }
        
        button:disabled {
          background-color: rgba(0, 0, 0, 0.12);
          color: rgba(0, 0, 0, 0.26);
          cursor: not-allowed;
        }
        
        button.secondary {
          background-color: transparent;
          color: var(--primary-color);
        }
        
        button.secondary:hover {
          background-color: rgba(25, 118, 210, 0.1);
        }
      `,this._shadowRoot.appendChild(s)}_render(){while(this._shadowRoot.firstChild){if(this._shadowRoot.firstChild.nodeName==="STYLE")break;this._shadowRoot.removeChild(this._shadowRoot.firstChild)}let s=document.createElement("div");s.className=`stepper ${this._vertical?"stepper-vertical":""}`;let h=document.createElement("div");h.className="stepper-header",this._steps.forEach((t,i)=>{let c=document.createElement("div");if(c.className=`step ${i===this._currentStep?"active":""}`,t.complete)c.classList.add("complete");if(t.error)c.classList.add("error");if(t.disabled)c.classList.add("disabled");if((this._editable||this._nonLinear)&&!t.disabled)c.classList.add("clickable"),c.addEventListener("click",()=>this.goToStep(i));let _=document.createElement("div");_.className="step-dot",_.textContent=i+1,c.appendChild(_);let d=document.createElement("div");d.className="step-info";let f=document.createElement("div");if(f.className="step-title",f.textContent=t.title,d.appendChild(f),t.subtitle){let k=document.createElement("div");k.className="step-subtitle",k.textContent=t.subtitle,d.appendChild(k)}c.appendChild(d);let x=document.createElement("div");x.className="step-connector",c.appendChild(x),h.appendChild(c)}),s.appendChild(h),this._steps.forEach((t,i)=>{let c=document.createElement("div");c.className=`step-content ${i===this._currentStep?"active":""}`,c.innerHTML=t.content,s.appendChild(c)});let o=document.createElement("div");o.className="actions";let r=document.createElement("button");r.className="secondary",r.textContent="Back",r.disabled=this._currentStep===0,r.addEventListener("click",()=>this.prev());let b=document.createElement("button");b.textContent=this._currentStep===this._steps.length-1?"Finish":"Continue",b.addEventListener("click",()=>this.next()),o.appendChild(r),o.appendChild(b),s.appendChild(o),this._shadowRoot.appendChild(s)}_updateActiveStep(){let s=this._shadowRoot.querySelectorAll(".step"),h=this._shadowRoot.querySelectorAll(".step-content");s.forEach((b,t)=>{if(t===this._currentStep)b.classList.add("active");else b.classList.remove("active")}),h.forEach((b,t)=>{if(t===this._currentStep)b.classList.add("active");else b.classList.remove("active")});let o=this._shadowRoot.querySelector("button.secondary");if(o)o.disabled=this._currentStep===0;let r=this._shadowRoot.querySelector("button:not(.secondary)");if(r)r.textContent=this._currentStep===this._steps.length-1?"Finish":"Continue";this.dispatchEvent(new CustomEvent("step-change",{detail:{currentStep:this._currentStep,step:this._steps[this._currentStep]}}))}next(){if(this._currentStep<this._steps.length-1){if(this._steps[this._currentStep]&&this._steps[this._currentStep].element)this._steps[this._currentStep].element.setAttribute("complete",""),this._steps[this._currentStep].complete=!0;if(this._currentStep++,this._updateActiveStep(),this._currentStep===this._steps.length-1)this.dispatchEvent(new CustomEvent("stepper-complete"))}}prev(){if(this._currentStep>0)this._currentStep--,this._updateActiveStep()}goToStep(s){if(s>=0&&s<this._steps.length&&(this._nonLinear||this._editable||s<this._currentStep))this._currentStep=s,this._updateActiveStep()}getCurrentStep(){return this._currentStep}reset(){this._currentStep=0,this._steps.forEach((s)=>{if(s.element){if(s.complete)s.element.removeAttribute("complete"),s.complete=!1;if(s.error)s.element.removeAttribute("error"),s.error=!1}}),this._updateActiveStep(),this._render()}}class ss extends HTMLElement{static get observedAttributes(){return["title","subtitle","complete","error","disabled"]}attributeChangedCallback(s,h,o){let r=this.closest("vc-stepper");if(r){let b=new CustomEvent("step-update",{detail:{step:this,attribute:s,oldValue:h,newValue:o}});r.dispatchEvent(b)}}}customElements.define("vc-stepper",e);customElements.define("vc-step",ss);class os extends HTMLElement{constructor(){super();this._items=[],this._divider="/",this.attachShadow({mode:"open"})}static get observedAttributes(){return["divider","dark"]}connectedCallback(){this._processSlotItems(),this._render(),this._observer=new MutationObserver(()=>{this._processSlotItems(),this._render()}),this._observer.observe(this,{childList:!0,subtree:!0,characterData:!0,attributes:!0})}disconnectedCallback(){if(this._observer)this._observer.disconnect()}attributeChangedCallback(s,h,o){if(s==="divider"&&h!==o)this._divider=o,this._render();else if(s==="dark"&&h!==o)this._render()}_processSlotItems(){this._items=[];let s=this.querySelectorAll("vc-breadcrumb-item");s.forEach((h,o)=>{let r=h.textContent.trim(),b=h.getAttribute("href")||null,t=h.hasAttribute("disabled"),i=o===s.length-1||h.hasAttribute("active");this._items.push({text:r,href:b,disabled:t,active:i})})}_render(){let s=this.hasAttribute("dark");this.shadowRoot.innerHTML=`
        <style>
          :host {
            display: flex;
            align-items: center;
            font-family: 'Roboto', sans-serif;
            font-size: 14px;
            padding: 8px 0;
          }
          
          .breadcrumbs {
            display: flex;
            flex-wrap: wrap;
            flex: 0 1 auto;
            list-style-type: none;
            margin: 0;
            padding: 0;
            background: transparent;
          }
          
          .breadcrumb-item {
            display: inline-flex;
            align-items: center;
            position: relative;
            color: ${s?"rgba(255, 255, 255, 0.7)":"rgba(0, 0, 0, 0.6)"};
            transition: color 0.2s ease;
          }
          
          .breadcrumb-item.active {
            color: ${s?"rgba(255, 255, 255, 1)":"rgba(0, 0, 0, 0.87)"};
            font-weight: 500;
            pointer-events: none;
          }
          
          .breadcrumb-item.disabled {
            color: ${s?"rgba(255, 255, 255, 0.5)":"rgba(0, 0, 0, 0.38)"};
            pointer-events: none;
          }
          
          .breadcrumb-item a {
            color: inherit;
            text-decoration: none;
            outline: none;
          }
          
          .breadcrumb-item:not(.active):not(.disabled):hover {
            color: ${s?"rgba(255, 255, 255, 0.9)":"rgba(0, 0, 0, 0.87)"};
          }
          
          .breadcrumb-divider {
            padding: 0 8px;
            color: ${s?"rgba(255, 255, 255, 0.5)":"rgba(0, 0, 0, 0.38)"};
            user-select: none;
          }
        </style>
        
        <nav aria-label="Breadcrumb">
          <ol class="breadcrumbs" role="list">
            ${this._items.map((h,o)=>`
              <li class="breadcrumb-item ${h.active?"active":""} ${h.disabled?"disabled":""}" 
                  ${h.active?'aria-current="page"':""}>
                ${this._renderItem(h)}
              </li>
              ${o<this._items.length-1?`<li class="breadcrumb-divider" aria-hidden="true">${this._divider}</li>`:""}
            `).join("")}
          </ol>
        </nav>
      `}_renderItem(s){if(s.href&&!s.disabled&&!s.active)return`<a href="${s.href}">${s.text}</a>`;else return s.text}set divider(s){this.setAttribute("divider",s)}get divider(){return this._divider}}class hs extends HTMLElement{static get observedAttributes(){return["href","disabled","active"]}attributeChangedCallback(){let s=new CustomEvent("breadcrumb-item-changed",{bubbles:!0,composed:!0});this.dispatchEvent(s)}}customElements.define("vc-breadcrumbs",os);customElements.define("vc-breadcrumb-item",hs);class rs extends HTMLElement{constructor(){super();this._shadow=this.attachShadow({mode:"open"}),this._accordionMode=!1,this._panels=[],this._render()}static get observedAttributes(){return["accordion"]}attributeChangedCallback(s,h,o){if(s==="accordion")this._accordionMode=o!==null,this._updateAccordionBehavior()}connectedCallback(){this._updatePanels(),this.addEventListener("panel-toggle",this._handlePanelToggle.bind(this))}disconnectedCallback(){this.removeEventListener("panel-toggle",this._handlePanelToggle)}_handlePanelToggle(s){let h=s.detail.panel;if(this._accordionMode&&h.expanded)this._panels.forEach((o)=>{if(o!==h&&o.expanded)o.collapse()})}_updatePanels(){this._panels=Array.from(this.querySelectorAll("vc-expansion-panel")),this._updateAccordionBehavior()}_updateAccordionBehavior(){if(this._accordionMode){let s=this._panels.filter((h)=>h.expanded);if(s.length>1)s.slice(1).forEach((h)=>h.collapse())}}_render(){let s=document.createElement("style");s.textContent=`
        :host {
          display: block;
          width: 100%;
          font-family: Roboto, sans-serif;
          --panel-border-radius: 4px;
          --panel-elevation: 0 2px 4px rgba(0, 0, 0, 0.12);
          --panel-background: #fff;
          --panel-header-height: 48px;
          --panel-header-color: rgba(0, 0, 0, 0.87);
          --panel-header-active-color: #1976d2;
          --panel-disabled-color: rgba(0, 0, 0, 0.38);
          --panel-transition-duration: 0.3s;
        }
        
        ::slotted(vc-expansion-panel) {
          margin-bottom: 8px;
        }
        
        ::slotted(vc-expansion-panel:last-child) {
          margin-bottom: 0;
        }
      `;let h=document.createElement("slot");this._shadow.appendChild(s),this._shadow.appendChild(h)}}class bs extends HTMLElement{constructor(){super();this._shadow=this.attachShadow({mode:"open"}),this._expanded=!1,this._disabled=!1,this._render()}static get observedAttributes(){return["expanded","disabled"]}get expanded(){return this._expanded}get disabled(){return this._disabled}attributeChangedCallback(s,h,o){if(s==="expanded")this._expanded=o!==null,this._updateExpandedState();else if(s==="disabled")this._disabled=o!==null,this._updateDisabledState()}connectedCallback(){this._header=this._shadow.querySelector(".expansion-panel-header"),this._content=this._shadow.querySelector(".expansion-panel-content"),this._header.addEventListener("click",this._handleHeaderClick.bind(this)),this._updateExpandedState(),this._updateDisabledState()}disconnectedCallback(){this._header.removeEventListener("click",this._handleHeaderClick)}_handleHeaderClick(){if(this._disabled)return;this.toggle()}toggle(){if(this._disabled)return;this._expanded=!this._expanded,this._updateExpandedState();let s=new CustomEvent("panel-toggle",{bubbles:!0,composed:!0,detail:{panel:this}});this.dispatchEvent(s)}expand(){if(!this._expanded&&!this._disabled){this._expanded=!0,this._updateExpandedState();let s=new CustomEvent("panel-toggle",{bubbles:!0,composed:!0,detail:{panel:this}});this.dispatchEvent(s)}}collapse(){if(this._expanded)this._expanded=!1,this._updateExpandedState()}_updateExpandedState(){if(!this._shadow)return;let s=this._shadow.querySelector(".expansion-panel"),h=this._shadow.querySelector(".expansion-panel-header"),o=this._shadow.querySelector(".expansion-panel-content"),r=this._shadow.querySelector(".expansion-panel-icon");if(s&&h&&o&&r)if(this._expanded)this.setAttribute("expanded",""),s.classList.add("expanded"),h.classList.add("expanded"),o.style.maxHeight=`${o.scrollHeight}px`,r.style.transform="rotate(180deg)";else this.removeAttribute("expanded"),s.classList.remove("expanded"),h.classList.remove("expanded"),o.style.maxHeight="0px",r.style.transform="rotate(0deg)"}_updateDisabledState(){if(!this._shadow)return;let s=this._shadow.querySelector(".expansion-panel");if(s)if(this._disabled)this.setAttribute("disabled",""),s.classList.add("disabled");else this.removeAttribute("disabled"),s.classList.remove("disabled")}_render(){let s=document.createElement("style");s.textContent=`
        :host {
          display: block;
          width: 100%;
        }
        
        .expansion-panel {
          background-color: var(--panel-background, #fff);
          border-radius: var(--panel-border-radius, 4px);
          box-shadow: var(--panel-elevation, 0 2px 4px rgba(0, 0, 0, 0.12));
          overflow: hidden;
          transition: box-shadow var(--panel-transition-duration, 0.3s) ease;
        }
        
        .expansion-panel.expanded {
          box-shadow: var(--panel-elevation-expanded, 0 3px 6px rgba(0, 0, 0, 0.16));
        }
        
        .expansion-panel.disabled {
          opacity: 0.6;
          pointer-events: none;
        }
        
        .expansion-panel-header {
          display: flex;
          align-items: center;
          justify-content: space-between;
          min-height: var(--panel-header-height, 48px);
          padding: 0 16px;
          color: var(--panel-header-color, rgba(0, 0, 0, 0.87));
          cursor: pointer;
          user-select: none;
          position: relative;
          transition: all var(--panel-transition-duration, 0.3s) ease;
        }
        
        .expansion-panel-header:hover {
          background-color: rgba(0, 0, 0, 0.04);
        }
        
        .expansion-panel-header.expanded {
          color: var(--panel-header-active-color, #1976d2);
        }
        
        .expansion-panel-header-content {
          flex: 1;
          display: flex;
          align-items: center;
        }
        
        .expansion-panel-icon {
          transition: transform var(--panel-transition-duration, 0.3s) ease;
          width: 24px;
          height: 24px;
          display: flex;
          align-items: center;
          justify-content: center;
        }
        
        .expansion-panel-icon svg {
          width: 20px;
          height: 20px;
          fill: currentColor;
        }
        
        .expansion-panel-content {
          max-height: 0;
          overflow: hidden;
          transition: max-height var(--panel-transition-duration, 0.3s) ease;
        }
        
        .expansion-panel-content-inner {
          padding: 0 16px 16px 16px;
        }
      `;let h=document.createElement("div");h.innerHTML=`
        <div class="expansion-panel">
          <div class="expansion-panel-header">
            <div class="expansion-panel-header-content">
              <slot name="header"></slot>
            </div>
            <div class="expansion-panel-icon">
              <svg viewBox="0 0 24 24">
                <path d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"></path>
              </svg>
            </div>
          </div>
          <div class="expansion-panel-content">
            <div class="expansion-panel-content-inner">
              <slot name="content"></slot>
            </div>
          </div>
        </div>
      `,this._shadow.appendChild(s),this._shadow.appendChild(h.firstElementChild)}}customElements.define("vc-expansion-panels",rs);customElements.define("vc-expansion-panel",bs);class ts extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._type="info",this._dismissible=!1,this._actions=[],this._message="",this._icon=null,this._visible=!0,this.render()}static get observedAttributes(){return["type","message","dismissible","actions","visible","icon"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"type":this._type=o||"info";break;case"message":this._message=o||"";break;case"dismissible":this._dismissible=o!==null&&o!=="false";break;case"actions":try{this._actions=JSON.parse(o)||[]}catch(r){console.error("Invalid actions JSON in vc-banner:",r),this._actions=[]}break;case"visible":this._visible=o!=="false";break;case"icon":this._icon=o;break}this.render()}get type(){return this._type}set type(s){this.setAttribute("type",s)}get message(){return this._message}set message(s){this.setAttribute("message",s)}get dismissible(){return this._dismissible}set dismissible(s){if(s)this.setAttribute("dismissible","");else this.removeAttribute("dismissible")}get actions(){return this._actions}set actions(s){this.setAttribute("actions",JSON.stringify(s))}get visible(){return this._visible}set visible(s){this.setAttribute("visible",s?"true":"false")}get icon(){return this._icon}set icon(s){if(s)this.setAttribute("icon",s);else this.removeAttribute("icon")}dismiss(){this._visible=!1,this.dispatchEvent(new CustomEvent("dismiss",{bubbles:!0})),this.render()}getIconForType(){if(this._icon)return this._icon;switch(this._type){case"info":return"info";case"warning":return"warning";case"error":return"error";case"success":return"check_circle";default:return"info"}}render(){if(!this._visible){this.shadowRoot.innerHTML="";return}let s={info:{background:"#E3F2FD",icon:"#2196F3",text:"#0D47A1"},warning:{background:"#FFF3E0",icon:"#FF9800",text:"#E65100"},error:{background:"#FFEBEE",icon:"#F44336",text:"#B71C1C"},success:{background:"#E8F5E9",icon:"#4CAF50",text:"#1B5E20"}},h=s[this._type]||s.info;if(this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: block;
          font-family: Roboto, 'Helvetica Neue', sans-serif;
        }
        
        .banner {
          display: flex;
          padding: 16px;
          background-color: ${h.background};
          border-radius: 4px;
          margin-bottom: 16px;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
          align-items: flex-start;
        }
        
        .icon {
          color: ${h.icon};
          margin-right: 16px;
          flex-shrink: 0;
          font-family: 'Material Icons';
          font-weight: normal;
          font-style: normal;
          font-size: 24px;
          line-height: 1;
          letter-spacing: normal;
          text-transform: none;
          display: inline-block;
          white-space: nowrap;
          word-wrap: normal;
          direction: ltr;
          -webkit-font-feature-settings: 'liga';
          -webkit-font-smoothing: antialiased;
        }
        
        .content {
          flex-grow: 1;
          color: ${h.text};
        }
        
        .message {
          margin-bottom: 8px;
          line-height: 1.5;
        }
        
        .actions {
          display: flex;
          gap: 8px;
          margin-top: 8px;
        }
        
        button {
          border: none;
          background: transparent;
          padding: 8px 16px;
          text-transform: uppercase;
          font-weight: 500;
          font-size: 14px;
          letter-spacing: 0.5px;
          cursor: pointer;
          color: ${h.icon};
          border-radius: 4px;
          transition: background-color 0.2s;
        }
        
        button:hover {
          background-color: rgba(0, 0, 0, 0.05);
        }
        
        button.primary {
          background-color: ${h.icon};
          color: white;
        }
        
        button.primary:hover {
          filter: brightness(1.1);
        }
        
        .dismiss {
          flex-shrink: 0;
          cursor: pointer;
          color: ${h.text};
          background: transparent;
          border: none;
          width: 24px;
          height: 24px;
          font-family: 'Material Icons';
          font-size: 24px;
          margin-left: 8px;
          opacity: 0.7;
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 0;
        }
        
        .dismiss:hover {
          opacity: 1;
        }
      </style>
      
      <div class="banner" role="alert">
        <div class="icon">${this.getIconForType()}</div>
        <div class="content">
          <div class="message">${this._message}</div>
          <div class="actions">
            ${this._actions.map((r)=>`
              <button 
                class="${r.primary?"primary":"secondary"}"
                data-action="${r.action||""}"
              >
                ${r.label}
              </button>
            `).join("")}
          </div>
        </div>
        ${this._dismissible?'<button class="dismiss" aria-label="Dismiss">close</button>':""}
      </div>
    `,this.shadowRoot.querySelectorAll(".actions button").forEach((r)=>{r.addEventListener("click",()=>{let b=r.getAttribute("data-action");this.dispatchEvent(new CustomEvent("action",{bubbles:!0,detail:{action:b}}))})}),this._dismissible)this.shadowRoot.querySelector(".dismiss").addEventListener("click",()=>this.dismiss())}}customElements.define("vc-banner",ts);var ms=ts;class is extends HTMLElement{constructor(){super();this._selected=[],this._multiple=!1,this._mandatory=!1,this._dense=!1,this._color="primary",this._variant="outlined",this.attachShadow({mode:"open"}),this.render()}static get observedAttributes(){return["multiple","mandatory","dense","color","variant","value"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"multiple":this._multiple=o!==null;break;case"mandatory":this._mandatory=o!==null;break;case"dense":this._dense=o!==null;break;case"color":this._color=o||"primary";break;case"variant":this._variant=o||"outlined";break;case"value":try{if(this._selected=o?JSON.parse(o):[],!Array.isArray(this._selected))this._selected=[this._selected]}catch(r){this._selected=o?[o]:[]}break}this.render(),this.updateButtons()}connectedCallback(){this.upgradeProperty("multiple"),this.upgradeProperty("mandatory"),this.upgradeProperty("dense"),this.upgradeProperty("color"),this.upgradeProperty("variant"),this.upgradeProperty("value"),this._observer=new MutationObserver(()=>{this.setupButtons(),this.updateButtons()}),this._observer.observe(this,{childList:!0,subtree:!1}),this.setupButtons(),this.updateButtons()}disconnectedCallback(){if(this._observer)this._observer.disconnect();this.querySelectorAll("button").forEach((s)=>{s.removeEventListener("click",this.handleButtonClick)})}upgradeProperty(s){if(this.hasOwnProperty(s)){let h=this[s];delete this[s],this[s]=h}}get multiple(){return this._multiple}set multiple(s){if(s)this.setAttribute("multiple","");else this.removeAttribute("multiple")}get mandatory(){return this._mandatory}set mandatory(s){if(s)this.setAttribute("mandatory","");else this.removeAttribute("mandatory")}get dense(){return this._dense}set dense(s){if(s)this.setAttribute("dense","");else this.removeAttribute("dense")}get color(){return this._color}set color(s){this.setAttribute("color",s)}get variant(){return this._variant}set variant(s){this.setAttribute("variant",s)}get value(){return this._selected}set value(s){let h=s;if(!Array.isArray(h))h=[h];this.setAttribute("value",JSON.stringify(h))}render(){this.shadowRoot.innerHTML=`
        <style>
        :host {
          display: inline-flex;
          border-radius: 4px;
          overflow: hidden;
          border: 1px solid transparent;
          box-shadow: 0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);
        }
        
        :host([variant="text"]) {
          box-shadow: none;
          border: none;
        }
        
        :host([variant="outlined"]) {
          box-shadow: none;
          border: 1px solid rgba(0,0,0,.12);
        }
        
        ::slotted(button) {
          position: relative;
          display: inline-flex;
          align-items: center;
          justify-content: center;
          min-width: 64px;
          height: 36px;
          padding: 0 16px;
          margin: 0;
          overflow: hidden;
          vertical-align: middle;
          text-transform: uppercase;
          border: none;
          border-radius: 0;
          outline: none;
          background-color: transparent;
          color: rgba(0,0,0,.87);
          font-family: Roboto, sans-serif;
          font-size: 0.875rem;
          font-weight: 500;
          letter-spacing: 0.0892857143em;
          text-decoration: none;
          text-align: center;
          transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
          cursor: pointer;
          user-select: none;
          -webkit-appearance: none;
          -webkit-tap-highlight-color: transparent;
        }
        
        :host([dense]) ::slotted(button) {
          height: 28px;
          min-width: 48px;
          padding: 0 12px;
          font-size: 0.8125rem;
        }
        
        ::slotted(button:not(:last-child)) {
          border-right: 1px solid rgba(0,0,0,.12);
        }
        
        ::slotted(button:hover) {
          background-color: rgba(0,0,0,.04);
        }
        
        ::slotted(button[selected]) {
          background-color: var(--btn-toggle-color, rgba(25, 118, 210, 0.12));
          color: var(--btn-toggle-text-color, #1976d2);
        }
        
        ::slotted(button:focus) {
          outline: none;
        }
        
        /* Color variants */
        :host([color="primary"]) {
          --btn-toggle-color: rgba(25, 118, 210, 0.12);
          --btn-toggle-text-color: #1976d2;
        }
        
        :host([color="secondary"]) {
          --btn-toggle-color: rgba(156, 39, 176, 0.12);
          --btn-toggle-text-color: #9c27b0;
        }
        
        :host([color="success"]) {
          --btn-toggle-color: rgba(76, 175, 80, 0.12);
          --btn-toggle-text-color: #4caf50;
        }
        
        :host([color="error"]) {
          --btn-toggle-color: rgba(244, 67, 54, 0.12);
          --btn-toggle-text-color: #f44336;
        }
        
        :host([color="warning"]) {
          --btn-toggle-color: rgba(255, 152, 0, 0.12);
          --btn-toggle-text-color: #ff9800;
        }
        
        :host([color="info"]) {
          --btn-toggle-color: rgba(3, 169, 244, 0.12);
          --btn-toggle-text-color: #03a9f4;
        }
      </style>
        <slot></slot>
      `}setupButtons(){this.querySelectorAll("button").forEach((s)=>{s.removeEventListener("click",this.handleButtonClick.bind(this)),s.addEventListener("click",this.handleButtonClick.bind(this))})}updateButtons(){this.querySelectorAll("button").forEach((h)=>{let o=h.value||h.textContent;if(this._selected.includes(o))h.setAttribute("selected","");else h.removeAttribute("selected")})}handleButtonClick(s){let h=s.currentTarget,o=h.value||h.textContent,r=[...this._selected];if(this._multiple){let b=r.indexOf(o);if(b>=0){if(!this._mandatory||r.length>1)r.splice(b,1)}else r.push(o)}else if(r.includes(o)){if(!this._mandatory)r=[]}else r=[o];this._selected=r,this.setAttribute("value",JSON.stringify(r)),this.updateButtons(),this.dispatchEvent(new CustomEvent("change",{detail:{value:this.multiple?this._selected:this._selected[0]||null},bubbles:!0,composed:!0}))}}customElements.define("vc-btn-toggle",is);var ws=is;class cs extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._checked=!1,this._disabled=!1,this._indeterminate=!1,this._value="",this._label="",this.render()}static get observedAttributes(){return["checked","disabled","indeterminate","value","label"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"checked":this._checked=o!==null;break;case"disabled":this._disabled=o!==null;break;case"indeterminate":this._indeterminate=o!==null;break;case"value":this._value=o||"";break;case"label":this._label=o||"";break}this.render()}connectedCallback(){if(this.addEventListener("click",this._handleClick),this.addEventListener("keydown",this._handleKeydown),!this.hasAttribute("role"))this.setAttribute("role","checkbox");if(!this.hasAttribute("tabindex"))this.setAttribute("tabindex","0");this.render()}disconnectedCallback(){this.removeEventListener("click",this._handleClick),this.removeEventListener("keydown",this._handleKeydown)}_handleClick=(s)=>{if(this._disabled)return;this.checked=!this._checked,this.indeterminate=!1,this.dispatchEvent(new CustomEvent("change",{bubbles:!0,composed:!0,detail:{checked:this._checked}}))};_handleKeydown=(s)=>{if(this._disabled)return;if(s.key===" "||s.key==="Enter")s.preventDefault(),this._handleClick(s)};get checked(){return this._checked}set checked(s){let h=Boolean(s);if(this._checked!==h){if(this._checked=h,h)this.setAttribute("checked",""),this.setAttribute("aria-checked","true");else this.removeAttribute("checked"),this.setAttribute("aria-checked","false");this.render()}}get disabled(){return this._disabled}set disabled(s){let h=Boolean(s);if(this._disabled!==h){if(this._disabled=h,h)this.setAttribute("disabled",""),this.setAttribute("aria-disabled","true");else this.removeAttribute("disabled"),this.setAttribute("aria-disabled","false");this.render()}}get indeterminate(){return this._indeterminate}set indeterminate(s){let h=Boolean(s);if(this._indeterminate!==h){if(this._indeterminate=h,h)this.setAttribute("indeterminate",""),this.setAttribute("aria-checked","mixed");else this.removeAttribute("indeterminate"),this.setAttribute("aria-checked",this._checked?"true":"false");this.render()}}get value(){return this._value}set value(s){if(this._value!==s)this._value=s,this.setAttribute("value",s)}get label(){return this._label}set label(s){if(this._label!==s)this._label=s,this.setAttribute("label",s),this.render()}render(){this.shadowRoot.innerHTML=`
      <style>
      :host {
        display: inline-flex;
        align-items: center;
        cursor: pointer;
        outline: none;
        user-select: none;
        -webkit-tap-highlight-color: transparent;
        position: relative;
        font-family: Roboto, Arial, sans-serif;
        font-size: 16px;
        line-height: 1.5;
        color: rgba(0, 0, 0, 0.87);
      }
      
      :host([disabled]) {
        cursor: not-allowed;
        opacity: 0.6;
        pointer-events: none;
      }
      
      .checkbox {
        position: relative;
        width: 18px;
        height: 18px;
        border: 2px solid rgba(0, 0, 0, 0.54);
        border-radius: 2px;
        margin-right: 10px;
        transition: all 0.15s ease;
        box-sizing: border-box;
      }
      
      :host(:hover) .checkbox {
        border-color: rgba(0, 0, 0, 0.87);
      }
      
      :host([checked]) .checkbox {
        background-color: #1976d2;
        border-color: #1976d2;
      }
      
      :host([indeterminate]) .checkbox {
        background-color: #1976d2;
        border-color: #1976d2;
      }
      
      .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        width: 18px;
        height: 18px;
        transform: scale(0);
        transition: transform 0.15s ease;
      }
      
      :host([checked]) .checkmark {
        transform: scale(1);
      }
      
      .checkmark-path {
        stroke: white;
        stroke-width: 2.5;
        stroke-linecap: round;
        stroke-linejoin: round;
        fill: none;
      }
      
      .indeterminate-mark {
        position: absolute;
        top: 50%;
        left: 3px;
        right: 3px;
        height: 2px;
        background-color: white;
        transform: scaleX(0);
        transition: transform 0.15s ease;
        margin-top: -1px;
      }
      
      :host([indeterminate]) .indeterminate-mark {
        transform: scaleX(1);
      }
      
      :host(:focus-visible) .focus-ring {
        position: absolute;
        top: -8px;
        left: -8px;
        right: -8px;
        bottom: -8px;
        border-radius: 50%;
        background-color: rgba(25, 118, 210, 0.12);
        pointer-events: none;
      }
      
      .ripple {
        position: absolute;
        top: -12px;
        left: -12px;
        width: 42px;
        height: 42px;
        border-radius: 50%;
        background-color: rgba(0, 0, 0, 0.1);
        transform: scale(0);
        opacity: 0;
        pointer-events: none;
      }
      
      .ripple.active {
        animation: ripple 0.3s ease-out;
      }
      
      @keyframes ripple {
        0% {
          transform: scale(0);
          opacity: 0.5;
        }
        100% {
          transform: scale(1);
          opacity: 0;
        }
      }
      
      label {
        cursor: pointer;
        margin-left: 2px;
      }
      
      :host([disabled]) label {
        cursor: not-allowed;
      }
    </style>
      <div class="focus-ring"></div>
      <div class="ripple"></div>
      <div class="checkbox">
        <svg class="checkmark" viewBox="0 0 24 24">
          <path class="checkmark-path" d="M4.5 12.5l5 5 10-10"></path>
        </svg>
        <div class="indeterminate-mark"></div>
      </div>
      ${this._label?`<label>${this._label}</label>`:""}
    `;let h=this.shadowRoot.querySelector(".ripple");this.addEventListener("pointerdown",()=>{if(this._disabled)return;h.classList.remove("active"),setTimeout(()=>h.classList.add("active"),10)})}}customElements.define("vc-checkbox",cs);var us=cs;class _s extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._multiple=!1,this._disabled=!1,this._accept="",this._label="Choose file",this._placeholder="",this._clearable=!0,this._persistentPlaceholder=!1,this._prependIcon="file_upload",this._counter=!1,this._chips=!1,this._variant="filled",this._density="default",this._color="primary",this._error=!1,this._errorMessages=[],this.files=[],this._render()}static get observedAttributes(){return["multiple","disabled","accept","label","placeholder","clearable","persistent-placeholder","prepend-icon","counter","chips","variant","density","color","error"]}attributeChangedCallback(s,h,o){switch(s){case"multiple":this._multiple=o!==null;break;case"disabled":this._disabled=o!==null;break;case"accept":this._accept=o||"";break;case"label":this._label=o||"Choose file";break;case"placeholder":this._placeholder=o||"";break;case"clearable":this._clearable=o!=="false";break;case"persistent-placeholder":this._persistentPlaceholder=o!==null;break;case"prepend-icon":this._prependIcon=o||"file_upload";break;case"counter":this._counter=o!==null;break;case"chips":this._chips=o!==null;break;case"variant":this._variant=o||"filled";break;case"density":this._density=o||"default";break;case"color":this._color=o||"primary";break;case"error":this._error=o!==null;break}this._render()}connectedCallback(){this._render(),this._setupEventListeners()}disconnectedCallback(){this._removeEventListeners()}_setupEventListeners(){if(this.shadowRoot.querySelector(".vc-file-input__field").addEventListener("click",this._handleFieldClick.bind(this)),this.shadowRoot.querySelector(".vc-file-input__input").addEventListener("change",this._handleInputChange.bind(this)),this._clearable){let s=this.shadowRoot.querySelector(".vc-file-input__clear");if(s)s.addEventListener("click",this._handleClear.bind(this))}}_removeEventListeners(){let s=this.shadowRoot.querySelector(".vc-file-input__field");if(s)s.removeEventListener("click",this._handleFieldClick.bind(this));let h=this.shadowRoot.querySelector(".vc-file-input__input");if(h)h.removeEventListener("change",this._handleInputChange.bind(this));if(this._clearable){let o=this.shadowRoot.querySelector(".vc-file-input__clear");if(o)o.removeEventListener("click",this._handleClear.bind(this))}}_handleFieldClick(s){if(!this._disabled)this.shadowRoot.querySelector(".vc-file-input__input").click()}_handleInputChange(s){let h=s.target.files;if(h.length>0)this.files=this._multiple?Array.from(h):[h[0]],this.dispatchEvent(new CustomEvent("change",{detail:{files:this.files},bubbles:!0,composed:!0})),this._render()}_handleClear(s){s.stopPropagation(),this.files=[];let h=this.shadowRoot.querySelector(".vc-file-input__input");h.value="",this.dispatchEvent(new CustomEvent("clear",{bubbles:!0,composed:!0})),this._render()}_formatFileNames(){if(this.files.length===0)return"";if(this.files.length===1)return this.files[0].name;return`${this.files.length} files`}_getColorStyle(){let s={primary:"#1976d2",secondary:"#26a69a",success:"#4caf50",error:"#f44336",warning:"#ff9800",info:"#2196f3"};return s[this._color]||s.primary}_getDensityClass(){switch(this._density){case"comfortable":return"vc-file-input--density-comfortable";case"compact":return"vc-file-input--density-compact";default:return"vc-file-input--density-default"}}_getVariantClass(){switch(this._variant){case"outlined":return"vc-file-input--variant-outlined";case"plain":return"vc-file-input--variant-plain";case"underlined":return"vc-file-input--variant-underlined";case"solo":return"vc-file-input--variant-solo";default:return"vc-file-input--variant-filled"}}_renderChips(){if(!this._chips||this.files.length===0)return"";return this.files.map((s)=>{return`
        <div class="vc-file-input__chip">
          <span class="vc-file-input__chip-text">${s.name}</span>
          ${this._clearable?`<button class="vc-file-input__chip-close" data-file="${s.name}">×</button>`:""}
        </div>
      `}).join("")}_renderCounter(){if(!this._counter)return"";return`
      <div class="vc-file-input__counter">
        ${this.files.length} ${this.files.length===1?"file":"files"}
      </div>
    `}_render(){let s=this.files.length>0,h=s?this._formatFileNames():this._placeholder,o=this._persistentPlaceholder||!s,r=this._getColorStyle(),b=this._getDensityClass(),t=this._getVariantClass();if(this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: block;
          position: relative;
          width: 100%;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        
        .vc-file-input {
          position: relative;
          width: 100%;
        }
        
        .vc-file-input__input {
          position: absolute;
          width: 0;
          height: 0;
          opacity: 0;
          pointer-events: none;
        }
        
        .vc-file-input__field {
          display: flex;
          align-items: center;
          width: 100%;
          min-height: 56px;
          padding: 16px 12px;
          border-radius: 4px;
          cursor: pointer;
          transition: all 0.2s ease;
          box-sizing: border-box;
          position: relative;
        }
        
        .vc-file-input--variant-filled .vc-file-input__field {
          background-color: rgba(0, 0, 0, 0.06);
        }
        
        .vc-file-input--variant-outlined .vc-file-input__field {
          border: 1px solid rgba(0, 0, 0, 0.38);
        }
        
        .vc-file-input--variant-plain .vc-file-input__field {
          padding-left: 0;
          padding-right: 0;
        }
        
        .vc-file-input--variant-underlined .vc-file-input__field {
          border-bottom: 1px solid rgba(0, 0, 0, 0.38);
          border-radius: 0;
        }
        
        .vc-file-input--variant-solo .vc-file-input__field {
          background-color: #fff;
          box-shadow: 0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);
        }
        
        .vc-file-input--density-comfortable .vc-file-input__field {
          min-height: 48px;
          padding: 12px;
        }
        
        .vc-file-input--density-compact .vc-file-input__field {
          min-height: 40px;
          padding: 8px;
        }
        
        .vc-file-input__field:hover:not(.vc-file-input__field--disabled) {
          background-color: ${this._variant==="filled"?"rgba(0, 0, 0, 0.12)":""};
          border-color: ${this._variant==="outlined"||this._variant==="underlined"?"rgba(0, 0, 0, 0.87)":""};
        }
        
        .vc-file-input__field--disabled {
          cursor: default;
          opacity: 0.6;
          pointer-events: none;
        }
        
        .vc-file-input__field--error {
          border-color: #f44336 !important;
        }
        
        .vc-file-input__field--error .vc-file-input__text {
          color: #f44336;
        }
        
        .vc-file-input__label {
          position: absolute;
          top: ${s||o?"8px":"50%"};
          left: ${this._variant==="plain"?"0":"12px"};
          transform: translateY(${s||o?"0":"-50%"});
          font-size: ${s||o?"12px":"16px"};
          color: rgba(0, 0, 0, 0.6);
          transition: all 0.2s ease;
          pointer-events: none;
          ${this._error?"color: #f44336;":""}
          ${s?`color: ${r};`:""}
        }
        
        .vc-file-input__text {
          flex: 1;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
          margin-top: ${s||o?"16px":"0"};
          font-size: 16px;
          color: ${s?"rgba(0, 0, 0, 0.87)":"rgba(0, 0, 0, 0.6)"};
        }
        
        .vc-file-input__prepend {
          display: flex;
          align-items: center;
          margin-right: 8px;
          color: rgba(0, 0, 0, 0.54);
        }
        
        .vc-file-input__clear {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 24px;
          height: 24px;
          margin-left: 8px;
          color: rgba(0, 0, 0, 0.54);
          background: transparent;
          border: none;
          border-radius: 50%;
          cursor: pointer;
          outline: none;
          transition: background-color 0.2s ease;
        }
        
        .vc-file-input__clear:hover {
          background-color: rgba(0, 0, 0, 0.04);
        }
        
        .vc-file-input__counter {
          margin-top: 4px;
          font-size: 12px;
          text-align: right;
          color: rgba(0, 0, 0, 0.6);
        }
        
        .vc-file-input__chips {
          display: flex;
          flex-wrap: wrap;
          gap: 8px;
          margin-top: 16px;
        }
        
        .vc-file-input__chip {
          display: flex;
          align-items: center;
          height: 32px;
          padding: 0 12px;
          background-color: rgba(0, 0, 0, 0.08);
          border-radius: 16px;
          font-size: 14px;
        }
        
        .vc-file-input__chip-text {
          max-width: 120px;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
        
        .vc-file-input__chip-close {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 18px;
          height: 18px;
          margin-left: 4px;
          background: transparent;
          border: none;
          border-radius: 50%;
          font-size: 18px;
          line-height: 1;
          color: rgba(0, 0, 0, 0.54);
          cursor: pointer;
        }
        
        .vc-file-input__chip-close:hover {
          background-color: rgba(0, 0, 0, 0.04);
        }
        
        .vc-file-input__error-messages {
          margin-top: 4px;
          font-size: 12px;
          color: #f44336;
        }
      </style>
      
      <div class="vc-file-input ${b} ${t}">
        <input 
          type="file" 
          class="vc-file-input__input" 
          ${this._multiple?"multiple":""} 
          ${this._accept?`accept="${this._accept}"`:""} 
          ${this._disabled?"disabled":""}
        >
        
        <div class="vc-file-input__field ${this._disabled?"vc-file-input__field--disabled":""} ${this._error?"vc-file-input__field--error":""}">
          ${this._label?`<div class="vc-file-input__label">${this._label}</div>`:""}
          
          ${this._prependIcon?`
            <div class="vc-file-input__prepend">
              <span class="material-icons">${this._prependIcon}</span>
            </div>
          `:""}
          
          ${this._chips?`
            <div class="vc-file-input__chips">
              ${this._renderChips()}
            </div>
          `:`
            <div class="vc-file-input__text">
              ${o?h:""}
            </div>
          `}
          
          ${this._clearable&&s?`
            <button class="vc-file-input__clear" type="button">
              <span class="material-icons">close</span>
            </button>
          `:""}
        </div>
        
        ${this._renderCounter()}
        
        ${this._error&&this._errorMessages.length>0?`
          <div class="vc-file-input__error-messages">
            ${this._errorMessages.map((i)=>`<div>${i}</div>`).join("")}
          </div>
        `:""}
      </div>
    `,this._chips&&this._clearable)this.shadowRoot.querySelectorAll(".vc-file-input__chip-close").forEach((c)=>{c.addEventListener("click",(_)=>{_.stopPropagation();let d=c.getAttribute("data-file");this.files=this.files.filter((f)=>f.name!==d),this.dispatchEvent(new CustomEvent("change",{detail:{files:this.files},bubbles:!0,composed:!0})),this._render()})})}setFiles(s){this.files=this._multiple?Array.isArray(s)?s:[s]:[s[0]],this._render()}clearFiles(){this.files=[];let s=this.shadowRoot.querySelector(".vc-file-input__input");if(s)s.value="";this._render()}setErrorMessages(s){this._errorMessages=Array.isArray(s)?s:[s],this._error=this._errorMessages.length>0,this._render()}get multiple(){return this._multiple}set multiple(s){this._multiple=Boolean(s),this.setAttribute("multiple",""),this._render()}get disabled(){return this._disabled}set disabled(s){if(this._disabled=Boolean(s),this._disabled)this.setAttribute("disabled","");else this.removeAttribute("disabled");this._render()}get accept(){return this._accept}set accept(s){this._accept=s,this.setAttribute("accept",s),this._render()}get label(){return this._label}set label(s){this._label=s,this.setAttribute("label",s),this._render()}get placeholder(){return this._placeholder}set placeholder(s){this._placeholder=s,this.setAttribute("placeholder",s),this._render()}get clearable(){return this._clearable}set clearable(s){this._clearable=Boolean(s),this.setAttribute("clearable",s?"true":"false"),this._render()}get persistentPlaceholder(){return this._persistentPlaceholder}set persistentPlaceholder(s){if(this._persistentPlaceholder=Boolean(s),this._persistentPlaceholder)this.setAttribute("persistent-placeholder","");else this.removeAttribute("persistent-placeholder");this._render()}get prependIcon(){return this._prependIcon}set prependIcon(s){this._prependIcon=s,this.setAttribute("prepend-icon",s),this._render()}get counter(){return this._counter}set counter(s){if(this._counter=Boolean(s),this._counter)this.setAttribute("counter","");else this.removeAttribute("counter");this._render()}get chips(){return this._chips}set chips(s){if(this._chips=Boolean(s),this._chips)this.setAttribute("chips","");else this.removeAttribute("chips");this._render()}get variant(){return this._variant}set variant(s){this._variant=s,this.setAttribute("variant",s),this._render()}get density(){return this._density}set density(s){this._density=s,this.setAttribute("density",s),this._render()}get color(){return this._color}set color(s){this._color=s,this.setAttribute("color",s),this._render()}get error(){return this._error}set error(s){if(this._error=Boolean(s),this._error)this.setAttribute("error","");else this.removeAttribute("error");this._render()}}customElements.define("vc-file-input",_s);var ns=_s;class ds extends HTMLElement{static get observedAttributes(){return["src","alt","width","height","aspect-ratio","cover","contain","lazy-load","transition","gradient"]}constructor(){super();this.attachShadow({mode:"open"}),this._loaded=!1,this._error=!1,this._container=document.createElement("div"),this._container.className="vc-img-container",this._placeholder=document.createElement("div"),this._placeholder.className="vc-img-placeholder",this._image=document.createElement("img"),this._image.className="vc-img-image",this._gradient=document.createElement("div"),this._gradient.className="vc-img-gradient",this._overlay=document.createElement("div"),this._overlay.className="vc-img-overlay",this._image.addEventListener("load",this._onLoad.bind(this)),this._image.addEventListener("error",this._onError.bind(this)),this._container.appendChild(this._placeholder),this._container.appendChild(this._image),this._container.appendChild(this._gradient),this._container.appendChild(this._overlay);let s=document.createElement("slot");this._overlay.appendChild(s),this._applyStyles()}connectedCallback(){this.shadowRoot.appendChild(this._container),this._updateComponent(),this._setupIntersectionObserver()}_applyStyles(){let s=document.createElement("style");s.textContent=`
        :host {
          display: inline-block;
          position: relative;
          line-height: 0;
          overflow: hidden;
        }
        
        .vc-img-container {
          position: relative;
          width: 100%;
          height: 100%;
          overflow: hidden;
          border-radius: inherit;
        }
        
        .vc-img-placeholder {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.1);
          transition: opacity 0.25s ease-in-out;
          z-index: 1;
        }
        
        .vc-img-image {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          z-index: 2;
          opacity: 0;
          transition: opacity 0.25s ease-in-out;
          object-position: center;
        }
        
        .vc-img-image.loaded {
          opacity: 1;
        }
        
        .vc-img-placeholder.hidden {
          opacity: 0;
        }
        
        .vc-img-gradient {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          z-index: 3;
        }
        
        .vc-img-overlay {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          z-index: 4;
          display: flex;
          align-items: center;
          justify-content: center;
        }
      `,this.shadowRoot.appendChild(s)}attributeChangedCallback(s,h,o){if(h===o)return;this._updateComponent()}_updateComponent(){let s=this.getAttribute("src");if(s&&!this.getAttribute("lazy-load"))this._image.src=s;let h=this.getAttribute("alt");if(h)this._image.alt=h;let o=this.getAttribute("width"),r=this.getAttribute("height");if(o)this.style.width=this._addUnitIfNeeded(o);if(r)this.style.height=this._addUnitIfNeeded(r);let b=this.getAttribute("aspect-ratio");if(b&&!r){let[c,_]=b.split(":").map((d)=>parseFloat(d));if(!isNaN(c)&&!isNaN(_)&&_>0)this.style.paddingBottom=`${_/c*100}%`,this.style.height="0"}if(this.hasAttribute("cover"))this._image.style.objectFit="cover";else if(this.hasAttribute("contain"))this._image.style.objectFit="contain";let t=this.getAttribute("transition");if(t)this._image.style.transition=`opacity ${t}`,this._placeholder.style.transition=`opacity ${t}`;let i=this.getAttribute("gradient");if(i)this._gradient.style.background=i;else this._gradient.style.background="none"}_addUnitIfNeeded(s){return/^\d+$/.test(s)?`${s}px`:s}_onLoad(){this._loaded=!0,this._error=!1,this._image.classList.add("loaded"),this._placeholder.classList.add("hidden"),this.dispatchEvent(new CustomEvent("vc-img:load",{bubbles:!0,composed:!0}))}_onError(){this._loaded=!1,this._error=!0,this.dispatchEvent(new CustomEvent("vc-img:error",{bubbles:!0,composed:!0}))}_setupIntersectionObserver(){if(this.hasAttribute("lazy-load")&&"IntersectionObserver"in window){let s=new IntersectionObserver((h)=>{h.forEach((o)=>{if(o.isIntersecting){let r=this.getAttribute("src");if(r&&!this._image.src)this._image.src=r;s.unobserve(this)}})},{rootMargin:"50px 0px",threshold:0.1});s.observe(this)}}getSrc(){return this._image.src}isLoaded(){return this._loaded}hasError(){return this._error}}customElements.define("vc-img",ds);var as=ds;class gs extends HTMLElement{static get observedAttributes(){return["length","value","autofocus","placeholder","disabled","type","loading"]}constructor(){super();this.attachShadow({mode:"open"}),this._length=6,this._value="",this._autofocus=!1,this._placeholder="•",this._disabled=!1,this._type="text",this._loading=!1,this._setupComponent()}connectedCallback(){if(this._updateRendering(),this._setupEventListeners(),this._autofocus)setTimeout(()=>{let s=this.shadowRoot.querySelector("input");if(s)s.focus()},0)}disconnectedCallback(){this._removeEventListeners()}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"length":this._length=o?parseInt(o,10):6;break;case"value":this._value=o||"";break;case"autofocus":this._autofocus=o!==null;break;case"placeholder":this._placeholder=o||"•";break;case"disabled":this._disabled=o!==null;break;case"type":this._type=o==="password"?"password":"text";break;case"loading":this._loading=o!==null;break}this._updateRendering()}get value(){return this._value}set value(s){if(this._value!==s)this._value=s,this.setAttribute("value",s),this._updateInputValues(),this._dispatchChangeEvent()}get length(){return this._length}set length(s){let h=parseInt(s,10);if(!isNaN(h)&&this._length!==h)this._length=h,this.setAttribute("length",h),this._updateRendering()}get disabled(){return this._disabled}set disabled(s){if(this._disabled=Boolean(s),this._disabled)this.setAttribute("disabled","");else this.removeAttribute("disabled");this._updateInputStates()}get loading(){return this._loading}set loading(s){if(this._loading=Boolean(s),this._loading)this.setAttribute("loading","");else this.removeAttribute("loading");this._updateInputStates()}_setupComponent(){let s=document.createElement("style");s.textContent=`
        :host {
          display: inline-flex;
          flex-direction: row;
          gap: 8px;
          font-family: Roboto, 'Segoe UI', Arial, sans-serif;
        }
        
        .otp-input-container {
          display: inline-flex;
          gap: 8px;
          align-items: center;
        }
        
        .otp-field {
          position: relative;
          min-width: 40px;
          height: 56px;
        }
        
        .otp-field input {
          width: 100%;
          height: 100%;
          border: none;
          border-radius: 4px;
          text-align: center;
          font-size: 20px;
          font-weight: 500;
          background-color: rgb(242, 242, 242);
          color: rgba(0, 0, 0, 0.87);
          transition: all 0.2s ease;
          padding: 0;
          margin: 0;
          box-sizing: border-box;
          caret-color: rgb(25, 118, 210);
          -moz-appearance: textfield; /* Firefox */
        }
        
        .otp-field input::-webkit-outer-spin-button,
        .otp-field input::-webkit-inner-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }
        
        .otp-field input:focus {
          outline: none;
          background-color: rgb(232, 240, 254);
          box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 1px 10px 0 rgba(0, 0, 0, 0.12);
        }
        
        .otp-field input:disabled {
          background-color: rgba(0, 0, 0, 0.06);
          color: rgba(0, 0, 0, 0.38);
          cursor: not-allowed;
        }
  
        .otp-field.loading::after {
          content: '';
          position: absolute;
          bottom: 0;
          left: 0;
          width: 100%;
          height: 2px;
          background: linear-gradient(90deg, 
            rgba(25, 118, 210, 0), 
            rgba(25, 118, 210, 1) 50%, 
            rgba(25, 118, 210, 0)
          );
          background-size: 200% 100%;
          animation: loading 1.5s infinite;
        }
  
        @keyframes loading {
          0% {
            background-position: 100% 0;
          }
          100% {
            background-position: -100% 0;
          }
        }
      `,this.shadowRoot.appendChild(s);let h=document.createElement("div");h.classList.add("otp-input-container"),this.shadowRoot.appendChild(h)}_updateRendering(){let s=this.shadowRoot.querySelector(".otp-input-container");if(!s)return;s.innerHTML="";for(let h=0;h<this._length;h++){let o=document.createElement("div");if(o.classList.add("otp-field"),this._loading)o.classList.add("loading");let r=document.createElement("input");r.type=this._type==="password"?"password":"text",r.inputMode="numeric",r.maxLength=1,r.placeholder=this._placeholder,r.disabled=this._disabled,r.dataset.index=h,r.value=this._value[h]||"",o.appendChild(r),s.appendChild(o)}this._updateInputValues()}_setupEventListeners(){this.shadowRoot.addEventListener("input",this._handleInput.bind(this)),this.shadowRoot.addEventListener("keydown",this._handleKeyDown.bind(this)),this.shadowRoot.addEventListener("focus",this._handleFocus.bind(this),!0),this.shadowRoot.addEventListener("paste",this._handlePaste.bind(this))}_removeEventListeners(){this.shadowRoot.removeEventListener("input",this._handleInput.bind(this)),this.shadowRoot.removeEventListener("keydown",this._handleKeyDown.bind(this)),this.shadowRoot.removeEventListener("focus",this._handleFocus.bind(this),!0),this.shadowRoot.removeEventListener("paste",this._handlePaste.bind(this))}_handleInput(s){if(!(s.target instanceof HTMLInputElement))return;let h=s.target,o=parseInt(h.dataset.index,10);if(isNaN(o))return;h.value=h.value.replace(/[^0-9]/g,"");let r=this._updateValueAtIndex(o,h.value);if(this.value=r,h.value&&o<this._length-1){let b=this.shadowRoot.querySelector(`input[data-index="${o+1}"]`);if(b)b.focus()}}_handleKeyDown(s){if(!(s.target instanceof HTMLInputElement))return;let h=s.target,o=parseInt(h.dataset.index,10);if(isNaN(o))return;if(s.key==="Backspace")if(h.value===""){if(o>0){let r=this.shadowRoot.querySelector(`input[data-index="${o-1}"]`);if(r)r.focus(),r.select()}}else h.value="",this.value=this._updateValueAtIndex(o,"");else if(s.key==="ArrowLeft"&&o>0){let r=this.shadowRoot.querySelector(`input[data-index="${o-1}"]`);if(r)r.focus()}else if(s.key==="ArrowRight"&&o<this._length-1){let r=this.shadowRoot.querySelector(`input[data-index="${o+1}"]`);if(r)r.focus()}}_handleFocus(s){if(!(s.target instanceof HTMLInputElement))return;setTimeout(()=>{if(s.target instanceof HTMLInputElement)s.target.select()},0)}_handlePaste(s){if(!(s.target instanceof HTMLInputElement))return;s.preventDefault();let h=(s.clipboardData||window.clipboardData).getData("text");if(!h)return;let o=h.replace(/[^0-9]/g,""),r=this._value,b=parseInt(s.target.dataset.index,10);for(let t=0;t<o.length&&t+b<this._length;t++)r=this._setCharAt(r,b+t,o[t]);this.value=r;for(let t=b;t<this._length;t++){if(t>=r.length||!r[t]){let i=this.shadowRoot.querySelector(`input[data-index="${t}"]`);if(i){i.focus();break}}if(t===this._length-1){let i=this.shadowRoot.querySelector(`input[data-index="${this._length-1}"]`);if(i)i.focus()}}}_updateValueAtIndex(s,h){return this._setCharAt(this._value,s,h)}_setCharAt(s,h,o){if(h>=s.length)return s.padEnd(h,"")+o;return s.substring(0,h)+o+s.substring(h+1)}_updateInputValues(){this.shadowRoot.querySelectorAll("input").forEach((h,o)=>{h.value=o<this._value.length?this._value[o]:""})}_updateInputStates(){this.shadowRoot.querySelectorAll("input").forEach((o)=>{o.disabled=this._disabled}),this.shadowRoot.querySelectorAll(".otp-field").forEach((o)=>{if(this._loading)o.classList.add("loading");else o.classList.remove("loading")})}_dispatchChangeEvent(){let s=new CustomEvent("change",{detail:{value:this._value,complete:this._value.length===this._length},bubbles:!0,composed:!0});this.dispatchEvent(s)}clear(){this.value="";let s=this.shadowRoot.querySelector("input");if(s)s.focus()}focus(){let s=this.shadowRoot.querySelector("input");if(s)s.focus()}}customElements.define("vc-otp-input",gs);var Vs=gs;class fs extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._src="",this._alt="",this._height=400,this._speed=0.5,this._render()}static get observedAttributes(){return["src","alt","height","speed"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"src":if(this._src=o,this._imgElement)this._imgElement.src=o;break;case"alt":if(this._alt=o,this._imgElement)this._imgElement.alt=o;break;case"height":this._height=parseInt(o)||400,this._updateStyles();break;case"speed":this._speed=parseFloat(o)||0.5;break}this._render()}connectedCallback(){window.addEventListener("scroll",this._handleScroll.bind(this)),window.addEventListener("resize",this._handleScroll.bind(this)),setTimeout(()=>this._handleScroll(),0)}disconnectedCallback(){window.removeEventListener("scroll",this._handleScroll.bind(this)),window.removeEventListener("resize",this._handleScroll.bind(this))}_handleScroll(){if(!this._imgElement)return;let s=this.getBoundingClientRect(),h=window.innerHeight;if(s.bottom<0||s.top>h)return;let o=window.pageYOffset,r=s.top+o,b=o-r,t=Math.round(b*this._speed);this._imgElement.style.transform=`translate3d(0, ${t}px, 0)`}_updateStyles(){if(!this.shadowRoot)return;let s=`
        position: relative;
        overflow: hidden;
        height: ${this._height}px;
        width: 100%;
      `,h=`
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        min-width: 100%;
        min-height: 100%;
        width: auto;
        height: auto;
        max-width: none;
        transform: translate3d(0, 0, 0);
        z-index: -1;
        object-fit: cover;
      `,o=`
        position: relative;
        height: 100%;
        z-index: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      `;this._styleElement.textContent=`
        :host {
          display: block;
          width: 100%;
        }
        .vc-parallax-container {
          ${s}
        }
        .vc-parallax-img {
          ${h}
        }
        .vc-parallax-content {
          ${o}
        }
      `}_render(){if(!this.shadowRoot)return;if(!this._styleElement)this._styleElement=document.createElement("style"),this.shadowRoot.appendChild(this._styleElement);if(this._updateStyles(),!this._container){this._container=document.createElement("div"),this._container.classList.add("vc-parallax-container"),this.shadowRoot.appendChild(this._container),this._imgElement=document.createElement("img"),this._imgElement.classList.add("vc-parallax-img"),this._container.appendChild(this._imgElement),this._content=document.createElement("div"),this._content.classList.add("vc-parallax-content"),this._container.appendChild(this._content);let s=document.createElement("slot");this._content.appendChild(s)}if(this._imgElement)this._imgElement.src=this._src,this._imgElement.alt=this._alt}}customElements.define("vc-parallax",fs);var ls=fs;class xs extends HTMLElement{constructor(){super();this._selected=0,this._items=[],this._shadow=this.attachShadow({mode:"open"}),this._render()}static get observedAttributes(){return["selected"]}attributeChangedCallback(s,h,o){if(s==="selected"&&h!==o)this._selected=parseInt(o,10)||0,this._updateSelected()}connectedCallback(){this._processChildren(),this._addEventListeners()}disconnectedCallback(){this._removeEventListeners()}get selected(){return this._selected}set selected(s){if(this._selected!==s)this._selected=s,this.setAttribute("selected",s.toString()),this._updateSelected()}_processChildren(){this._items=[],this.querySelectorAll("[vc-rail-item]").forEach((h,o)=>{let r=h.getAttribute("icon")||"",b=h.getAttribute("label")||"",t=h.getAttribute("badge-count")||null;this._items.push({icon:r,label:b,badgeCount:t,element:h}),h.style.display="none"}),this._renderItems(),this._updateSelected()}_addEventListeners(){this._handleItemClick=this._handleItemClick.bind(this),this._shadow.addEventListener("click",this._handleItemClick)}_removeEventListeners(){this._shadow.removeEventListener("click",this._handleItemClick)}_handleItemClick(s){let h=s.target.closest(".rail-item");if(h){let o=parseInt(h.dataset.index,10);if(!isNaN(o))this.selected=o,this.dispatchEvent(new CustomEvent("vc-rail-change",{bubbles:!0,composed:!0,detail:{index:this.selected,item:this._items[this.selected]}}))}}_updateSelected(){this._shadow.querySelectorAll(".rail-item").forEach((h,o)=>{if(o===this._selected)h.classList.add("selected");else h.classList.remove("selected")})}_renderItems(){let s=this._shadow.querySelector(".rail-items");if(!s)return;s.innerHTML="",this._items.forEach((h,o)=>{let r=document.createElement("div");r.className="rail-item",r.dataset.index=o;let b=document.createElement("div");if(b.className="rail-icon",b.innerHTML=h.icon,r.appendChild(b),h.badgeCount){let i=document.createElement("div");i.className="rail-badge",i.textContent=h.badgeCount,b.appendChild(i)}let t=document.createElement("div");t.className="rail-label",t.textContent=h.label,r.appendChild(t),s.appendChild(r)}),this._updateSelected()}_render(){this._shadow.innerHTML=`
        <style>
          :host {
            --vc-rail-width: 72px;
            --vc-rail-background: #ffffff;
            --vc-rail-color: #5f6368;
            --vc-rail-color-selected: #1a73e8;
            --vc-rail-badge-color: #ea4335;
            --vc-rail-border-color: #dadce0;
            --vc-rail-transition: 0.2s ease;
            
            display: block;
            width: var(--vc-rail-width);
            height: 100%;
            background-color: var(--vc-rail-background);
            box-shadow: 1px 0 var(--vc-rail-border-color);
            font-family: Roboto, 'Segoe UI', Arial, sans-serif;
            user-select: none;
          }
  
          .rail-container {
            display: flex;
            flex-direction: column;
            height: 100%;
            overflow-y: auto;
            scrollbar-width: none; /* Firefox */
          }
  
          .rail-container::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Edge */
          }
  
          .rail-items {
            display: flex;
            flex-direction: column;
            padding: 8px 0;
          }
  
          .rail-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 16px 0;
            color: var(--vc-rail-color);
            cursor: pointer;
            transition: all var(--vc-rail-transition);
            position: relative;
          }
  
          .rail-item:hover {
            background-color: rgba(0, 0, 0, 0.04);
          }
  
          .rail-item.selected {
            color: var(--vc-rail-color-selected);
          }
  
          .rail-icon {
            position: relative;
            width: 24px;
            height: 24px;
            margin-bottom: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
          }
  
          .rail-badge {
            position: absolute;
            top: -4px;
            right: -8px;
            min-width: 16px;
            height: 16px;
            padding: 0 4px;
            border-radius: 8px;
            background-color: var(--vc-rail-badge-color);
            color: white;
            font-size: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
          }
  
          .rail-label {
            font-size: 12px;
            line-height: 16px;
            text-align: center;
            max-width: 68px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
          }
        </style>
        <div class="rail-container">
          <div class="rail-items"></div>
        </div>
      `}}customElements.define("vc-rail",xs);var es=xs;class ks extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._value=0,this._max=5,this._readonly=!1,this._dense=!1,this._size=24,this._color="#FFCA28",this._emptyColor="#E0E0E0",this._hoverColor="#FFA000",this._icons={full:"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z",half:"M12,15.4V6.1L13.71,10.13L18.09,10.5L14.77,13.39L15.76,17.67M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z",empty:"M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z"},this._hoverValue=null,this._focused=!1}static get observedAttributes(){return["value","max","readonly","dense","size","color","empty-color","hover-color"]}attributeChangedCallback(s,h,o){switch(s){case"value":this._value=parseFloat(o)||0;break;case"max":this._max=parseInt(o)||5;break;case"readonly":this._readonly=o!==null;break;case"dense":this._dense=o!==null;break;case"size":this._size=parseInt(o)||24;break;case"color":this._color=o||"#FFCA28";break;case"empty-color":this._emptyColor=o||"#E0E0E0";break;case"hover-color":this._hoverColor=o||"#FFA000";break}this.render()}connectedCallback(){if(this.render(),!this._readonly)this.shadowRoot.addEventListener("mousemove",this._handleMouseMove.bind(this)),this.shadowRoot.addEventListener("mouseleave",this._handleMouseLeave.bind(this)),this.shadowRoot.addEventListener("click",this._handleClick.bind(this)),this.shadowRoot.addEventListener("keydown",this._handleKeyDown.bind(this))}disconnectedCallback(){if(!this._readonly)this.shadowRoot.removeEventListener("mousemove",this._handleMouseMove),this.shadowRoot.removeEventListener("mouseleave",this._handleMouseLeave),this.shadowRoot.removeEventListener("click",this._handleClick),this.shadowRoot.removeEventListener("keydown",this._handleKeyDown)}_handleMouseMove(s){if(this._readonly)return;let h=this.shadowRoot.querySelectorAll(".rating-star"),o=this.shadowRoot.querySelector(".rating-container").getBoundingClientRect(),r=s.clientX-o.left,t=o.width/this._max,i=Math.ceil(r/t);i=Math.max(1,Math.min(i,this._max)),this._hoverValue=i,this.render()}_handleMouseLeave(){if(this._readonly)return;this._hoverValue=null,this.render()}_handleClick(s){if(this._readonly)return;if(this._hoverValue!==null)this._value=this._hoverValue,this.setAttribute("value",this._value),this.dispatchEvent(new CustomEvent("change",{bubbles:!0,composed:!0,detail:{value:this._value}}))}_handleKeyDown(s){if(this._readonly)return;let h=this._value;switch(s.key){case"ArrowRight":case"ArrowUp":h=Math.min(this._max,this._value+1);break;case"ArrowLeft":case"ArrowDown":h=Math.max(0,this._value-1);break;case"Home":h=0;break;case"End":h=this._max;break;default:return}if(h!==this._value)this._value=h,this.setAttribute("value",this._value),this.dispatchEvent(new CustomEvent("change",{bubbles:!0,composed:!0,detail:{value:this._value}})),this.render();s.preventDefault()}get value(){return this._value}set value(s){this._value=parseFloat(s)||0,this.setAttribute("value",this._value),this.render()}get max(){return this._max}set max(s){this._max=parseInt(s)||5,this.setAttribute("max",this._max),this.render()}get readonly(){return this._readonly}set readonly(s){if(this._readonly=Boolean(s),this._readonly)this.setAttribute("readonly","");else this.removeAttribute("readonly");this.render()}_renderStar(s){let h=this._hoverValue!==null?this._hoverValue:this._value,o=s<Math.floor(h),r=!o&&s===Math.floor(h)&&h%1>=0.5,b=!o&&!r,t=this._hoverValue!==null?this._hoverColor:this._color,i=b?this._icons.empty:r?this._icons.half:this._icons.full,c=b?this._emptyColor:t;return`
        <div class="rating-star" tabindex="${this._readonly?-1:0}" data-value="${s+1}">
          <svg xmlns="http://www.w3.org/2000/svg" 
               width="${this._size}" 
               height="${this._size}" 
               viewBox="0 0 24 24">
            <path d="${i}" fill="${c}" />
          </svg>
        </div>
      `}render(){let s=Array.from({length:this._max},(r,b)=>this._renderStar(b)).join(""),h=`
        rating-container
        ${this._dense?"dense":""}
        ${this._readonly?"readonly":""}
      `,o=`
        <style>
          :host {
            display: inline-block;
            --rating-spacing: ${this._dense?"2px":"4px"};
          }
          
          .rating-container {
            display: flex;
            align-items: center;
            justify-content: flex-start;
            gap: var(--rating-spacing);
            position: relative;
          }
          
          .dense {
            gap: 2px;
          }
          
          .rating-star {
            cursor: ${this._readonly?"default":"pointer"};
            display: inline-flex;
            transition: transform 0.2s ease;
          }
          
          .rating-star:not(.readonly):hover {
            transform: scale(1.1);
          }
          
          .rating-star:focus {
            outline: none;
            transform: scale(1.1);
          }
          
          .rating-value {
            margin-left: 8px;
            font-family: Roboto, -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif;
            font-size: 14px;
            color: rgba(0, 0, 0, 0.87);
          }
        </style>
      `;this.shadowRoot.innerHTML=`
        ${o}
        <div class="${h.trim()}" role="slider" aria-valuemin="0" aria-valuemax="${this._max}" aria-valuenow="${this._value}">
          ${s}
        </div>
      `}}customElements.define("vc-rating",ks);var so=ks;class $s extends HTMLElement{static get observedAttributes(){return["type","loading","elevation","height","width","boilerplate","tile"]}constructor(){super();this.attachShadow({mode:"open"}),this._type="text",this._loading=!0,this._elevation=0,this._height=null,this._width=null,this._boilerplate=!1,this._tile=!1,this.render()}connectedCallback(){this.render()}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"type":this._type=o||"text";break;case"loading":this._loading=o!=="false";break;case"elevation":this._elevation=parseInt(o,10)||0;break;case"height":this._height=o;break;case"width":this._width=o;break;case"boilerplate":this._boilerplate=o!==null&&o!=="false";break;case"tile":this._tile=o!==null&&o!=="false";break}this.render()}get type(){return this._type}set type(s){this.setAttribute("type",s)}get loading(){return this._loading}set loading(s){this.setAttribute("loading",s)}get elevation(){return this._elevation}set elevation(s){this.setAttribute("elevation",s)}get height(){return this._height}set height(s){this.setAttribute("height",s)}get width(){return this._width}set width(s){this.setAttribute("width",s)}get boilerplate(){return this._boilerplate}set boilerplate(s){if(s)this.setAttribute("boilerplate","");else this.removeAttribute("boilerplate")}get tile(){return this._tile}set tile(s){if(s)this.setAttribute("tile","");else this.removeAttribute("tile")}getTypeStyles(){let s=this._type.split(" "),h="";for(let o of s)switch(o){case"text":h+='<div class="skeleton-text"></div>';break;case"avatar":h+='<div class="skeleton-avatar"></div>';break;case"button":h+='<div class="skeleton-button"></div>';break;case"chip":h+='<div class="skeleton-chip"></div>';break;case"image":h+='<div class="skeleton-image"></div>';break;case"card":h+=`
              <div class="skeleton-card">
                <div class="skeleton-image"></div>
                <div class="skeleton-card-content">
                  <div class="skeleton-text"></div>
                  <div class="skeleton-text"></div>
                </div>
              </div>
            `;break;case"list-item":h+=`
              <div class="skeleton-list-item">
                <div class="skeleton-avatar"></div>
                <div class="skeleton-content">
                  <div class="skeleton-text"></div>
                  <div class="skeleton-text skeleton-text-small"></div>
                </div>
              </div>
            `;break;case"paragraph":h+=`
              <div class="skeleton-paragraph">
                <div class="skeleton-text"></div>
                <div class="skeleton-text"></div>
                <div class="skeleton-text"></div>
              </div>
            `;break;case"table":h+=`
              <div class="skeleton-table">
                <div class="skeleton-table-header">
                  <div class="skeleton-text"></div>
                  <div class="skeleton-text"></div>
                  <div class="skeleton-text"></div>
                </div>
                <div class="skeleton-table-row">
                  <div class="skeleton-text"></div>
                  <div class="skeleton-text"></div>
                  <div class="skeleton-text"></div>
                </div>
                <div class="skeleton-table-row">
                  <div class="skeleton-text"></div>
                  <div class="skeleton-text"></div>
                  <div class="skeleton-text"></div>
                </div>
              </div>
            `;break;default:h+=`<slot name="${o}"></slot>`}return h}getElevationClass(){if(this._elevation===0)return"";return`elevation-${Math.min(Math.max(this._elevation,0),24)}`}render(){let s=`
        :host {
          display: block;
        }
        
        .skeleton-loader {
          position: relative;
          overflow: hidden;
          width: ${this._width||"100%"};
          height: ${this._height||"auto"};
        }
        
        .skeleton-loader:not(.skeleton-boilerplate) .skeleton-loader-item > * {
          background-color: #e0e0e0;
          animation: skeleton-pulse 1.5s ease-in-out infinite;
        }
        
        .skeleton-loader.skeleton-tile {
          border-radius: 0;
        }
        
        .skeleton-loader:not(.skeleton-tile) {
          border-radius: 4px;
        }
        
        .skeleton-loader:not(.skeleton-tile) .skeleton-loader-item > * {
          border-radius: 4px;
        }
        
        .skeleton-avatar {
          width: 40px;
          height: 40px;
          border-radius: 50% !important;
        }
        
        .skeleton-text {
          height: 16px;
          border-radius: 4px;
          margin-bottom: 8px;
          width: 100%;
        }
        
        .skeleton-text-small {
          width: 70%;
        }
        
        .skeleton-button {
          width: 80px;
          height: 36px;
          border-radius: 4px;
        }
        
        .skeleton-chip {
          width: 70px;
          height: 32px;
          border-radius: 16px !important;
        }
        
        .skeleton-image {
          width: 100%;
          height: 200px;
        }
        
        .skeleton-card {
          width: 100%;
        }
        
        .skeleton-card-content {
          padding: 16px;
        }
        
        .skeleton-list-item {
          display: flex;
          align-items: center;
          gap: 16px;
          padding: 8px 0;
        }
        
        .skeleton-content {
          flex: 1;
        }
        
        .skeleton-paragraph {
          width: 100%;
        }
        
        .skeleton-table {
          width: 100%;
        }
        
        .skeleton-table-header {
          display: flex;
          justify-content: space-between;
          padding: 16px 0;
          border-bottom: 2px solid #f5f5f5;
        }
        
        .skeleton-table-header .skeleton-text {
          width: 30%;
        }
        
        .skeleton-table-row {
          display: flex;
          justify-content: space-between;
          padding: 16px 0;
          border-bottom: 1px solid #f5f5f5;
        }
        
        .skeleton-table-row .skeleton-text {
          width: 30%;
        }
        
        /* Elevation classes */
        .elevation-1 { box-shadow: 0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12); }
        .elevation-2 { box-shadow: 0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12); }
        .elevation-3 { box-shadow: 0 3px 3px -2px rgba(0,0,0,.2), 0 3px 4px 0 rgba(0,0,0,.14), 0 1px 8px 0 rgba(0,0,0,.12); }
        .elevation-4 { box-shadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12); }
        .elevation-5 { box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 5px 8px 0 rgba(0,0,0,.14), 0 1px 14px 0 rgba(0,0,0,.12); }
        
        @keyframes skeleton-pulse {
          0% {
            opacity: 1;
          }
          50% {
            opacity: 0.5;
          }
          100% {
            opacity: 1;
          }
        }
        
        /* Don't animate when boilerplate is set */
        .skeleton-boilerplate .skeleton-loader-item > * {
          background-color: #f5f5f5;
          animation: none;
        }
        
        /* Hide when loading is false */
        .skeleton-loader.not-loading {
          display: none;
        }
      `,h=["skeleton-loader",this._boilerplate?"skeleton-boilerplate":"",this._tile?"skeleton-tile":"",this._loading?"":"not-loading",this.getElevationClass()].filter(Boolean).join(" ");this.shadowRoot.innerHTML=`
        <style>${s}</style>
        <div class="${h}">
          <div class="skeleton-loader-item">
            ${this.getTypeStyles()}
          </div>
          <slot></slot>
        </div>
      `}}customElements.define("vc-skeleton-loader",$s);var oo=$s;class ys extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._config={autoDraw:!0,autoDrawDuration:2000,autoDrawEasing:"ease",color:"primary",gradient:null,gradientDirection:"top",height:75,labels:[],lineWidth:2,padding:8,showLabels:!1,smooth:!1,type:"trend",value:[],fill:!1,fillColor:void 0,fillOpacity:0.2},this._data=[],this._paths=[],this._points=[]}static get observedAttributes(){return["auto-draw","auto-draw-duration","auto-draw-easing","color","gradient","gradient-direction","height","labels","line-width","padding","show-labels","smooth","type","value","fill","fill-color","fill-opacity"]}attributeChangedCallback(s,h,o){if(h===o)return;let r=s.replace(/-([a-z])/g,(b)=>b[1].toUpperCase());if(s==="value"||s==="labels")try{this._config[r]=JSON.parse(o)}catch(b){console.error(`Error parsing ${s} attribute: ${b.message}`)}else if(s==="auto-draw"||s==="show-labels"||s==="smooth"||s==="fill")this._config[r]=o!==null&&o!=="false";else if(s==="height"||s==="line-width"||s==="padding"||s==="auto-draw-duration"||s==="fill-opacity")this._config[r]=parseFloat(o);else this._config[r]=o;this.render()}connectedCallback(){if(!this.hasAttribute("value")&&this.textContent.trim())try{this._config.value=JSON.parse(this.textContent.trim())}catch(s){console.error(`Error parsing value from content: ${s.message}`)}this.render()}get value(){return this._config.value}set value(s){this._config.value=s,this.render()}_genPoints(){let{value:s,height:h,padding:o,lineWidth:r}=this._config;if(!s||s.length<2)return[];let b=Math.min(...s),t=Math.max(...s),i=s.length,c={minX:o,minY:o+r/2,maxX:this.clientWidth-o,maxY:h-o-r/2},_=t-b||1,d=(c.maxY-c.minY)/_;return s.map((f,x)=>{let k=c.minX+x*(c.maxX-c.minX)/(i-1),z=c.maxY-(f-b)*d;return{x:k,y:z}})}_genPath(){let{smooth:s,type:h}=this._config,o=this._points;if(!o.length)return"";if(h==="bar"){let b=(this.clientWidth-2*this._config.padding)/o.length,t=b*0.8,i=b*0.2;return o.map((c,_)=>{return`M${c.x-t/2},${this._config.height-this._config.padding} V${c.y} h${t} V${this._config.height-this._config.padding}`}).join(" ")}let r=s?this._getCurve(o):this._getLine(o);if(h==="area"){let b=o[0],t=o[o.length-1];return`M${b.x},${this._config.height-this._config.padding} ${r} L${t.x},${this._config.height-this._config.padding} Z`}return r}_genFillPath(){if(!this._config.fill)return"";let s=this._points;if(!s.length)return"";let{smooth:h,height:o,padding:r}=this._config,b=s[0],t=s[s.length-1],i=o-r,c=h?this._getCurve(s):this._getLine(s);return`M${b.x},${i} V${b.y} ${c} V${i} Z`}_getLine(s){return`M${s[0].x},${s[0].y} `+s.slice(1).map((h)=>`L${h.x},${h.y}`).join(" ")}_getCurve(s){if(s.length<3)return this._getLine(s);let h=`M${s[0].x},${s[0].y}`;for(let o=0;o<s.length-1;o++){let r=s[o-1]||s[0],b=s[o],t=s[o+1],i=s[o+2]||t,c=b.x+(t.x-r.x)/6,_=b.y+(t.y-r.y)/6,d=t.x-(i.x-b.x)/6,f=t.y-(i.y-b.y)/6;h+=` C${c},${_} ${d},${f} ${t.x},${t.y}`}return h}_genGradient(){let{gradient:s,gradientDirection:h,color:o,fillColor:r}=this._config;if(!s&&!r)return"";let b="";if(h==="top")b='x1="0%" y1="100%" x2="0%" y2="0%"';else if(h==="right")b='x1="0%" y1="0%" x2="100%" y2="0%"';else if(h==="bottom")b='x1="0%" y1="0%" x2="0%" y2="100%"';else if(h==="left")b='x1="100%" y1="0%" x2="0%" y2="0%"';let t="";if(s)if(Array.isArray(s))t=s.map((i,c)=>`<stop offset="${c/(s.length-1)}" stop-color="${i}" />`).join("");else console.error("Gradient must be an array of colors");else{let i=r||o;t=`
          <stop offset="0" stop-color="${i}" stop-opacity="${this._config.fillOpacity}" />
          <stop offset="1" stop-color="${i}" stop-opacity="0" />
        `}return`
        <defs>
          <linearGradient id="grad-${this._uid}" ${b}>
            ${t}
          </linearGradient>
        </defs>
      `}_genAutoDrawAnimation(){if(!this._config.autoDraw)return"";let{autoDrawDuration:s,autoDrawEasing:h}=this._config,o=this._paths.length>0?this._paths[0].getTotalLength():0;return`
        <style>
          @keyframes sparkline-auto-draw {
            0% {
              stroke-dashoffset: ${o};
            }
            100% {
              stroke-dashoffset: 0;
            }
          }
          .sparkline-path {
            stroke-dasharray: ${o};
            stroke-dashoffset: ${o};
            animation: sparkline-auto-draw ${s}ms ${h} forwards;
          }
        </style>
      `}_genLabels(){if(!this._config.showLabels)return"";let{labels:s,value:h,padding:o}=this._config,r=this._points;if(!r.length)return"";let b=s.length?s:h;return r.map((t,i)=>{let c=b[i]!==void 0?b[i]:"";return`
          <text
            x="${t.x}"
            y="${t.y-8}"
            text-anchor="middle"
            font-size="10"
            fill="${this._config.color}"
          >${c}</text>
        `}).join("")}_getColor(s){return{primary:"#1976D2",secondary:"#424242",success:"#4CAF50",info:"#2196F3",warning:"#FFC107",error:"#FF5252"}[s]||s}get _uid(){if(!this.__uid)this.__uid=Math.random().toString(36).substring(2,9);return this.__uid}render(){let s=this.clientWidth||300;this._points=this._genPoints();let h=this._genPath(),o=this._genFillPath(),r=`
        :host {
          display: inline-block;
          width: 100%;
          line-height: 0;
        }
        svg {
          overflow: visible;
        }
      `,b=this._getColor(this._config.color),t=this._config.fillColor?this._getColor(this._config.fillColor):b;this.shadowRoot.innerHTML=`
        <style>${r}</style>
        ${this._genAutoDrawAnimation()}
        <svg width="100%" height="${this._config.height}" preserveAspectRatio="none">
          ${this._genGradient()}
          ${o?`<path 
            d="${o}" 
            fill="${this._config.gradient?`url(#grad-${this._uid})`:t}" 
            opacity="${this._config.fillOpacity}" 
          />`:""}
          <path 
            class="sparkline-path" 
            d="${h}" 
            fill="none" 
            stroke="${b}" 
            stroke-width="${this._config.lineWidth}" 
            stroke-linecap="round" 
            stroke-linejoin="round"
          />
          ${this._genLabels()}
        </svg>
      `,this._paths=Array.from(this.shadowRoot.querySelectorAll(".sparkline-path"))}}customElements.define("vc-sparkline",ys);var ho=ys;class As extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._value="",this._focused=!1,this._disabled=!1,this._readonly=!1,this._outlined=!1,this._rows=5,this._maxRows=null,this._autogrow=!1,this._counter=!1,this._maxlength=-1,this._clearable=!1,this._persistentHint=!1,this._persistentPlaceholder=!1,this._onFocus=this._onFocus.bind(this),this._onBlur=this._onBlur.bind(this),this._onInput=this._onInput.bind(this),this._onClear=this._onClear.bind(this),this._adjustHeight=this._adjustHeight.bind(this)}static get observedAttributes(){return["label","placeholder","value","disabled","readonly","outlined","rows","maxrows","autogrow","counter","maxlength","clearable","hint","error","success","persistent-hint","persistent-placeholder"]}connectedCallback(){if(this.render(),this._setupEventListeners(),this._autogrow)setTimeout(()=>this._adjustHeight(),0)}disconnectedCallback(){this._removeEventListeners()}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"value":if(this._value=o||"",this._updateTextareaValue(),this._autogrow)this._adjustHeight();break;case"disabled":this._disabled=o!==null,this._updateDisabledState();break;case"readonly":this._readonly=o!==null,this._updateReadonlyState();break;case"outlined":this._outlined=o!==null,this._updateOutlinedState();break;case"rows":this._rows=parseInt(o)||5,this._updateRows();break;case"maxrows":if(this._maxRows=o?parseInt(o):null,this._autogrow)this._adjustHeight();break;case"autogrow":if(this._autogrow=o!==null,this._autogrow)this._adjustHeight();break;case"counter":this._counter=o!==null,this._updateCounter();break;case"maxlength":this._maxlength=o?parseInt(o):-1,this._updateMaxLength(),this._updateCounter();break;case"clearable":this._clearable=o!==null,this._updateClearButton();break;case"persistent-hint":this._persistentHint=o!==null,this._updateHintVisibility();break;case"persistent-placeholder":this._persistentPlaceholder=o!==null,this._updatePlaceholderBehavior();break;default:this.render()}}get value(){return this._value}set value(s){if(this._value=s||"",this.setAttribute("value",this._value),this._updateTextareaValue(),this._autogrow)this._adjustHeight()}get disabled(){return this._disabled}set disabled(s){if(this._disabled=!!s,this._disabled)this.setAttribute("disabled","");else this.removeAttribute("disabled");this._updateDisabledState()}get readonly(){return this._readonly}set readonly(s){if(this._readonly=!!s,this._readonly)this.setAttribute("readonly","");else this.removeAttribute("readonly");this._updateReadonlyState()}_onFocus(s){if(this._disabled||this._readonly)return;this._focused=!0,this.shadowRoot.querySelector(".vc-textarea-container").classList.add("focused"),this.dispatchEvent(new CustomEvent("focus",{detail:{value:this._value}}))}_onBlur(s){this._focused=!1,this.shadowRoot.querySelector(".vc-textarea-container").classList.remove("focused"),this._updateHintVisibility(),this.dispatchEvent(new CustomEvent("blur",{detail:{value:this._value}}))}_onInput(s){if(this._disabled||this._readonly)return;if(this._value=s.target.value,this._maxlength>=0&&this._value.length>this._maxlength)this._value=this._value.slice(0,this._maxlength),s.target.value=this._value;if(this._updateCounter(),this._autogrow)this._adjustHeight();this.dispatchEvent(new CustomEvent("input",{detail:{value:this._value}})),this.dispatchEvent(new CustomEvent("change",{detail:{value:this._value}}))}_onClear(s){if(this._disabled||this._readonly)return;if(this._value="",this._updateTextareaValue(),this._updateCounter(),this._autogrow)this._adjustHeight();this.shadowRoot.querySelector("textarea").focus(),this.dispatchEvent(new CustomEvent("input",{detail:{value:this._value}})),this.dispatchEvent(new CustomEvent("change",{detail:{value:this._value}})),this.dispatchEvent(new CustomEvent("clear"))}_setupEventListeners(){let s=this.shadowRoot.querySelector("textarea");s.addEventListener("focus",this._onFocus),s.addEventListener("blur",this._onBlur),s.addEventListener("input",this._onInput);let h=this.shadowRoot.querySelector(".vc-textarea-clear-button");if(h)h.addEventListener("click",this._onClear)}_removeEventListeners(){let s=this.shadowRoot.querySelector("textarea");if(s)s.removeEventListener("focus",this._onFocus),s.removeEventListener("blur",this._onBlur),s.removeEventListener("input",this._onInput);let h=this.shadowRoot.querySelector(".vc-textarea-clear-button");if(h)h.removeEventListener("click",this._onClear)}_updateTextareaValue(){let s=this.shadowRoot.querySelector("textarea");if(s)s.value=this._value}_updateDisabledState(){let s=this.shadowRoot.querySelector("textarea");if(s)s.disabled=this._disabled;let h=this.shadowRoot.querySelector(".vc-textarea-container");if(h)if(this._disabled)h.classList.add("disabled");else h.classList.remove("disabled")}_updateReadonlyState(){let s=this.shadowRoot.querySelector("textarea");if(s)s.readOnly=this._readonly;let h=this.shadowRoot.querySelector(".vc-textarea-container");if(h)if(this._readonly)h.classList.add("readonly");else h.classList.remove("readonly")}_updateOutlinedState(){let s=this.shadowRoot.querySelector(".vc-textarea-container");if(s)if(this._outlined)s.classList.add("outlined");else s.classList.remove("outlined")}_updateRows(){let s=this.shadowRoot.querySelector("textarea");if(s)s.rows=this._rows}_updateMaxLength(){let s=this.shadowRoot.querySelector("textarea");if(s)if(this._maxlength>=0)s.maxLength=this._maxlength;else s.removeAttribute("maxlength")}_updateCounter(){let s=this.shadowRoot.querySelector(".vc-textarea-counter");if(s)if(this._counter)if(s.style.display="block",this._maxlength>=0)s.textContent=`${this._value.length} / ${this._maxlength}`;else s.textContent=`${this._value.length}`;else s.style.display="none"}_updateClearButton(){let s=this.shadowRoot.querySelector(".vc-textarea-clear-button");if(s)if(this._clearable&&this._value&&!this._disabled&&!this._readonly)s.style.display="flex";else s.style.display="none"}_updateHintVisibility(){let s=this.shadowRoot.querySelector(".vc-textarea-hint");if(s)if(this._persistentHint||this._focused&&this.getAttribute("hint"))s.style.display="block";else s.style.display="none"}_updatePlaceholderBehavior(){let s=this.shadowRoot.querySelector(".vc-textarea-label");if(s)if(this._persistentPlaceholder)s.classList.add("persistent-placeholder");else s.classList.remove("persistent-placeholder")}_adjustHeight(){let s=this.shadowRoot.querySelector("textarea");if(!s||!this._autogrow)return;s.style.height="auto";let h=s.scrollHeight;if(this._maxRows){let o=window.getComputedStyle(s),r=parseInt(o.lineHeight)||20,b=this._maxRows*r;if(h>b)h=b,s.style.overflowY="auto";else s.style.overflowY="hidden"}s.style.height=`${h}px`}render(){let s=this.getAttribute("label")||"",h=this.getAttribute("placeholder")||"",o=this.getAttribute("hint")||"",r=this.getAttribute("error")||"",b=this.getAttribute("success")||"",t="";if(r)t="error";else if(b)t="success";let i=this._value||this._focused||this._persistentPlaceholder;this.shadowRoot.innerHTML=`
        <style>
          :host {
            display: inline-block;
            width: 100%;
            font-family: Roboto, -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            font-size: 16px;
            color: rgba(0, 0, 0, 0.87);
            --primary-color: #6200ee;
            --error-color: #b00020;
            --success-color: #4caf50;
            --disabled-color: rgba(0, 0, 0, 0.38);
            --border-color: rgba(0, 0, 0, 0.42);
            --hover-border-color: rgba(0, 0, 0, 0.87);
            --background-color: transparent;
          }
          
          .vc-textarea-container {
            position: relative;
            width: 100%;
            min-height: 56px;
            border-radius: 4px 4px 0 0;
            background-color: var(--background-color);
            transition: all 0.2s ease;
          }
          
          .vc-textarea-container.outlined {
            border-radius: 4px;
            border: 1px solid var(--border-color);
            background-color: transparent;
            transition: border-color 0.2s ease;
          }
          
          .vc-textarea-container.outlined.focused {
            border-color: var(--primary-color);
            border-width: 2px;
          }
          
          .vc-textarea-container.outlined.error {
            border-color: var(--error-color);
          }
          
          .vc-textarea-container.outlined.success {
            border-color: var(--success-color);
          }
          
          .vc-textarea-container:not(.outlined):after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 1px;
            background-color: var(--border-color);
            transition: background-color 0.2s ease;
          }
          
          .vc-textarea-container.focused:not(.outlined):after {
            height: 2px;
            background-color: var(--primary-color);
          }
          
          .vc-textarea-container.error:not(.outlined):after {
            background-color: var(--error-color);
          }
          
          .vc-textarea-container.success:not(.outlined):after {
            background-color: var(--success-color);
          }
          
          .vc-textarea-container.disabled {
            opacity: 0.6;
            pointer-events: none;
          }
          
          .vc-textarea-label {
            position: absolute;
            top: 16px;
            left: 12px;
            font-size: 16px;
            color: rgba(0, 0, 0, 0.6);
            pointer-events: none;
            transition: all 0.2s ease;
            transform-origin: left top;
            z-index: 1;
          }
          
          .vc-textarea-container.focused .vc-textarea-label,
          .vc-textarea-label.elevated {
            transform: translateY(-24px) scale(0.75);
          }
          
          .vc-textarea-container.focused .vc-textarea-label {
            color: var(--primary-color);
          }
          
          .vc-textarea-container.error .vc-textarea-label {
            color: var(--error-color);
          }
          
          .vc-textarea-container.success .vc-textarea-label {
            color: var(--success-color);
          }
          
          .vc-textarea-wrapper {
            position: relative;
            width: 100%;
            padding: 16px 12px 6px;
            box-sizing: border-box;
          }
          
          .vc-textarea-container.outlined .vc-textarea-wrapper {
            padding-top: 20px;
          }
          
          textarea {
            width: 100%;
            border: none;
            outline: none;
            background: transparent;
            font-family: inherit;
            font-size: 16px;
            line-height: 1.5;
            padding: 0;
            margin: 0;
            resize: vertical;
            color: rgba(0, 0, 0, 0.87);
          }
          
          textarea:disabled {
            color: var(--disabled-color);
          }
          
          .vc-textarea-hint,
          .vc-textarea-error,
          .vc-textarea-success {
            font-size: 12px;
            padding: 4px 12px 0;
            min-height: 16px;
            transition: color 0.2s ease;
          }
          
          .vc-textarea-hint {
            color: rgba(0, 0, 0, 0.6);
          }
          
          .vc-textarea-error {
            color: var(--error-color);
          }
          
          .vc-textarea-success {
            color: var(--success-color);
          }
          
          .vc-textarea-counter {
            font-size: 12px;
            text-align: right;
            padding: 4px 12px 0;
            color: rgba(0, 0, 0, 0.6);
          }
          
          .vc-textarea-clear-button {
            position: absolute;
            right: 12px;
            top: 16px;
            width: 24px;
            height: 24px;
            display: none;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            color: rgba(0, 0, 0, 0.54);
            border-radius: 50%;
            background: transparent;
            transition: background-color 0.2s ease;
            z-index: 2;
          }
          
          .vc-textarea-clear-button:hover {
            background-color: rgba(0, 0, 0, 0.04);
          }
          
          .vc-textarea-clear-button svg {
            width: 18px;
            height: 18px;
          }
        </style>
        
        <div class="vc-textarea-container ${this._outlined?"outlined":""} ${t} ${this._focused?"focused":""} ${this._disabled?"disabled":""} ${this._readonly?"readonly":""}">
          ${s?`<label class="vc-textarea-label ${i?"elevated":""}">${s}</label>`:""}
          
          <div class="vc-textarea-wrapper">
            <textarea 
              rows="${this._rows}" 
              placeholder="${i?h:""}"
              ${this._disabled?"disabled":""}
              ${this._readonly?"readonly":""}
              ${this._maxlength>=0?`maxlength="${this._maxlength}"`:""}
            >${this._value}</textarea>
            
            ${this._clearable?`
              <div class="vc-textarea-clear-button" style="display: ${this._value&&!this._disabled&&!this._readonly?"flex":"none"}">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                  <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" fill="currentColor"/>
                </svg>
              </div>
            `:""}
          </div>
          
          ${r?`<div class="vc-textarea-error">${r}</div>`:""}
          ${b&&!r?`<div class="vc-textarea-success">${b}</div>`:""}
          ${o&&!r&&!b?`<div class="vc-textarea-hint" style="display: ${this._persistentHint||this._focused?"block":"none"}">${o}</div>`:""}
          
          ${this._counter?`<div class="vc-textarea-counter">${this._value.length}${this._maxlength>=0?` / ${this._maxlength}`:""}</div>`:""}
        </div>
      `,this._setupEventListeners()}}customElements.define("vc-textarea",As);var ro=As;class zs extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._align="start",this._dense=!1,this._reverse=!1,this._side="end",this._lineThickness="2px",this._lineColor="rgba(0, 0, 0, 0.12)",this._init()}_init(){this.render()}static get observedAttributes(){return["align","dense","reverse","side","line-thickness","line-color"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"align":this._align=o||"start";break;case"dense":this._dense=o!==null;break;case"reverse":this._reverse=o!==null;break;case"side":this._side=o||"end";break;case"line-thickness":this._lineThickness=o||"2px";break;case"line-color":this._lineColor=o||"rgba(0, 0, 0, 0.12)";break}this.render()}get align(){return this._align}set align(s){this.setAttribute("align",s)}get dense(){return this._dense}set dense(s){if(s)this.setAttribute("dense","");else this.removeAttribute("dense")}get reverse(){return this._reverse}set reverse(s){if(s)this.setAttribute("reverse","");else this.removeAttribute("reverse")}get side(){return this._side}set side(s){this.setAttribute("side",s)}get lineThickness(){return this._lineThickness}set lineThickness(s){this.setAttribute("line-thickness",s)}get lineColor(){return this._lineColor}set lineColor(s){this.setAttribute("line-color",s)}connectedCallback(){this.render(),new MutationObserver(()=>this.render()).observe(this,{childList:!0})}render(){let s=`
        :host {
          display: block;
          position: relative;
          padding: 24px 0;
        }
        
        .timeline-line {
          position: absolute;
          top: 0;
          bottom: 0;
          width: ${this._lineThickness};
          background-color: ${this._lineColor};
        }
        
        .timeline-container {
          position: relative;
          display: flex;
          flex-direction: column;
          ${this._reverse?"flex-direction: column-reverse;":""}
          padding: 0;
          margin: 0;
          list-style-type: none;
        }
        
        ${this._side==="start"?".timeline-line { left: 0; }":this._side==="end"?".timeline-line { right: 0; }":".timeline-line { left: 50%; transform: translateX(-50%); }"}
        
        .timeline-item-slots {
          display: flex;
          flex: 1 1 auto;
          justify-content: space-between;
          align-items: ${this._align};
          padding: ${this._dense?"8px 0":"16px 0"};
          position: relative;
        }
        
        ${this._side==="center"?`
          .timeline-item:nth-child(odd) .timeline-item-slots {
            flex-direction: row-reverse;
          }
          `:""}
      `,h=Array.from(this.children).filter((b)=>b.tagName.toLowerCase()==="vc-timeline-item"),o=this._reverse?[...h].reverse():h,r="";o.forEach((b,t)=>{let i=b.cloneNode(!0);i.setAttribute("index",t),r+=i.outerHTML}),this.shadowRoot.innerHTML=`
        <style>${s}</style>
        <div class="timeline-line"></div>
        <div class="timeline-container">
          ${r}
        </div>
      `}}class ps extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this._dotColor="primary",this._dot="",this._fillDot=!1,this._hideDot=!1,this._size="small",this._init()}_init(){this.render()}static get observedAttributes(){return["dot-color","dot","fill-dot","hide-dot","size"]}attributeChangedCallback(s,h,o){if(h===o)return;switch(s){case"dot-color":this._dotColor=o||"primary";break;case"dot":this._dot=o||"";break;case"fill-dot":this._fillDot=o!==null;break;case"hide-dot":this._hideDot=o!==null;break;case"size":this._size=o||"small";break}this.render()}get dotColor(){return this._dotColor}set dotColor(s){this.setAttribute("dot-color",s)}get dot(){return this._dot}set dot(s){this.setAttribute("dot",s)}get fillDot(){return this._fillDot}set fillDot(s){if(s)this.setAttribute("fill-dot","");else this.removeAttribute("fill-dot")}get hideDot(){return this._hideDot}set hideDot(s){if(s)this.setAttribute("hide-dot","");else this.removeAttribute("hide-dot")}get size(){return this._size}set size(s){this.setAttribute("size",s)}connectedCallback(){this.render()}getColorClass(s){return{primary:"#1976D2",secondary:"#424242",success:"#4CAF50",info:"#2196F3",warning:"#FFC107",error:"#FF5252"}[s]||s}getDotSize(){let s={"x-small":"16px",small:"24px",default:"32px",large:"48px","x-large":"64px"};return s[this._size]||s.small}render(){let s=this.closest("vc-timeline"),h=s?s.side:"end",o=this.getDotSize(),r=this.getColorClass(this._dotColor),b=`
        :host {
          display: block;
          position: relative;
        }
        
        .timeline-item {
          display: flex;
          width: 100%;
        }
        
        .timeline-item-dot {
          display: flex;
          align-items: center;
          justify-content: center;
          position: absolute;
          background-color: ${this._fillDot?r:"#FFFFFF"};
          border: ${this._fillDot?"none":`2px solid ${r}`};
          border-radius: 50%;
          width: ${o};
          height: ${o};
          z-index: 2;
          ${this._hideDot?"display: none;":""}
        }
        
        .timeline-item-content {
          flex: 1;
          padding: 0 16px;
          position: relative;
        }
        
        ${h==="start"?`.timeline-item-dot { left: -${parseInt(o)/2}px; }`:h==="end"?`.timeline-item-dot { right: -${parseInt(o)/2}px; }`:".timeline-item-dot { left: 50%; transform: translateX(-50%); }"}
        
        .opposite-slot {
          flex: 1;
          padding: 0 16px;
          text-align: ${h==="start"?"right":"left"};
        }
      `,t=this.querySelector('div[slot="opposite"]'),i=t?t.innerHTML:"",c=this._dot||"",_="",d=document.createElement("div");Array.from(this.childNodes).forEach((f)=>{if(f.nodeType===1){if(!f.hasAttribute("slot"))d.appendChild(f.cloneNode(!0))}else d.appendChild(f.cloneNode(!0))}),_=d.innerHTML,this.shadowRoot.innerHTML=`
        <style>${b}</style>
        <div class="timeline-item">
          <div class="timeline-item-slots">
            ${h==="center"?`<div class="opposite-slot">${i}</div>`:""}
            
            <div class="timeline-item-content">
              ${_}
            </div>
            
            ${h!=="center"?`<div class="opposite-slot">${i}</div>`:""}
          </div>
          
          <div class="timeline-item-dot">
            ${c}
          </div>
        </div>
      `}}customElements.define("vc-timeline",zs);customElements.define("vc-timeline-item",ps);class Ls extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}),this.render()}static get observedAttributes(){return["title","color","elevation"]}attributeChangedCallback(s,h,o){if(h!==o)this.render()}connectedCallback(){this.setupEventListeners()}disconnectedCallback(){this.cleanupEventListeners()}setupEventListeners(){let s=this.shadowRoot.querySelector(".vc-top-app-bar__navigation-icon");if(s)s.addEventListener("click",this.handleNavigationClick.bind(this));this.shadowRoot.querySelectorAll(".vc-top-app-bar__action-item").forEach((o)=>{o.addEventListener("click",this.handleActionItemClick.bind(this))})}cleanupEventListeners(){let s=this.shadowRoot.querySelector(".vc-top-app-bar__navigation-icon");if(s)s.removeEventListener("click",this.handleNavigationClick.bind(this));this.shadowRoot.querySelectorAll(".vc-top-app-bar__action-item").forEach((o)=>{o.removeEventListener("click",this.handleActionItemClick.bind(this))})}handleNavigationClick(s){this.dispatchEvent(new CustomEvent("navigation-click",{bubbles:!0,composed:!0,detail:{originalEvent:s}}))}handleActionItemClick(s){let h=s.currentTarget,o=Array.from(this.shadowRoot.querySelectorAll(".vc-top-app-bar__action-item")).indexOf(h);this.dispatchEvent(new CustomEvent("action-click",{bubbles:!0,composed:!0,detail:{index:o,originalEvent:s}}))}render(){let s=this.getAttribute("title")||"App Bar",h=this.getAttribute("color")||"primary",o=this.hasAttribute("elevation")?"vc-top-app-bar--elevated":"";this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: block;
          font-family: Roboto, 'Helvetica Neue', sans-serif;
        }
        
        .vc-top-app-bar {
          display: flex;
          flex-direction: row;
          align-items: center;
          padding: 0 16px;
          width: 100%;
          height: 56px;
          box-sizing: border-box;
          background-color: var(--vc-top-app-bar-color, #6200ee);
          color: white;
          z-index: 4;
        }
        
        .vc-top-app-bar--elevated {
          box-shadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12);
        }
        
        .vc-top-app-bar--primary {
          background-color: #6200ee;
        }
        
        .vc-top-app-bar--secondary {
          background-color: #03dac6;
          color: rgba(0, 0, 0, 0.87);
        }
        
        .vc-top-app-bar--success {
          background-color: #4caf50;
        }
        
        .vc-top-app-bar--danger {
          background-color: #f44336;
        }
        
        .vc-top-app-bar--warning {
          background-color: #ff9800;
          color: rgba(0, 0, 0, 0.87);
        }
        
        .vc-top-app-bar--info {
          background-color: #2196f3;
        }
        
        .vc-top-app-bar__row {
          display: flex;
          position: relative;
          height: 56px;
          width: 100%;
          align-items: center;
        }
        
        .vc-top-app-bar__section {
          display: inline-flex;
          flex: 1 1 auto;
          align-items: center;
          min-width: 0;
          z-index: 1;
        }
        
        .vc-top-app-bar__section--align-start {
          justify-content: flex-start;
          order: -1;
        }
        
        .vc-top-app-bar__section--align-end {
          justify-content: flex-end;
          order: 1;
        }
        
        .vc-top-app-bar__title {
          font-size: 20px;
          font-weight: 500;
          letter-spacing: 0.15px;
          padding-left: 16px;
          text-overflow: ellipsis;
          white-space: nowrap;
          overflow: hidden;
          z-index: 1;
        }
        
        .vc-top-app-bar__navigation-icon,
        .vc-top-app-bar__action-item {
          display: flex;
          justify-content: center;
          align-items: center;
          width: 48px;
          height: 48px;
          padding: 12px;
          border: none;
          background-color: transparent;
          color: inherit;
          cursor: pointer;
          border-radius: 50%;
          box-sizing: border-box;
          transition: background-color 0.15s;
        }
        
        .vc-top-app-bar__navigation-icon:hover,
        .vc-top-app-bar__action-item:hover {
          background-color: rgba(255, 255, 255, 0.1);
        }
        
        .vc-top-app-bar--secondary .vc-top-app-bar__navigation-icon:hover,
        .vc-top-app-bar--warning .vc-top-app-bar__navigation-icon:hover,
        .vc-top-app-bar--secondary .vc-top-app-bar__action-item:hover,
        .vc-top-app-bar--warning .vc-top-app-bar__action-item:hover {
          background-color: rgba(0, 0, 0, 0.04);
        }
      </style>
      
      <div class="vc-top-app-bar vc-top-app-bar--${h} ${o}">
        <div class="vc-top-app-bar__row">
          <section class="vc-top-app-bar__section vc-top-app-bar__section--align-start">
            <slot name="navigation-icon">
              <!-- Default navigation icon if none provided -->
              <button class="vc-top-app-bar__navigation-icon">
                <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
                  <path d="M0 0h24v24H0z" fill="none"/>
                  <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z" fill="currentColor"/>
                </svg>
              </button>
            </slot>
            <span class="vc-top-app-bar__title">${s}</span>
            <slot name="title-suffix"></slot>
          </section>
          
          <section class="vc-top-app-bar__section vc-top-app-bar__section--align-end">
            <slot name="actions"></slot>
          </section>
        </div>
      </div>
    `}}customElements.define("vc-top-app-bar",Ls);var bo=Ls;class Ms extends HTMLElement{static get observedAttributes(){return["size","grow","direction"]}constructor(){super();this.attachShadow({mode:"open"}),this.render()}connectedCallback(){this.render()}attributeChangedCallback(){this.render()}get size(){return this.getAttribute("size")||"1"}get grow(){return this.hasAttribute("grow")}get direction(){return this.getAttribute("direction")||"both"}render(){let s=document.createElement("style");s.textContent=`
        :host {
          display: block;
          --size-multiplier: ${this.size};
          --space-amount: calc(var(--size-multiplier) * 8px);
        }
        
        :host([grow]) {
          flex-grow: 1;
        }
        
        :host([direction="vertical"]) {
          height: var(--space-amount);
          min-height: var(--space-amount);
          width: initial;
          min-width: initial;
        }
        
        :host([direction="horizontal"]) {
          width: var(--space-amount);
          min-width: var(--space-amount);
          height: initial;
          min-height: initial;
        }
        
        :host([direction="both"]) {
          width: var(--space-amount);
          min-width: var(--space-amount);
          height: var(--space-amount);
          min-height: var(--space-amount);
        }
      `,this.shadowRoot.innerHTML="",this.shadowRoot.appendChild(s)}}customElements.define("vc-spacer",Ms);var to=Ms;export{bo as TopAppBar,Os as Tooltip,zs as Timeline,Gs as TextField,ro as TextArea,m as Tabs,Ps as Table,v as Tab,Ns as Switch,e as Stepper,ss as Step,ho as Sparkline,to as Spacer,Rs as Snackbar,Us as Slider,oo as SkeletonLoader,Es as Select,Is as Row,so as Rating,es as Rail,Ws as Radio,Cs as Progress,ls as Parallax,Vs as OTPInput,Ts as Menu,X as ListItem,Z as List,Y as ImageListItem,Q as ImageList,as as Image,Ys as Icon,ns as FileInput,Js as Fab,rs as ExpansionPanels,bs as ExpansionPanel,Fs as Drawer,Qs as Divider,Ss as Dialog,Ds as DatePicker,Bs as Col,Zs as Chip,us as Checkbox,vs as Carousel,Ks as Card,Xs as Button,ws as BtnToggle,os as Breadcrumbs,hs as BreadcrumbItem,ms as Banner,Hs as Badge,qs as Avatar};
